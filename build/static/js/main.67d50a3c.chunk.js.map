{"version":3,"sources":["AddButton/AddButton.js","ApiContext.js","notes-helpers.js","config.js","NoteListNav/NoteListNav.js","NotefulError.js","NotePageNav/NotePageNav.js","EditNote/EditNote.js","Note/Note.js","NoteListMain/NoteListMain.js","NotePageMain/NotePageMain.js","NotefulForm/NotefulForm.js","AddFolder/AddFolder.js","AddNote/ValidationError.js","AddNote/AddNote.js","EditFolderForm/EditFolderForm.js","App/App.js","index.js"],"names":["NavAddButton","props","tag","className","childrenm","otherProps","Object","objectWithoutProperties","React","createElement","objectSpread","join","children","defaultProps","createContext","render","findNote","notes","arguments","length","undefined","noteId","find","note","id","Number","config","API_ENDPOINT","NoteListNav","handleClickDelete","e","preventDefault","folderId","_this","fetch","concat","method","then","res","console","log","ok","json","Promise","reject","context","deleteFolder","catch","error","handleClickEdit","updateFolder","_this2","this","_this$context","_this$context$folders","folders","_this$context$notes","react_default","a","map","folder","key","react_router_dom","to","filter","countNotesForFolder","name","type","onClick","Link","Component","onDeleteFolder","onEditFolder","contextType","ApiContext","NotefulError","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","hasError","NotePageNav","match","params","findFolder","NotefulError_NotefulError","role","history","goBack","EditNote","handleSubmit","body","JSON","stringify","inputValues","Error","data","updateNote","err","setState","message","articleId","_this$state","content","onSubmit","htmlFor","value","onChange","handleNameChange","handleContentChange","Note","deleteNote","_this$props","modified","format","replace","onDeleteNote","NoteListMain","notesForFolder","getNotesForFolder","Note_Note_Note","date","NotePageMain","NotefulForm","assign","action","AddFolder","handleFolderSubmit","target","options","headers","content-type","addNewFolder","push","NotefulForm_NotefulForm","withRouter","ValidationError","Fragment","AddNote","handleNoteSubmit","_e$target","selectedFolder","Date","addNewNote","nameValid","formValid","validationMessage","validateName","fieldValue","fieldErrors","trim","_this3","verifyNameLength","nameVaild","disabled","EditFolderForm","App","addFolder","toConsumableArray","mergeFoldersAndNotes","forEach","index","findIndex","f","addNote","editedNote","newNotes","handleDeleteFolder","all","_ref","_ref2","slicedToArray","notesRes","foldersRes","_ref3","_ref4","path","react_router","exact","component","src_AddFolder_AddFolder","src_AddNote_AddNote","EditNote_EditNote","editNote","EditFolderForm_EditFolderForm","editFolder","EditFolder","handleDeleteNote","Provider","renderNavRoutes","renderMainRoutes","ReactDOM","src_App_App","document","getElementById"],"mappings":"sZAGe,SAASA,EAAaC,GACkBA,EAA7CC,IAA6CD,EAAxCE,UAAwCF,EAA7BG,UADkB,IACJC,EADIC,OAAAC,EAAA,EAAAD,CACWL,EADX,iCAG1C,OAAOO,IAAMC,cACXR,EAAMC,IADDI,OAAAI,EAAA,EAAAJ,CAAA,CAGHH,UAAW,CAAC,eAAgBF,EAAME,WAAWQ,KAAK,MAC/CN,GAELJ,EAAMW,UAIVZ,EAAaa,aAAc,CACzBX,IAAK,KCfQM,UAAMM,cAAc,CAanCC,OAbmC,eCEtBC,EAAW,eAACC,EAADC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAO,GAAIG,EAAXH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAA,OACtBH,EAAMK,KAAK,SAAAC,GAAI,OAAIA,EAAKC,KAAOC,OAAOJ,MCLzBK,SAAA,CACXC,aAAc,0BCOGC,6MASnBC,kBAAoB,SAAAC,GAClBA,EAAEC,iBACF,IAAMC,EAAWC,EAAKhC,MAAMuB,GAE5BU,MAAK,GAAAC,OAAIT,EAAOC,aAAX,iBAAAQ,OAAuCH,GAAY,CACtDI,OAAQ,WAETC,KAAK,SAAAC,GAEJ,OADAC,QAAQC,IAAIF,GACPA,EAAIG,GAEFH,EADEA,EAAII,OAAOL,KAAK,SAAAP,GAAC,OAAIa,QAAQC,OAAOd,OAG9CO,KAAK,WACJJ,EAAKY,QAAQC,aAAad,KAE3Be,MAAM,SAAAC,GACLT,QAAQS,MAAM,CAAEA,eAItBC,gBAAkB,SAAAnB,GAChBA,EAAEC,iBACF,IAAMC,EAAWC,EAAKhC,MAAMuB,GAE5BU,MAAK,GAAAC,OAAIT,EAAOC,aAAX,yBAAgD,CACnDS,OAAQ,UAETC,KAAK,SAAAC,GAEJ,OADAC,QAAQC,IAAIF,GACPA,EAAIG,GAEFH,EADEA,EAAII,OAAOL,KAAK,SAAAP,GAAC,OAAIa,QAAQC,OAAOd,OAG9CO,KAAK,WACJJ,EAAKY,QAAQK,aAAalB,KAE3Be,MAAM,SAAAC,GACLT,QAAQS,MAAM,CAAEA,qFAIT,IAAAG,EAAAC,KAAAC,EAC0BD,KAAKP,QAD/BS,EAAAD,EACCE,eADD,IAAAD,EACS,GADTA,EAAAE,EAAAH,EACapC,aADb,IAAAuC,EACmB,GADnBA,EAEP,OACEC,EAAAC,EAAAjD,cAAA,OAAKN,UAAU,eACbsD,EAAAC,EAAAjD,cAAA,MAAIN,UAAU,qBACXoD,EAAQI,IAAI,SAAAC,GAAM,OACjBH,EAAAC,EAAAjD,cAAA,MAAIoD,IAAKD,EAAOpC,IACdiC,EAAAC,EAAAjD,cAACqD,EAAA,EAAD,CACE3D,UAAU,2BACV4D,GAAE,WAAA5B,OAAayB,EAAOpC,KAEtBiC,EAAAC,EAAAjD,cAAA,QAAMN,UAAU,0BFzDG,eAACc,EAADC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAO,GAAIc,EAAXd,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAA,OACjCH,EAAM+C,OAAO,SAAAzC,GAAI,OAAIA,EAAKS,WAAaA,IAAUb,OEyDhC8C,CAAoBhD,EAAO2C,EAAOpC,KAEpCoC,EAAOM,KAGVT,EAAAC,EAAAjD,cAAA,OAAKN,UAAU,WACbsD,EAAAC,EAAAjD,cAAA,UACJN,UAAU,gBACVgE,KAAK,SACLC,QAASjB,EAAKtB,mBAHV,UAQN4B,EAAAC,EAAAjD,cAAA,UACEN,UAAU,cACVgE,KAAK,SACLC,QAASjB,EAAKF,iBAHhB,cAYFQ,EAAAC,EAAAjD,cAAA,OAAKN,UAAU,+BACbsD,EAAAC,EAAAjD,cAACT,EAAD,CACEE,IAAKmE,IACLN,GAAG,cACHI,KAAK,SACLhE,UAAU,kCAJZ,aAOEsD,EAAAC,EAAAjD,cAAA,qBAjG6BD,IAAM8D,WAA1B1C,EACZf,aAAc,CACnB0C,QAAS,GACTgB,eAAgB,aAChBC,aAAc,cAJG5C,EAMZ6C,YAAcC,MCZFC,cAEjB,SAAAA,EAAY1E,GAAO,IAAAgC,EAAA,OAAA3B,OAAAsE,EAAA,EAAAtE,CAAA8C,KAAAuB,IACf1C,EAAA3B,OAAAuE,EAAA,EAAAvE,CAAA8C,KAAA9C,OAAAwE,EAAA,EAAAxE,CAAAqE,GAAAI,KAAA3B,KAAMnD,KACD+E,MAAQ,CACTC,UAAU,GAHChD,wEAWjB,OAAImB,KAAK4B,MAAMC,SAEXxB,EAAAC,EAAAjD,cAAA,iCAGG2C,KAAKnD,MAAMW,4DATYoC,GAC5B,MAAO,CAAEiC,UAAU,UAVeX,aCKrBY,2LAWV,IAAAjD,EAAAmB,KAAAC,EACqBD,KAAKP,QAAzB5B,EADDoC,EACCpC,MAAOsC,EADRF,EACQE,QACPlC,EAAW+B,KAAKnD,MAAMkF,MAAMC,OAA5B/D,OAEFuC,EJrBgB,eAACL,EAADrC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAS,GAAIc,EAAbd,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAA,OACxBmC,EAAQjC,KAAK,SAAAsC,GAAM,OAAIA,EAAOpC,KAAOQ,IIoBpBqD,CAAW9B,GADbvC,EAASC,EAAOI,IAAW,IACAW,UACxC,OACEyB,EAAAC,EAAAjD,cAAA,OAAKN,UAAU,eACfsD,EAAAC,EAAAjD,cAAC6E,EAAD,KACE7B,EAAAC,EAAAjD,cAACT,EAAD,CACEE,IAAI,SACJqF,KAAK,OACLnB,QAAS,kBAAMnC,EAAKhC,MAAMuF,QAAQC,UAClCtF,UAAU,4BAEVsD,EAAAC,EAAAjD,cAAA,WANF,QASCmD,GACCH,EAAAC,EAAAjD,cAAA,MAAIN,UAAU,4BACXyD,EAAOM,eA9BqB1D,IAAM8D,YAA1BY,EACZrE,aAAe,CACpB2E,QAAS,CACPC,OAAQ,cAEVN,MAAO,CACLC,OAAQ,KANOF,EASZT,YAAcC,cCdFgB,6MA2BjBC,aAAe,SAAA7D,GACXA,EAAEC,iBAEFG,MACI,2CAA4C,CAC3CE,OAAQ,QACTwD,KAAMC,KAAKC,UAAU7D,EAAK+C,MAAMe,eAEnC1D,KAAK,SAAAC,GACN,IAAIA,EAAIG,GACJ,MAAM,IAAIuD,MAAM,gDAEpB,OAAO1D,EAAII,SAEdL,KAAK,SAAA4D,GACFhE,EAAKY,QAAQqD,WAAWD,KAE1BlD,MAAM,SAAAoD,GACJlE,EAAKmE,SAAS,CACVpD,MAAOmD,EAAIE,gGA5CC,IAAAlD,EAAAC,KAELA,KAAKnD,MAAMkF,MAAMC,OAAOkB,UAEvCpE,MAAM,2CAA4C,CAAEE,OAAQ,QACvDC,KAAK,SAAAC,GACN,IAAIA,EAAIG,GACJ,MAAM,IAAIuD,MAAM,gDAEpB,OAAO1D,EAAII,SAEdL,KAAK,SAAA4D,GACF9C,EAAKiD,SAAS,MAMjBrD,MAAM,SAAAoD,GACHhD,EAAKiD,SAAS,CACVpD,MAAOmD,EAAIE,6CA8Bd,IAAAE,EAC8BnD,KAAK4B,MAAhCd,EADHqC,EACGrC,KAAMsC,EADTD,EACSC,QAASjD,EADlBgD,EACkBhD,QAEvB,OACEE,EAAAC,EAAAjD,cAAA,WAASN,UAAU,YACjBsD,EAAAC,EAAAjD,cAAA,uBACAgD,EAAAC,EAAAjD,cAAA,QAAMgG,SAAUrD,KAAKuC,cACjBlC,EAAAC,EAAAjD,cAAA,OAAKN,UAAU,SACXsD,EAAAC,EAAAjD,cAAA,SAAOiG,QAAQ,cAAf,QAGAjD,EAAAC,EAAAjD,cAAA,SACI0D,KAAK,OACL3C,GAAG,OACH0C,KAAK,OACLyC,MAAOzC,EACP0C,SAAUxD,KAAKyD,oBAGvBpD,EAAAC,EAAAjD,cAAA,OAAKN,UAAU,SACXsD,EAAAC,EAAAjD,cAAA,SAAOiG,QAAQ,iBAAf,QAGAjD,EAAAC,EAAAjD,cAAA,SACI0D,KAAK,OACL3C,GAAG,UACH0C,KAAK,UACLyC,MAAOH,EACPI,SAAUxD,KAAK0D,uBAGvBrD,EAAAC,EAAAjD,cAAA,OAAKN,UAAU,SACbsD,EAAAC,EAAAjD,cAAA,SAAOiG,QAAQ,sBAAf,UAGAjD,EAAAC,EAAAjD,cAAA,UAAQe,GAAG,iBAAiB0C,KAAK,kBAC/BT,EAAAC,EAAAjD,cAAA,UAAQkG,MAAO,MAAf,OACCpD,EAAQI,IAAI,SAAAC,GAAM,OACjBH,EAAAC,EAAAjD,cAAA,UAAQoD,IAAKD,EAAOpC,GAAImF,MAAO/C,EAAOpC,IACnCoC,EAAOM,UAKhBT,EAAAC,EAAAjD,cAAA,OAAKN,UAAU,WACXsD,EAAAC,EAAAjD,cAAA,UAAQ0D,KAAK,UAAb,uBAjGsBG,aCOjByC,qNAQnBlF,kBAAoB,SAAAC,GAClBA,EAAEC,iBACF,IAAMV,EAASY,EAAKhC,MAAMuB,GAE1BU,MAAK,GAAAC,OAAIT,EAAOC,aAAX,eAAAQ,OAAqCd,GAAU,CAClDe,OAAQ,WAEPC,KAAK,SAAAC,GAEJ,OADAC,QAAQC,IAAIF,GACPA,EAAIG,GAEFH,EADEA,EAAII,OAAOL,KAAK,SAAAP,GAAC,OAAIa,QAAQC,OAAOd,OAG9CO,KAAK,WACJJ,EAAKY,QAAQmE,WAAW3F,KAEzB0B,MAAM,SAAAC,GACLT,QAAQS,MAAM,CAAEA,qFAKb,IAAAiE,EACiC7D,KAAKnD,MAArCiE,EADD+C,EACC/C,KAAM1C,EADPyF,EACOzF,GAAIgF,EADXS,EACWT,QAASU,EADpBD,EACoBC,SAE3B,OADA3E,QAAQC,IAAIY,KAAKnD,OAEfwD,EAAAC,EAAAjD,cAAA,OAAKN,UAAU,QACbsD,EAAAC,EAAAjD,cAAA,MAAIN,UAAU,eACZsD,EAAAC,EAAAjD,cAACqD,EAAA,EAAD,CAAMC,GAAE,SAAA5B,OAAWX,IAChB0C,IAGLT,EAAAC,EAAAjD,cAAA,UACEN,UAAU,eACVgE,KAAK,SACLC,QAAShB,KAAKvB,mBAEb,IALH,UAQG4B,EAAAC,EAAAjD,cAACqD,EAAA,EAAD,CAAMC,GAAE,iBAAR,aAIHN,EAAAC,EAAAjD,cAAA,OAAKN,UAAU,eACbsD,EAAAC,EAAAjD,cAAA,OAAKN,UAAU,wBAAf,WAEG,IACDsD,EAAAC,EAAAjD,cAAA,QAAMN,UAAU,QACbgH,iBAAOD,EAAU,kBAItBzD,EAAAC,EAAAjD,cAAA,OAAKN,UAAU,0BAEfsD,EAAAC,EAAAjD,cAAA,UAAK+F,GAAW,IAAIY,QAAQ,QAAS,YAAYA,QAAQ,MAAO,mBA/DxC5G,IAAM8D,YAAnByC,EACZlG,aAAc,CACnB0C,QAAS,GACT8D,aAAc,aACdpG,MAAO,IAJU8F,EAMZtC,YAAcC,aCNF4C,mLAQV,IACCtF,EAAaoB,KAAKnD,MAAMkF,MAAMC,OAA9BpD,SADDwB,EAEcJ,KAAKP,QAAlB5B,MAEFsG,EPduB,eAACtG,EAADC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAO,GAAIc,EAAXd,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAA,OAC7BY,EAEEf,EAAM+C,OAAO,SAAAzC,GAAI,OAAIA,EAAKS,WAAaA,IADvCf,EOYqBuG,MAJhB,IAAAhE,EAEO,GAFPA,EAIyCxB,GAIhD,OACEyB,EAAAC,EAAAjD,cAAA,WAASN,UAAU,gBACjBsD,EAAAC,EAAAjD,cAAC6E,EAAD,KACA7B,EAAAC,EAAAjD,cAAA,UACG8G,EAAe5D,IAAI,SAAApC,GAAI,OACtBkC,EAAAC,EAAAjD,cAAA,MAAIoD,IAAKtC,EAAKC,IACZiC,EAAAC,EAAAjD,cAACgH,EAAD,CACEjG,GAAID,EAAKC,GACT0C,KAAM3C,EAAK2C,KACXgD,SAAU3F,EAAKmG,WAKvBjE,EAAAC,EAAAjD,cAAA,OAAKN,UAAU,kCACbsD,EAAAC,EAAAjD,cAACT,EAAD,CACEE,IAAKmE,IACLN,GAAG,YACHI,KAAK,SACLhE,UAAU,iCAJZ,WAOEsD,EAAAC,EAAAjD,cAAA,sBAtC8BD,IAAM8D,WAA3BgD,EACZzG,aAAe,CACpBsE,MAAO,CACLC,OAAQ,KAHOkC,EAMZ7C,YAAcC,aCRFiD,cACnB,SAAAA,EAAY1H,GAAO,OAAAK,OAAAsE,EAAA,EAAAtE,CAAA8C,KAAAuE,GAAArH,OAAAuE,EAAA,EAAAvE,CAAA8C,KAAA9C,OAAAwE,EAAA,EAAAxE,CAAAqH,GAAA5C,KAAA3B,KACXnD,0EAUC,IAAAuD,EACcJ,KAAKP,QAAlB5B,aADD,IAAAuC,EACO,GADPA,EAEPjB,QAAQC,IAAIvB,EAAOmC,KAAKnD,OAFjB,IAGCoB,EAAW+B,KAAKnD,MAAMkF,MAAMC,OAA5B/D,OACFE,EAAOP,EAASC,EAAOI,IAAW,CAAEmF,QAAS,IAEnD,OADAjE,QAAQC,IAAIjB,GAEVkC,EAAAC,EAAAjD,cAAA,WAASN,UAAU,gBACjBsD,EAAAC,EAAAjD,cAAC6E,EAAD,KACA7B,EAAAC,EAAAjD,cAACgH,EAAD,CACEjG,GAAID,EAAKC,GACT0C,KAAM3C,EAAK2C,KACXsC,QAASjF,EAAKiF,QACdU,SAAU3F,EAAKmG,gBAzBiBlH,IAAM8D,WAA3BqD,EAKZ9G,aAAe,CACpBsE,MAAO,CACLC,OAAQ,KAPOuC,EAUZlD,YAAcC,SCbR,SAASkD,EAAY3H,GAAO,IACjCE,EAA6BF,EAA7BE,UAAcE,EADmBC,OAAAC,EAAA,EAAAD,CACJL,EADI,eAEzC,OACEwD,EAAAC,EAAAjD,cAAA,OAAAH,OAAAuH,OAAA,CACE1H,UAAW,CAAC,eAAgBA,GAAWQ,KAAK,KAC5CmH,OAAO,KACHzH,eCHJ0H,6MAEJ/C,MAAQ,CACNhC,MAAO,QAGTgF,mBAAqB,SAAAlG,GACnBA,EAAEC,iBADsB,IAEjBmC,EAAQpC,EAAEmG,OAAV/D,KACDN,EAAS,CACbM,KAAMA,EAAKyC,OAGb1E,EAAKmE,SAAS,CAAEpD,MAAM,OACtB,IAAMkF,EAAU,CAChB9F,OAAQ,OACR+F,QAAS,CACLC,eAAgB,oBAEpBxC,KAAMC,KAAKC,UAAUlC,IAErB1B,MATY,oCASDgG,GACR7F,KAAK,SAAAC,GACJ,IAAIA,EAAIG,GACN,MAAM,IAAIuD,MAAM,gDAElB,OAAO1D,EAAII,SAEZL,KAAK,SAAA4D,GACJ1D,QAAQC,IAAI0B,GACZA,EAAKyC,MAAQ,GACbpE,QAAQC,IAAI0B,GACZ3B,QAAQC,IAAIyD,GACZhE,EAAKhC,MAAMoI,aAAapC,GACxBhE,EAAKhC,MAAMuF,QAAQ8C,KAAK,OAEzBvF,MAAM,SAAAoD,GACLlE,EAAKmE,SAAS,CACZpD,MAAOmD,EAAIE,qFAMjB,OACE5C,EAAAC,EAAAjD,cAAA,WAASN,UAAU,aACjBsD,EAAAC,EAAAjD,cAAC6E,EAAD,KACA7B,EAAAC,EAAAjD,cAAA,6BACAgD,EAAAC,EAAAjD,cAAC8H,EAAD,CAAa9B,SAAUrD,KAAK4E,oBAC1BvE,EAAAC,EAAAjD,cAAA,OAAKN,UAAU,SACbsD,EAAAC,EAAAjD,cAAA,SAAOiG,QAAQ,cAAf,QAGAjD,EAAAC,EAAAjD,cAAA,SAAO0D,KAAK,OAAO3C,GAAG,OAAO0C,KAAK,UAEpCT,EAAAC,EAAAjD,cAAA,OAAKN,UAAU,WACbsD,EAAAC,EAAAjD,cAAA,UAAQ0D,KAAK,UAAb,yBAxDYG,aA0ETkE,cAAWT,GC/EX,SAASU,EAAgBxI,GACtC,OAAGA,EAAMgF,SAELxB,EAAAC,EAAAjD,cAAA,OAAKN,UAAU,SAASF,EAAMoG,SAI3B5C,EAAAC,EAAAjD,cAAAgD,EAAAC,EAAAgF,SAAA,iBCFHC,cAEJ,SAAAA,EAAY1I,GAAO,IAAAgC,EAAA,OAAA3B,OAAAsE,EAAA,EAAAtE,CAAA8C,KAAAuF,IACjB1G,EAAA3B,OAAAuE,EAAA,EAAAvE,CAAA8C,KAAA9C,OAAAwE,EAAA,EAAAxE,CAAAqI,GAAA5D,KAAA3B,KAAMnD,KAeR2I,iBAAmB,SAAA9G,GACjBA,EAAEC,iBADoB,IAAA8G,EAEoB/G,EAAEmG,OAApC/D,EAFc2E,EAEd3E,KAAM4E,EAFQD,EAERC,eAAgBtC,EAFRqC,EAEQrC,QACxBjF,EAAO,CACX2C,KAAMA,EAAKyC,MACX/C,OAAQkF,EAAenC,MACvBH,QAASA,EAAQG,MACjBe,KAAM,IAAIqB,MAEZxG,QAAQC,IAAIjB,GAEZ,IAAM2G,EAAU,CACd9F,OAAQ,OACR+F,QAAS,CACPC,eAAgB,oBAElBxC,KAAMC,KAAKC,UAAUvE,IAEvBU,EAAKmE,SAAS,CAAEpD,MAAO,OACvBd,MAAM,kCAAmCgG,GACtC7F,KAAK,SAAAC,GACJ,IAAIA,EAAIG,GACN,MAAM,IAAIuD,MAAM,gDAElB,OAAO1D,EAAII,SAEdL,KAAK,SAAA4D,GACJhE,EAAKhC,MAAM+I,WAAW/C,GACtBhE,EAAKhC,MAAMuF,QAAQ8C,KAAK,OAEzBvF,MAAM,SAAAoD,GACLlE,EAAKmE,SAAS,CACZpD,MAAOmD,EAAIE,aA9CfpE,EAAK+C,MAAQ,CACXd,KAAM,GACN+E,WAAW,EACXC,WAAW,EACXC,kBAAmB,CACjBjF,KAAM,KAPOjC,gFAYFiC,GAAM,IAAAf,EAAAC,KACrBA,KAAKgD,SAAS,CAAClC,QAAO,WAAOf,EAAKiG,aAAalF,0CAwCpCmF,GACX,IAAMC,EAAWhJ,OAAAI,EAAA,EAAAJ,CAAA,GAAO8C,KAAK4B,MAAMmE,mBAC/BlE,GAAW,EAEU,KADzBoE,EAAaA,EAAWE,QACVpI,QACZmI,EAAYpF,KAAO,2BACnBe,GAAW,IAEXqE,EAAYpF,KAAO,GACnBe,GAAW,GAEb7B,KAAKgD,SAAS,CACZ+C,kBAAmBG,EACnBL,WAAYhE,GACX7B,KAAK8F,+CAGV9F,KAAKgD,SAAS,CACV8C,UAAW9F,KAAK4B,MAAMiE,6CAIjB,IAAAO,EAAApG,KACDG,EAAUH,KAAKnD,MAAMsD,QAC3B,OACEE,EAAAC,EAAAjD,cAAA,WAASN,UAAU,WACjBsD,EAAAC,EAAAjD,cAAC6E,EAAD,KACE7B,EAAAC,EAAAjD,cAAA,2BACAgD,EAAAC,EAAAjD,cAAC8H,EAAD,CAAa9B,SAAUrD,KAAKwF,kBAC1BnF,EAAAC,EAAAjD,cAAA,OAAKN,UAAU,SACbsD,EAAAC,EAAAjD,cAAA,SAAOiG,QAAQ,mBAAf,QAGAjD,EAAAC,EAAAjD,cAAA,SAAO0D,KAAK,OAAO3C,GAAG,OAAO0C,KAAK,OAAO0C,SAAU,SAAA9E,GAAC,OAAI0H,EAAKC,iBAAiB3H,EAAEmG,OAAOtB,UACvFlD,EAAAC,EAAAjD,cAACgI,EAAD,CAAiBxD,UAAW7B,KAAK4B,MAAM0E,UAAWrD,QAASjD,KAAK4B,MAAMmE,kBAAkBjF,QAE1FT,EAAAC,EAAAjD,cAAA,OAAKN,UAAU,SACbsD,EAAAC,EAAAjD,cAAA,SAAOiG,QAAQ,sBAAf,WAGAjD,EAAAC,EAAAjD,cAAA,YAAU0D,KAAK,OAAO3C,GAAG,UAAU0C,KAAK,aAE1CT,EAAAC,EAAAjD,cAAA,OAAKN,UAAU,SACbsD,EAAAC,EAAAjD,cAAA,SAAOiG,QAAQ,sBAAf,UAGAjD,EAAAC,EAAAjD,cAAA,UAAQe,GAAG,iBAAiB0C,KAAK,kBAC/BT,EAAAC,EAAAjD,cAAA,UAAQkG,MAAO,MAAf,OACCpD,EAAQI,IAAI,SAAAC,GAAM,OACjBH,EAAAC,EAAAjD,cAAA,UAAQoD,IAAKD,EAAOpC,GAAImF,MAAO/C,EAAOpC,IACnCoC,EAAOM,UAKhBT,EAAAC,EAAAjD,cAAA,OAAKN,UAAU,WACbsD,EAAAC,EAAAjD,cAAA,UAAQ0D,KAAK,SAASwF,UAAWvG,KAAK4B,MAAMkE,WAA5C,uBA/GQ5E,aA0HPkE,cAAWG,GC/HLiB,6MAyBjBjE,aAAe,SAAA7D,GACXA,EAAEC,iBAEFG,MACI,wEAAyE,CACxEE,OAAQ,QACTwD,KAAMC,KAAKC,UAAU7D,EAAK+C,MAAMe,eAEnC1D,KAAK,SAAAC,GACN,IAAIA,EAAIG,GACJ,MAAM,IAAIuD,MAAM,gDAEpB,OAAO1D,EAAII,SAEdL,KAAK,SAAA4D,GACFhE,EAAKY,QAAQK,aAAa+C,KAE5BlD,MAAM,SAAAoD,GACJlE,EAAKmE,SAAS,CACVpD,MAAOmD,EAAIE,gGA1CC,IAAAlD,EAAAC,KAEHA,KAAKnD,MAAMkF,MAAMC,OAAOkB,UAEzCpE,MAAM,wEAAyE,CAAEE,OAAQ,QACpFC,KAAK,SAAAC,GACN,IAAIA,EAAIG,GACJ,MAAM,IAAIuD,MAAM,gDAEpB,OAAO1D,EAAII,SAEdL,KAAK,SAAA4D,GACF9C,EAAKiD,SAAS,MAIjBrD,MAAM,SAAAoD,GACHhD,EAAKiD,SAAS,CACVpD,MAAOmD,EAAIE,6CA8Bd,IACGnC,EAASd,KAAK4B,MAAdd,KAER,OACET,EAAAC,EAAAjD,cAAA,WAASN,UAAU,kBACjBsD,EAAAC,EAAAjD,cAAA,yBACAgD,EAAAC,EAAAjD,cAAA,QAAMgG,SAAUrD,KAAKuC,cACjBlC,EAAAC,EAAAjD,cAAA,OAAKN,UAAU,SACXsD,EAAAC,EAAAjD,cAAA,SAAOiG,QAAQ,cAAf,QAGAjD,EAAAC,EAAAjD,cAAA,SACI0D,KAAK,OACL3C,GAAG,OACH0C,KAAK,OACLyC,MAAOzC,EACP0C,SAAUxD,KAAKyD,oBAGvBpD,EAAAC,EAAAjD,cAAA,OAAKN,UAAU,WACXsD,EAAAC,EAAAjD,cAAA,UAAQ0D,KAAK,UAAb,yBAtE4BG,aCctCuF,qNAEF7E,MAAQ,CACJzB,QAAS,MAIbuG,UAAY,SAAAlG,GACR3B,EAAKmE,SAAS,CACV7C,QAAO,GAAApB,OAAA7B,OAAAyJ,EAAA,EAAAzJ,CAAO2B,EAAK+C,MAAMzB,SAAlB,CAA2BK,SAI1CoG,qBAAuB,SAACzG,EAAStC,GAW7B,OAVAA,EAAMgJ,QAAQ,SAAC1I,GACb,IAAM2I,EAAQ3G,EAAQ4G,UAAU,SAAAC,GAAC,OAAIA,EAAE5I,KAAOD,EAAKqC,SAC9CL,EAAQ2G,GAAOjJ,QAClBsC,EAAQ2G,GAAOjJ,MAAQ,IAEzBsC,EAAQ2G,GAAOjJ,MAAMqH,KAAK,CACxB9G,GAAID,EAAKC,GACT0C,KAAM3C,EAAK2C,SAGRX,KAGT8G,QAAU,SAAC9G,EAAShC,GAClBgC,EAAQtC,MAAMqH,KAAK,CACf9G,GAAID,EAAKC,GACT0C,KAAM3C,EAAK2C,UAenBhB,aAAe,SAAAoH,GACX,IAAMC,EAAWtI,EAAK+C,MAAMrB,IAAI,SAAApC,GAAI,OAC/BA,EAAKC,KAAO8I,EAAW9I,GACtB8I,EACA/I,IAENU,EAAKmE,SAAS,CACVnF,MAAOsJ,OAqCfC,mBAAqB,SAAAxI,GACjBC,EAAKmE,SAAS,CACV7C,QAAStB,EAAK+C,MAAMzB,QAAQS,OAAO,SAAAJ,GAAM,OAAIA,EAAOpC,KAAOQ,0FAnC/C,IAAAmB,EAAAC,KAChBT,QAAQ8H,IAAI,CACRvI,MAAK,GAAAC,OAAIT,EAAOC,aAAX,eACLO,MAAK,GAAAC,OAAIT,EAAOC,aAAX,mBAEJU,KAAK,SAAAqI,GAA4B,IAAAC,EAAArK,OAAAsK,EAAA,EAAAtK,CAAAoK,EAAA,GAA1BG,EAA0BF,EAAA,GAAhBG,EAAgBH,EAAA,GAE9B,OAAKE,EAASpI,GAETqI,EAAWrI,GAGLE,QAAQ8H,IAAI,CAACI,EAASnI,OAAQoI,EAAWpI,SAFzCoI,EAAWpI,OAAOL,KAAK,SAAAP,GAAC,OAAIa,QAAQC,OAAOd,KAF3C+I,EAASnI,OAAOL,KAAK,SAAAP,GAAC,OAAIa,QAAQC,OAAOd,OAMvDO,KAAK,SAAA0I,GAAsB,IAAAC,EAAA1K,OAAAsK,EAAA,EAAAtK,CAAAyK,EAAA,GAApB9J,EAAoB+J,EAAA,GAAbzH,EAAayH,EAAA,GACnB/E,EAAO9C,EAAK6G,qBAAqBzG,EAAStC,GAE/CkC,EAAKiD,SAAS,CAAC7C,QAAS0C,MAG3BlD,MAAM,SAAAC,GACHT,QAAQS,MAAM,CAACA,sDAmBvB,OACIS,EAAAC,EAAAjD,cAAAgD,EAAAC,EAAAgF,SAAA,KACK,CAAC,IAAK,qBAAqB/E,IAAI,SAAAsH,GAAI,OAChCxH,EAAAC,EAAAjD,cAACyK,EAAA,EAAD,CACIC,OAAK,EACLtH,IAAKoH,EACLA,KAAMA,EACNG,UAAWxJ,MAGnB6B,EAAAC,EAAAjD,cAACyK,EAAA,EAAD,CAAOD,KAAK,gBAAgBG,UAAWlG,IACvCzB,EAAAC,EAAAjD,cAACyK,EAAA,EAAD,CAAOD,KAAK,cAAcG,UAAWlG,IACrCzB,EAAAC,EAAAjD,cAACyK,EAAA,EAAD,CAAOD,KAAK,YAAYG,UAAWlG,IACnCzB,EAAAC,EAAAjD,cAACyK,EAAA,EAAD,CAAOD,KAAK,oBAAoBG,UAAWlG,gDAKpC,IAAAsE,EAAApG,KACf,OACIK,EAAAC,EAAAjD,cAAAgD,EAAAC,EAAAgF,SAAA,KACK,CAAC,IAAK,qBAAqB/E,IAAI,SAAAsH,GAAI,OAChCxH,EAAAC,EAAAjD,cAACyK,EAAA,EAAD,CACIC,OAAK,EACLtH,IAAKoH,EACLA,KAAMA,EACNG,UAAW9D,MAGnB7D,EAAAC,EAAAjD,cAACyK,EAAA,EAAD,CACID,KAAK,gBACLG,UAAWzD,IAGflE,EAAAC,EAAAjD,cAACyK,EAAA,EAAD,CAAOD,KAAK,cACRlK,OAAQ,SAACyE,GAAD,OACZ/B,EAAAC,EAAAjD,cAAC4K,EAAD,CACIhD,aAAcmB,EAAKnB,kBAGxB5E,EAAAC,EAAAjD,cAACyK,EAAA,EAAD,CAAOD,KAAK,YACXlK,OAAQ,SAACyE,GAAD,OACJ/B,EAAAC,EAAAjD,cAAC6K,EAAD,CACItC,WAAcQ,EAAKR,WACnBzF,QAAUiG,EAAKxE,MAAMzB,aAG7BE,EAAAC,EAAAjD,cAACyK,EAAA,EAAD,CAAOD,KAAK,gBACRlK,OAAQ,SAACyE,GAAD,OACR/B,EAAAC,EAAAjD,cAAC8K,EAAD,CACIC,SAAYhC,EAAK9D,SACjBnC,QAAUiG,EAAKxE,MAAMzB,aAI7BE,EAAAC,EAAAjD,cAACyK,EAAA,EAAD,CAAOD,KAAK,kBACRlK,OAAQ,SAACyE,GAAD,OACR/B,EAAAC,EAAAjD,cAACgL,EAAD,CACIC,WAAclC,EAAKmC,WACnBpI,QAAUiG,EAAKxE,MAAMzB,+CAUrChB,QAAQC,IAAIY,KAAK4B,MAAMzB,SACvBhB,QAAQC,IAAIY,KAAK4B,MAAMzB,QAAQtC,OAC/BsB,QAAQC,IAAIY,KAAK4B,MAAMzB,QAAQ,IAE3B,IAAMoD,EAAQ,CACdpD,QAASH,KAAK4B,MAAMzB,QACpBtC,MAAOmC,KAAK4B,MAAM/D,MAClB+F,WAAY5D,KAAKwI,iBACjB9I,aAAcM,KAAKoH,mBACnBH,QAASjH,KAAKiH,QACdnH,aAAcE,KAAKF,cAIvB,OACIO,EAAAC,EAAAjD,cAACiE,EAAWmH,SAAZ,CAAqBlF,MAAOA,GACxBlD,EAAAC,EAAAjD,cAAA,OAAKN,UAAU,OACXsD,EAAAC,EAAAjD,cAAA,OAAKN,UAAU,YAAYiD,KAAK0I,mBAChCrI,EAAAC,EAAAjD,cAAA,UAAQN,UAAU,eACdsD,EAAAC,EAAAjD,cAAA,UACIgD,EAAAC,EAAAjD,cAACqD,EAAA,EAAD,CAAMC,GAAG,KAAT,WAA4B,MAGpCN,EAAAC,EAAAjD,cAAA,QAAMN,UAAU,aAAaiD,KAAK2I,6BA5LpCzH,cAmMHkE,cAAWqB,GCrM1BmC,IAASjL,OACP0C,EAAAC,EAAAjD,cAACqD,EAAA,EAAD,KACEL,EAAAC,EAAAjD,cAACwL,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.67d50a3c.chunk.js","sourcesContent":["import React from 'react'\nimport './AddButton.css'\n\nexport default function NavAddButton(props) {\n  const { tag, className, childrenm, ...otherProps } = props\n\n  return React.createElement(\n    props.tag,\n    {\n      className: ['NavAddButton', props.className].join(' '),\n      ...otherProps\n    },\n    props.children\n  )\n}\n\nNavAddButton.defaultProps ={\n  tag: 'a',\n}\n","import React from 'react'\n\nexport default React.createContext({\n\n  // updateArticle = updatedArticle => {\n  //      const newArticles = this.state.articles.map(art =>\n  //        (art.id === updatedArticle.id)\n  //          ? updatedArticle\n  //          : art\n  //      )\n  //      this.setState({\n  //       articles: newArticles\n  //      })\n  //   };\n\nrender() {\n  const contextvalue = {\n  folders: [],\n  notes: [],\n  addFolder: () => {},\n  addNote: () => {},\n  deleteNote: () => {},\n  updateNote: () => {},\n  updateFolder: () => {},\n  deleteFolder: () => {}\n  }\n}\n})","\nexport const findFolder = (folders=[], folderId) =>\n  folders.find(folder => folder.id === folderId)\n\nexport const findNote = (notes=[], noteId) => \n  notes.find(note => note.id === Number(noteId))\n\nexport const getNotesForFolder = (notes=[], folderId) => (\n  (!folderId)\n    ? notes\n    : notes.filter(note => note.folderId === folderId)\n)\n\nexport const countNotesForFolder = (notes=[], folderId) =>\n  notes.filter(note => note.folderId === folderId).length\n","export default {\n    API_ENDPOINT: 'http://localhost:8000'\n  }","import React from 'react'\nimport { NavLink, Link } from 'react-router-dom'\nimport AddButton from '../AddButton/AddButton'\nimport ApiContext from '../ApiContext'\nimport { countNotesForFolder } from '../notes-helpers'\nimport './NoteListNav.css'\nimport config from '../config'\n\nexport default class NoteListNav extends React.Component {\n  static defaultProps ={\n    folders: [],\n    onDeleteFolder: () => {},\n    onEditFolder: () => {}\n  }\n  static contextType = ApiContext;\n\n\n  handleClickDelete = e => {\n    e.preventDefault()\n    const folderId = this.props.id\n\n    fetch(`${config.API_ENDPOINT}/api/folders/${folderId}`, {\n      method: 'DELETE'\n    })\n    .then(res => {\n      console.log(res)\n      if (!res.ok)\n        return res.json().then(e => Promise.reject(e))\n      return res\n    })\n    .then(() => {\n      this.context.deleteFolder(folderId)\n    })\n    .catch(error => {\n      console.error({ error })\n    })\n}\n\nhandleClickEdit = e => {\n  e.preventDefault()\n  const folderId = this.props.id\n\n  fetch(`${config.API_ENDPOINT}/api/folders/folderId`, {\n    method: 'PATCH'\n  })\n  .then(res => {\n    console.log(res)\n    if (!res.ok)\n      return res.json().then(e => Promise.reject(e))\n    return res\n  })\n  .then(() => {\n    this.context.updateFolder(folderId)\n  })\n  .catch(error => {\n    console.error({ error })\n  })\n}\n\n  render() {\n    const { folders=[], notes=[] } = this.context\n    return (\n      <div className='NoteListNav'>\n        <ul className='NoteListNav__list'>\n          {folders.map(folder =>\n            <li key={folder.id}>\n              <NavLink\n                className='NoteListNav__folder-link'\n                to={`/folder/${folder.id}`}\n              >\n                <span className='NoteListNav__num-notes'>\n                  {countNotesForFolder(notes, folder.id)}\n                </span>\n                {folder.name}\n                {/* {folder.notes.length} */}\n\n              <div className='buttons'>\n                <button\n            className='Folder_delete'\n            type='button'\n            onClick={this.handleClickDelete}\n          >\n          remove\n          </button>\n\n          <button\n            className='Folder_edit'\n            type='button'\n            onClick={this.handleClickEdit}\n          >\n          edit\n          </button>\n          </div>\n              </NavLink>\n            </li>\n          )}\n        </ul>\n        <div className='NoteListNav__button-wrapper'>\n          <AddButton\n            tag={Link}\n            to='/add-folder'\n            type='button'\n            className='NoteListNav__add-folder-button'\n          >\n           Add Folder\n            <br />\n          </AddButton>\n        </div>\n      </div>\n    )\n  }\n}","import React, {Component} from 'react';\n\nexport default class NotefulError extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        };\n    }\n\n    static getDerivedStateFromError(error) {\n        return { hasError: true };\n      }\n    render() {\n      if (this.state.hasError) {      \n        return (\n          <h2>There was an error.</h2>\n        );\n      }\n      return this.props.children;\n    }\n}\n","import React from 'react';\nimport AddButton from '../AddButton/AddButton';\nimport ApiContext from '../ApiContext';\nimport { findNote, findFolder } from '../notes-helpers';\nimport NotefulError from '../NotefulError';\nimport './NotePageNav.css'\n\nexport default class NotePageNav extends React.Component {\n  static defaultProps = {\n    history: {\n      goBack: () => { }\n    },\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext;\n\n  render() {\n    const { notes, folders, } = this.context\n    const { noteId } = this.props.match.params\n    const note = findNote(notes, noteId) || {}\n    const folder = findFolder(folders, note.folderId)\n    return (\n      <div className='NotePageNav'>\n      <NotefulError>\n        <AddButton\n          tag='button'\n          role='link'\n          onClick={() => this.props.history.goBack()}\n          className='NotePageNav__back-button'\n        >\n          <br />\n          Back\n        </AddButton>\n        {folder && (\n          <h3 className='NotePageNav__folder-name'>\n            {folder.name}\n          </h3>\n        )}\n        </NotefulError>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class EditNote extends Component {\n\n    componentDidMount() {\n\n    const noteId = this.props.match.params.articleId\n\n    fetch('http://localhost:8000/api/notes{$noteId}', { method: 'GET'})\n        .then(res => {\n        if(!res.ok) {\n            throw new Error('Something went wrong, please try again later');\n        }\n        return res.json();\n        })  \n    .then(data => {\n        this.setState({\n                // note.name\n                //note.content\n                //folder.Id\n        })\n        })\n    .catch(err => {\n        this.setState({\n            error: err.message\n            });\n        })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n\n        fetch(\n            'http://localhost:8000/api/notes{$noteId}', {\n             method: 'PATCH',\n            body: JSON.stringify(this.state.inputValues)\n        })\n        .then(res => {\n        if(!res.ok) {\n            throw new Error('Something went wrong, please try again later');\n        }\n        return res.json();\n        })  \n    .then(data => {\n        this.context.updateNote(data)\n     })\n     .catch(err => {\n        this.setState({\n            error: err.message\n            });\n        })\n}\n\n\nrender() {\n    const { name, content, folders } = this.state\n\n    return (\n      <section className='EditNote'>\n        <h2>Edit Note</h2>\n        <form onSubmit={this.handleSubmit}> \n            <div className='field'>\n                <label htmlFor='name-input'>\n                Name\n                </label>\n                <input \n                    type='text' \n                    id='name' \n                    name='name'\n                    value={name}\n                    onChange={this.handleNameChange}\n                    />\n            </div>\n            <div className='field'>\n                <label htmlFor='content-input'>\n                Name\n                </label>\n                <input \n                    type='text' \n                    id='content' \n                    name='content'\n                    value={content}\n                    onChange={this.handleContentChange}\n                    />\n            </div>\n            <div className='field'>\n              <label htmlFor='note-folder-select'>\n                Folder\n              </label>\n              <select id='selectedFolder' name='selectedFolder'>\n                <option value={null}>...</option>\n                {folders.map(folder =>\n                  <option key={folder.id} value={folder.id}>\n                    {folder.name}\n                  </option>\n                )}\n              </select>\n            </div>\n            <div className='buttons'>\n                <button type='submit'>\n                Edit note\n                </button>\n            </div>\n        </form>\n      </section>\n    )\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport ApiContext from '../ApiContext';\nimport EditNote from '../EditNote/EditNote';\nimport config from '../config';\nimport PropTypes from 'prop-types';\nimport './Note.css'\n\nexport default class Note extends React.Component {\n  static defaultProps ={\n    folders: [],\n    onDeleteNote: () => {},\n    notes: []\n  }\n  static contextType = ApiContext;\n\n  handleClickDelete = e => {\n    e.preventDefault()\n    const noteId = this.props.id\n\n    fetch(`${config.API_ENDPOINT}/api/notes/${noteId}`, {\n      method: 'DELETE'\n    })\n      .then(res => {\n        console.log(res)\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n        return res\n      })\n      .then(() => {\n        this.context.deleteNote(noteId)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n\n  render() {\n    const { name, id, content, modified } = this.props\n    console.log(this.props)\n    return (\n      <div className='Note'>\n        <h2 className='Note__title'>\n          <Link to={`/note/${id}`}>\n            {name}\n          </Link>\n        </h2>\n        <button\n          className='Note__delete'\n          type='button'\n          onClick={this.handleClickDelete}\n        >\n          {' '}\n          remove\n        </button>\n           <Link to=\n           {`/edit/:noteId`}>\n             Edit Note\n           </Link>\n        <div className='Note__dates'>\n          <div className='Note__dates-modified'>\n            Modified\n            {' '}\n            <span className='Date'>\n              {format(modified, 'YYYY MMM Do')}\n            </span>\n          </div>\n        </div>\n          <div className='NotePageMain__content'>\n          </div> \n          <p>{(content || '').replace(/\\n\\n/g, '</p> <p>').replace(/\\n/g, '<br />')}</p>\n      </div>\n      \n    )\n  }\n}\n\nNote.propTypes = {\n  note: PropTypes.objectOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    modified: PropTypes.number.isRequired,\n  })) \n};\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Note from '../Note/Note';\nimport AddButton from '../AddButton/AddButton';\nimport ApiContext from '../ApiContext';\nimport { getNotesForFolder } from '../notes-helpers';\nimport NotefulError from '../NotefulError';\nimport './NoteListMain.css'\n\nexport default class NoteListMain extends React.Component {\n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext\n\n  render() {\n    const { folderId } = this.props.match.params\n    const { notes=[] } = this.context\n\n    const notesForFolder = getNotesForFolder(notes, folderId)\n\n   \n   \n    return (\n      <section className='NoteListMain'>\n        <NotefulError>\n        <ul>\n          {notesForFolder.map(note =>\n            <li key={note.id}>\n              <Note\n                id={note.id}\n                name={note.name}\n                modified={note.date}\n              />\n            </li>\n          )}\n        </ul>\n        <div className='NoteListMain__button-container'>\n          <AddButton\n            tag={Link}\n            to='/add-note'\n            type='button'\n            className='NoteListMain__add-note-button'\n          >\n          Add Note\n            <br />\n          </AddButton>      \n        </div>\n        </NotefulError>\n      </section>\n    )\n  }\n}\n","import React from 'react';\nimport Note from '../Note/Note';\nimport ApiContext from '../ApiContext';\nimport { findNote } from '../notes-helpers';\nimport NotefulError from '../NotefulError';\nimport './NotePageMain.css'\n\nexport default class NotePageMain extends React.Component {\n  constructor(props){\n    super(props)\n  }\n\n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext\n\n  render() {\n    const { notes=[] } = this.context\n    console.log(notes, this.props)\n    const { noteId } = this.props.match.params\n    const note = findNote(notes, noteId) || { content: '' }\n    console.log(note)\n    return (\n      <section className='NotePageMain'>\n        <NotefulError>\n        <Note\n          id={note.id}\n          name={note.name}\n          content={note.content}\n          modified={note.date}\n        />\n        </NotefulError>\n      </section>\n    )\n  }\n}","import React from 'react';\nimport './NotefulForm.css';\nimport PropTypes from 'prop-types';\n\nexport default function NotefulForm(props) {\n  const { className, ...otherProps } = props\n  return (\n    <form\n      className={['Noteful-form', className].join(' ')}\n      action='#'\n      {...otherProps}\n    />\n  )\n}\n\nNotefulForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};","import React, { Component } from 'react';\nimport NotefulForm from '../NotefulForm/NotefulForm';\nimport NotefulError from '../NotefulError';\nimport PropTypes from 'prop-types';\nimport './AddFolder.css';\nimport { withRouter } from 'react-router-dom';\n\nclass AddFolder extends Component {\n\n  state = {\n    error: null,\n  };\n\n  handleFolderSubmit = e => {\n    e.preventDefault()\n    const {name} = e.target\n    const folder = {\n      name: name.value\n    }\n    const url = 'http://localhost:8000/api/folders'\n    this.setState({ error:null })\n    const options = {\n    method: 'POST',\n    headers: {\n        'content-type': 'application/json'\n    },\n    body: JSON.stringify(folder),\n    }\n    fetch(url, options)\n      .then(res => {\n        if(!res.ok) {\n          throw new Error('Something went wrong, please try again later');\n        }\n        return res.json();\n      })\n      .then(data => {\n        console.log(name)     \n        name.value = ''\n        console.log(name)\n        console.log(data)\n        this.props.addNewFolder(data);\n        this.props.history.push('/')\n      })\n      .catch(err => {\n        this.setState({\n          error: err.message\n        });\n      })\n  }\n\n  render() {\n    return (\n      <section className='AddFolder'>\n        <NotefulError>\n        <h2>Create a folder</h2>\n        <NotefulForm onSubmit={this.handleFolderSubmit}>\n          <div className='field'>\n            <label htmlFor='name-input'>\n              Name\n            </label>\n            <input type='text' id='name' name='name'/>\n          </div>\n          <div className='buttons'>\n            <button type='submit'>\n              Add folder\n            </button>\n          </div>\n        </NotefulForm>\n        </NotefulError>\n      </section>\n    )\n  }\n}\n\nAddFolder.propTypes = {\n  addNewFolder: PropTypes.func.isRequired,\n  folders: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired\n  })) \n};\n\nexport default withRouter(AddFolder);","import React from 'react';\n\nexport default function ValidationError(props) {\n  if(props.hasError) {\n    return (\n      <div className=\"error\">{props.message}</div>\n    );\n  }\n\n  return <></>\n}","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport NotefulForm from '../NotefulForm/NotefulForm';\nimport ValidationError from './ValidationError';\nimport NotefulError from '../NotefulError';\nimport './AddNote.css'\n\nclass AddNote extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      nameValid: false,\n      formValid: false,\n      validationMessage: {\n        name: ''\n      }\n    }\n  }\n\n  verifyNameLength(name) {\n    this.setState({name}, () => {this.validateName(name)});\n  }\n\n  handleNoteSubmit = e => {\n    e.preventDefault();\n    const { name, selectedFolder, content } = e.target;\n    const note = {\n      name: name.value,\n      folder: selectedFolder.value,\n      content: content.value,\n      date: new Date()\n    }\n    console.log(note)\n    \n    const options = {           \n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    }\n    this.setState({ error: null })\n    fetch('http://localhost:8000/api/notes', options)\n      .then(res => {\n        if(!res.ok) {\n          throw new Error('Something went wrong, please try again later');\n        }\n        return res.json();\n      })\n    .then(data => {\n      this.props.addNewNote(data)\n      this.props.history.push('/')\n    })\n    .catch(err => {\n      this.setState({\n        error: err.message\n      });\n    });\n  }\n\n  validateName(fieldValue) {\n    const fieldErrors = {...this.state.validationMessage};\n    let hasError = false;\n    fieldValue = fieldValue.trim();\n    if(fieldValue.length === 0) {\n      fieldErrors.name = 'A note name is required.';\n      hasError = true;\n    } else {\n      fieldErrors.name = '';\n      hasError = false;\n    }\n    this.setState({\n      validationMessage: fieldErrors,\n      nameValid: !hasError\n    }, this.formValid );\n  }\nformValid() {\n  this.setState({\n      formValid: this.state.nameValid\n  });\n}\n\n  render() {\n    const folders = this.props.folders\n    return (\n      <section className='AddNote'>\n        <NotefulError>\n          <h2>Create a note</h2>\n          <NotefulForm onSubmit={this.handleNoteSubmit}>\n            <div className='field'>\n              <label htmlFor='note-name-input'>\n                Name\n              </label>\n              <input type='text' id='name' name='name' onChange={e => this.verifyNameLength(e.target.value)}/>\n              <ValidationError hasError={!this.state.nameVaild} message={this.state.validationMessage.name}/>\n            </div>\n            <div className='field'>\n              <label htmlFor='note-content-input'>\n                Content\n              </label>\n              <textarea type='text' id='content' name='content'/>\n            </div>\n            <div className='field'>\n              <label htmlFor='note-folder-select'>\n                Folder\n              </label>\n              <select id='selectedFolder' name='selectedFolder'>\n                <option value={null}>...</option>\n                {folders.map(folder =>\n                  <option key={folder.id} value={folder.id}>\n                    {folder.name}\n                  </option>\n                )}\n              </select>\n            </div>\n            <div className='buttons'>\n              <button type='submit' disabled={!this.state.formValid} >\n                Add note\n              </button>\n            </div>\n          </NotefulForm>\n        </NotefulError>\n      </section>\n    )\n  }\n}\n\nexport default withRouter(AddNote);","import React, { Component } from 'react';\n\nexport default class EditFolderForm extends Component {\n\n    componentDidMount() {\n\n    const folderId = this.props.match.params.articleId\n\n    fetch('http://localhost:8000/api/folders/${this.props.match.params.folderId}', { method: 'GET'})\n        .then(res => {\n        if(!res.ok) {\n            throw new Error('Something went wrong, please try again later');\n        }\n        return res.json();\n        })  \n    .then(data => {\n        this.setState({\n                // folder.name\n        })\n        })\n    .catch(err => {\n        this.setState({\n            error: err.message\n            });\n        })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n\n        fetch(\n            'http://localhost:8000/api/folders/${this.props.match.params.folderId}', {\n             method: 'PATCH',\n            body: JSON.stringify(this.state.inputValues)\n        })\n        .then(res => {\n        if(!res.ok) {\n            throw new Error('Something went wrong, please try again later');\n        }\n        return res.json();\n        })  \n    .then(data => {\n        this.context.updateFolder(data)\n     })\n     .catch(err => {\n        this.setState({\n            error: err.message\n            });\n        })\n}\n\n\nrender() {\n    const { name } = this.state\n\n    return (\n      <section className='EditFolderForm'>\n        <h2>Edit Folder</h2>\n        <form onSubmit={this.handleSubmit}> \n            <div className='field'>\n                <label htmlFor='name-input'>\n                Name\n                </label>\n                <input \n                    type='text' \n                    id='name' \n                    name='name'\n                    value={name}\n                    onChange={this.handleNameChange}\n                    />\n            </div>\n            <div className='buttons'>\n                <button type='submit'>\n                Edit folder\n                </button>\n            </div>\n        </form>\n      </section>\n    )\n  }\n}","\nimport React, {Component} from 'react';\nimport {Route, Link} from 'react-router-dom';\nimport {withRouter} from 'react-router-dom';\nimport NoteListNav from '../NoteListNav/NoteListNav';\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport NoteListMain from '../NoteListMain/NoteListMain';\nimport NotePageMain from '../NotePageMain/NotePageMain';\nimport AddFolder from '../AddFolder/AddFolder';\nimport AddNote from '../AddNote/AddNote';\nimport EditNote from '../EditNote/EditNote';\nimport EditFolderForm from'../EditFolderForm/EditFolderForm';\nimport ApiContext from '../ApiContext';\nimport config from '../config';\nimport './App.css'\n\nclass App extends Component {\n\n    state = {\n        folders: [],\n        // notes: []\n    }\n\n    addFolder = folder => {\n        this.setState({ \n            folders: [ ...this.state.folders, folder \n        ]})\n    }\n\n    mergeFoldersAndNotes = (folders, notes) => {\n        notes.forEach((note) => {\n          const index = folders.findIndex(f => f.id === note.folder) \n          if (!folders[index].notes) {\n            folders[index].notes = []\n          }\n          folders[index].notes.push({ \n            id: note.id, \n            name: note.name \n          })\n          })\n        return folders\n      }\n\n      addNote = (folders, note) => {\n        folders.notes.push({ \n            id: note.id, \n            name: note.name \n        })\n    };\n\n    // updateNote = editedNote  => {\n    //     const newNotes = this.state.map(note =>\n    //         (note.id === editedNote.id)\n    //         ? editedNote\n    //         : note\n    //         )\n    //     this.setState({\n    //         notes: newNotes\n    //     })\n    // }\n\n    updateFolder = editedNote  => {\n        const newNotes = this.state.map(note =>\n            (note.id === editedNote.id)\n            ? editedNote\n            : note\n            )\n        this.setState({\n            notes: newNotes\n        })\n    }\n  \n    componentDidMount() {\n        Promise.all([\n            fetch(`${config.API_ENDPOINT}/api/notes`),\n            fetch(`${config.API_ENDPOINT}/api/folders`)\n        ])\n            .then(([notesRes, foldersRes]) => {\n               \n                if (!notesRes.ok)\n                    return notesRes.json().then(e => Promise.reject(e));\n                if (!foldersRes.ok)\n                    return foldersRes.json().then(e => Promise.reject(e));\n                    \n                    return Promise.all([notesRes.json(), foldersRes.json()]);\n            })\n            .then(([notes, folders]) => {\n               const data = this.mergeFoldersAndNotes(folders, notes)\n\n                this.setState({folders: data});\n\n            })\n            .catch(error => {\n                console.error({error});\n            });\n    };\n\n\n    // handleDeleteNote = noteId => {\n    //     this.setState({\n    //         : this.state.notes.filter(note => note.id !== noteId)\n    //     });\n    //     this.props.history.push(`/`)\n    // };\n\n    handleDeleteFolder = folderId => {\n        this.setState({\n            folders: this.state.folders.filter(folder => folder.id !== folderId)\n        });\n    };\n\n    renderNavRoutes() {\n        return (\n            <>\n                {['/', '/folder/:folderId'].map(path => (\n                    <Route\n                        exact\n                        key={path}\n                        path={path}\n                        component={NoteListNav}\n                    />\n                ))}\n                <Route path=\"/note/:noteId\" component={NotePageNav} />\n                <Route path=\"/add-folder\" component={NotePageNav} />\n                <Route path=\"/add-note\" component={NotePageNav} />\n                <Route path=\"/folder/:folderId\" component={NotePageNav} />\n            </>\n        );\n    }\n\n    renderMainRoutes() {\n        return (\n            <>\n                {['/', '/folder/:folderId'].map(path => (\n                    <Route\n                        exact\n                        key={path}\n                        path={path}\n                        component={NoteListMain}\n                    />\n                ))}\n                <Route \n                    path=\"/note/:noteId\" \n                    component={NotePageMain} \n                />\n\n                <Route path='/add-folder' \n                    render={(history) =>\n                <AddFolder\n                    addNewFolder={this.addNewFolder}\n                />}\n                />\n               <Route path='/add-note'\n                render={(history) =>\n                    <AddNote\n                        addNewNote = {this.addNewNote}\n                        folders ={this.state.folders} \n                    /> }\n                />\n                <Route path='/edit/:noteId'\n                    render={(history) =>\n                    <EditNote\n                        editNote = {this.EditNote}\n                        folders ={this.state.folders} \n                    /> }\n                    />\n\n                <Route path='/edit/:folderId'\n                    render={(history) =>\n                    <EditFolderForm\n                        editFolder = {this.EditFolder}\n                        folders ={this.state.folders} \n                /> }\n            />          \n            </>\n        );\n    }\n\n    render() {\n\n\n        console.log(this.state.folders)\n        console.log(this.state.folders.notes)\n        console.log(this.state.folders[0])\n\n            const value = {\n            folders: this.state.folders,\n            notes: this.state.notes,\n            deleteNote: this.handleDeleteNote,\n            deleteFolder: this.handleDeleteFolder,\n            addNote: this.addNote,\n            updateFolder: this.updateFolder\n            };\n\n        \n        return (\n            <ApiContext.Provider value={value}>\n                <div className=\"App\">\n                    <nav className=\"App__nav\">{this.renderNavRoutes()}</nav>\n                    <header className=\"App__header\">\n                        <h1>\n                            <Link to=\"/\">Noteful</Link>{' '}\n                        </h1>\n                    </header>\n                    <main className=\"App__main\">{this.renderMainRoutes()}</main>\n                </div>\n            </ApiContext.Provider>\n        );\n    }\n}\n\nexport default withRouter(App)\n","\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n// import { library } from '@fortawesome/fontawesome-svg-core'\n// import {\n//   faPlus, faChevronLeft, faTrashAlt, faCheckDouble\n// } from '@fortawesome/free-solid-svg-icons'\nimport { BrowserRouter } from 'react-router-dom'\n// import 'typeface-roboto'\nimport './index.css'\nimport App from './App/App'\n\n// library.add(faPlus, faChevronLeft, faTrashAlt, faCheckDouble)\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n)"],"sourceRoot":""}