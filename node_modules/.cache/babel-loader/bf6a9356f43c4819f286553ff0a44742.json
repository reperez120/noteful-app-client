{"ast":null,"code":"var _jsxFileName = \"/Users/rachelemilyperez/projects/noteful-app/noteful-app-client/src/EditNote/EditNote.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './EditNote.css';\nimport ApiContext from '../ApiContext';\nimport config from '../config';\nexport default class EditNote extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"\",\n      content: \"\",\n      folder: \"\"\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const noteName = e.target.name.value;\n      this.setState({\n        name: noteName\n      });\n      console.log(this.state);\n      const noteId = this.props.match.params.noteId;\n      const url = \"http://localhost:8000/api/notes/\".concat(noteId);\n      console.log(url);\n      const options = {\n        method: 'PATCH',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify(this.state.inputValues)\n      };\n      fetch(url, options).then(res => {\n        this.context.updateNote(res);\n\n        if (!res.ok) {\n          throw new Error('Something went wrong, please try again later');\n        }\n\n        return res.json();\n      }).then(data => {\n        this.context.updateNote(data);\n      }).catch(err => {\n        this.setState({\n          error: err.message\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    const noteId = this.props.match.params.noteId;\n    fetch(\"http://localhost:8000/api/folders/\".concat(noteId), {\n      method: 'GET'\n    }).then(res => {\n      if (!res.ok) {\n        throw new Error('Something went wrong, please try again later');\n      }\n\n      return res.json();\n    }).then(data => {\n      this.setState({\n        name: data.name,\n        content: data.content,\n        folder: data.folder\n      });\n    }).catch(err => {\n      this.setState({\n        error: err.message\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          name = _this$state.name,\n          content = _this$state.content,\n          folders = _this$state.folders;\n    return React.createElement(\"section\", {\n      className: \"EditNote\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Edit Note\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Name:\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"name\",\n      name: \"name\",\n      defaultValue: name // onChange={this.handleNameChange}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"note-content-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Content\"), React.createElement(\"textarea\", {\n      type: \"text\",\n      id: \"content\",\n      name: \"content\",\n      defaultValue: content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"note-folder-select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Folder\"), React.createElement(\"select\", {\n      id: \"selectedFolder\",\n      name: \"selectedFolder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"...\"), folders.map(folder => React.createElement(\"option\", {\n      key: folder.id,\n      value: folder.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, folder.name)))), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"editButton\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Edit folder\"))));\n  }\n\n}\nEditNote.contextType = ApiContext;","map":{"version":3,"sources":["/Users/rachelemilyperez/projects/noteful-app/noteful-app-client/src/EditNote/EditNote.js"],"names":["React","Component","PropTypes","ApiContext","config","EditNote","state","name","content","folder","handleSubmit","e","preventDefault","noteName","target","value","setState","console","log","noteId","props","match","params","url","options","method","headers","body","JSON","stringify","inputValues","fetch","then","res","context","updateNote","ok","Error","json","data","catch","err","error","message","componentDidMount","render","folders","map","id","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './EditNote.css';\nimport ApiContext from '../ApiContext';\nimport config from '../config'\n\nexport default class EditNote extends Component {\n\n    state = {\n        name: \"\",\n        content: \"\",\n        folder: \"\"\n    }\n\n    static contextType = ApiContext\n\n    componentDidMount() {\n\n    const noteId = this.props.match.params.noteId\n\n    fetch(`http://localhost:8000/api/folders/${noteId}`, { method: 'GET'})\n        .then(res => {\n        if(!res.ok) {\n            throw new Error('Something went wrong, please try again later');\n        }\n        return res.json();\n        })  \n    .then(data => {\n         this.setState({\n                 name: data.name,\n                 content: data.content,\n                 folder: data.folder\n         })\n        })\n    .catch(err => {\n        this.setState({\n            error: err.message\n            });\n        })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        const noteName = e.target.name.value\n        this.setState ({\n           name: noteName\n        })\n\n        console.log(this.state)\n\n        const noteId = this.props.match.params.noteId\n\n        const url = `http://localhost:8000/api/notes/${noteId}`\n        console.log(url)\n        const options = {\n            method: 'PATCH',\n             headers: {\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify(this.state.inputValues)\n        }\n        fetch(url, options)\n        .then(res => {\n        this.context.updateNote(res)\n        if(!res.ok) {\n            throw new Error('Something went wrong, please try again later');\n        }\n        return res.json();\n        })  \n        .then(data => {\n            this.context.updateNote(data)\n        })\n     .catch(err => {\n        this.setState({\n            error: err.message\n            });\n        })\n}\n\nrender() {\n    const { name, content, folders  } = this.state\n \n    return (\n      <section className='EditNote'>\n        <h2>Edit Note</h2>\n        <form onSubmit={this.handleSubmit}> \n            <div className='field'>\n                <label htmlFor='name-input'>\n                Name:\n                </label>\n                <input \n                    type='text' \n                    id='name' \n                    name='name'\n                    defaultValue={name}\n                    // onChange={this.handleNameChange}\n                    />\n            </div>\n            <div className='field'>\n              <label htmlFor='note-content-input'>\n                Content\n              </label>\n              <textarea \n              type='text' \n              id='content' \n              name='content'\n              defaultValue={content}/>\n            </div>\n            <div className='field'>\n              <label htmlFor='note-folder-select'>\n                Folder\n              </label>\n              <select id='selectedFolder' name='selectedFolder'>\n                <option value={null}>...</option>\n                {folders.map(folder =>\n                  <option key={folder.id} value={folder.id}>\n                    {folder.name}\n                  </option>\n                )}\n              </select>\n            </div>\n            <div className='buttons'>\n                <button className='editButton' type='submit'>\n                Edit folder\n                </button>\n            </div>\n        </form>\n      </section>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}