{"ast":null,"code":"// export const findFolder = (folders=[], folderId) =>\n//   folders.find(folder => folder.id === folderId)\nexport const findNote = (notes = [], noteId) => notes.find(note => note.id === Number(noteId));\nexport const getNotes = (folders, notes) => {\n  folders.forEach(folder => notes.push(...folder.notes));\n  return notes;\n};\nexport const countNotesForFolder = (notes = [], folderId) => notes.filter(note => note.folderId === folderId).length;\nexport const countNotes = (folders, notes) => {\n  return folders.map(folder => {\n    return folder.notes.length;\n  });\n};","map":{"version":3,"sources":["/Users/rachelemilyperez/projects/noteful-app/noteful-app-client/src/notes-helpers.js"],"names":["findNote","notes","noteId","find","note","id","Number","getNotes","folders","forEach","folder","push","countNotesForFolder","folderId","filter","length","countNotes","map"],"mappings":"AACA;AACA;AAEA,OAAO,MAAMA,QAAQ,GAAG,CAACC,KAAK,GAAC,EAAP,EAAWC,MAAX,KACtBD,KAAK,CAACE,IAAN,CAAWC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYC,MAAM,CAACJ,MAAD,CAArC,CADK;AAGP,OAAO,MAAMK,QAAQ,GAAG,CAACC,OAAD,EAAUP,KAAV,KAAoB;AACxCO,EAAAA,OAAO,CAACC,OAAR,CAAgBC,MAAM,IAAIT,KAAK,CAACU,IAAN,CAAW,GAAGD,MAAM,CAACT,KAArB,CAA1B;AACA,SAAOA,KAAP;AACH,CAHM;AAKP,OAAO,MAAMW,mBAAmB,GAAG,CAACX,KAAK,GAAC,EAAP,EAAWY,QAAX,KACjCZ,KAAK,CAACa,MAAN,CAAaV,IAAI,IAAIA,IAAI,CAACS,QAAL,KAAkBA,QAAvC,EAAiDE,MAD5C;AAGP,OAAO,MAAMC,UAAU,GAAG,CAACR,OAAD,EAAUP,KAAV,KAAoB;AAC5C,SAAOO,OAAO,CAACS,GAAR,CAAYP,MAAM,IAAI;AAC7B,WAAOA,MAAM,CAACT,KAAP,CAAac,MAApB;AACC,GAFM,CAAP;AAGD,CAJM","sourcesContent":["\n// export const findFolder = (folders=[], folderId) =>\n//   folders.find(folder => folder.id === folderId)\n\nexport const findNote = (notes=[], noteId) => \n  notes.find(note => note.id === Number(noteId))\n\nexport const getNotes = (folders, notes) => {\n    folders.forEach(folder => notes.push(...folder.notes))\n    return notes\n}\n\nexport const countNotesForFolder = (notes=[], folderId) =>\n  notes.filter(note => note.folderId === folderId).length\n\nexport const countNotes = (folders, notes) => {\n  return folders.map(folder => {\n  return folder.notes.length\n  })\n}\n\n"]},"metadata":{},"sourceType":"module"}