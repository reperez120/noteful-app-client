{"ast":null,"code":"var _jsxFileName = \"/Users/rachelemilyperez/projects/notefulorganizingreactcode/src/AddNote/AddNote.js\";\nimport React, { Component } from 'react';\nimport NotefulForm from '../NotefulForm/NotefulForm';\nimport './AddNote.css'; // import ValidationError from './ValidationError'\n\nimport ApiContext from '../ApiContext';\nimport NotefulError from '../NotefulError';\nexport default class AddNote extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      console.log('handleSubmit ran');\n      e.preventDefault();\n      const newNote = this.state.noteNameInput;\n      const newContent = this.state.noteContentInput;\n      const selectedFolder = this.state.noteFolderSelect;\n      const url = 'http://localhost:9090/notes';\n      const options = {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify(newNote)\n      };\n      fetch(url, options).then(res => {\n        if (!res.ok) {\n          throw new Error('Something went wrong, please try again later');\n        }\n\n        return res.json();\n      }).then(data => {\n        this.setState({\n          name: ''\n        });\n        this.addNewNote(newNote);\n      }).then(data => {\n        this.setState({\n          name: '',\n          folderId: '',\n          content: '',\n          folders: []\n        });\n        this.props.addNewNote(newNote);\n        this.props.addNoteContent(newContent);\n        this.props.selectFolder(selectedFolder);\n      }).catch(err => {\n        this.setState({\n          error: err.message\n        });\n      });\n    };\n\n    this.state = {\n      noteNameInput: '',\n      noteContentInput: '',\n      noteFolderSelect: ''\n    };\n  }\n\n  addNewNote(noteNameInput) {\n    console.log('addNewNote ran');\n    this.setState({\n      noteNameInput\n    });\n  }\n\n  addNoteContent(noteContentInput) {\n    console.log('addNoteContent ran');\n    this.setState({\n      noteContentInput\n    });\n  }\n\n  selectFolder(noteFolderSelect) {\n    this.setState({\n      noteFolderSelect\n    });\n  }\n\n  render() {\n    const _this$context$folders = this.context.folders,\n          folders = _this$context$folders === void 0 ? [] : _this$context$folders;\n    return React.createElement(\"section\", {\n      className: \"AddNote\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Create a note\"), React.createElement(NotefulForm, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"note-name-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"noteNameInput\",\n      name: \"noteNameInput\",\n      onChange: e => this.addNewNote(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"note-content-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Content\"), React.createElement(\"textarea\", {\n      id: \"noteContentInput\",\n      name: \"noteContentInput\",\n      onChange: e => this.addNoteContent(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"note-folder-select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Folder\"), React.createElement(\"select\", {\n      id: \"noteFolderSelect\",\n      name: \"noteFolderSelect\",\n      onChange: e => this.selectFolder(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"...\"), folders.map(folder => React.createElement(\"option\", {\n      key: folder.id,\n      value: folder.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, folder.name)))), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Add note\"))));\n  }\n\n} // validateName(fieldValue) {\n//   const fieldErrors = {...this.state.validationMessages};\n//   let hasError = false;\n//   fieldValue = fieldValue.trim();\n//   if(fieldValue.length === 0) {\n//     fieldErrors.noteNameInput = 'A name is required for the folder';\n//     hasError = true;\n//   } else {\n//     fieldErrors.noteNameInput= '';\n//     hasError = false;\n//     }\n//   }\n// }\n//   this.setState({\n//     validationMessages: fieldErrors,\n//     noteNameInputVaild: !hasError\n//   }, this.formValid );\n//   formValid() {\n//     this.setState({\n//       formValid: this.state.nameNameInputValid\n//     });\n//   }\n// }\n// noteNameInputVaild: false,\n// formValid: false,\n// validationMessages: {\n//   noteNameInput: ''\n// }\n\nAddNote.contextType = ApiContext;","map":{"version":3,"sources":["/Users/rachelemilyperez/projects/notefulorganizingreactcode/src/AddNote/AddNote.js"],"names":["React","Component","NotefulForm","ApiContext","NotefulError","AddNote","constructor","props","handleSubmit","e","console","log","preventDefault","newNote","state","noteNameInput","newContent","noteContentInput","selectedFolder","noteFolderSelect","url","options","method","headers","body","JSON","stringify","fetch","then","res","ok","Error","json","data","setState","name","addNewNote","folderId","content","folders","addNoteContent","selectFolder","catch","err","error","message","render","context","target","value","map","folder","id","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport NotefulForm from '../NotefulForm/NotefulForm'\nimport './AddNote.css'\n// import ValidationError from './ValidationError'\nimport ApiContext from '../ApiContext'\nimport NotefulError from '../NotefulError'\n\nexport default class AddNote extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      noteNameInput: '',\n      noteContentInput:'',\n      noteFolderSelect: ''\n    }\n  }\n\n  addNewNote(noteNameInput) {\n    console.log('addNewNote ran')\n    this.setState({noteNameInput})\n  }\n\n  addNoteContent(noteContentInput) {\n    console.log('addNoteContent ran')\n    this.setState({noteContentInput})\n  }\n\n  selectFolder(noteFolderSelect) {\n    this.setState({noteFolderSelect})\n  }\n\n  handleSubmit = e => {\n    console.log('handleSubmit ran')\n    e.preventDefault()\n    const newNote = this.state.noteNameInput;\n    const newContent = this.state.noteContentInput;\n    const selectedFolder = this.state.noteFolderSelect;\n    const url = 'http://localhost:9090/notes';\n    const options = {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(newNote),\n    }\n\n    fetch(url, options)\n      .then(res => {\n        if(!res.ok) {\n          throw new Error('Something went wrong, please try again later');\n        }\n        return res.json();\n      })\n      .then(data => {\n        this.setState({\n          name: ''\n        });\n        this.addNewNote(newNote);\n      })\n    .then(data => {\n      this.setState({\n        name: '',\n        folderId: '',\n        content: '',\n        folders: []\n      });\n      this.props.addNewNote(newNote);\n      this.props.addNoteContent(newContent);\n      this.props.selectFolder(selectedFolder);\n    })\n    .catch(err => {\n      this.setState({\n        error: err.message\n      });\n    });\n  }\n\n  static contextType = ApiContext;\n\n  render() {\n    const { folders=[] } = this.context\n    return (\n      <section className='AddNote'>\n        <h2>Create a note</h2>\n        <NotefulForm onSubmit={this.handleSubmit}>\n          <div className='field'>\n            <label htmlFor='note-name-input'>\n              Name\n            </label>\n            <input type='text' id='noteNameInput' name='noteNameInput' onChange={e => this.addNewNote(e.target.value)}/>\n            {/* <ValidationError hasError={!this.state.nameValid} message={this.state.validationMessages.name}/> */}\n          </div>\n          <div className='field'>\n            <label htmlFor='note-content-input'>\n              Content\n            </label>\n            <textarea id='noteContentInput' name='noteContentInput' onChange={e => this.addNoteContent(e.target.value)}/>\n          </div>\n          <div className='field'>\n            <label htmlFor='note-folder-select'>\n              Folder\n            </label>\n            <select id='noteFolderSelect' name='noteFolderSelect' onChange={e => this.selectFolder(e.target.value)}>\n              <option value={null}>...</option>\n              {folders.map(folder =>\n                <option key={folder.id} value={folder.id}>\n                  {folder.name}\n                </option>\n              )}\n            </select>\n          </div>\n          <div className='buttons'>\n            <button type='submit'>\n              Add note\n            </button>\n          </div>\n        </NotefulForm>\n      </section>\n    )\n  }\n}\n\n\n  // validateName(fieldValue) {\n  //   const fieldErrors = {...this.state.validationMessages};\n  //   let hasError = false;\n\n  //   fieldValue = fieldValue.trim();\n  //   if(fieldValue.length === 0) {\n  //     fieldErrors.noteNameInput = 'A name is required for the folder';\n  //     hasError = true;\n  //   } else {\n  //     fieldErrors.noteNameInput= '';\n  //     hasError = false;\n  //     }\n  //   }\n  // }\n  //   this.setState({\n  //     validationMessages: fieldErrors,\n  //     noteNameInputVaild: !hasError\n  //   }, this.formValid );\n  \n  //   formValid() {\n  //     this.setState({\n  //       formValid: this.state.nameNameInputValid\n  //     });\n  //   }\n  // }\n\n\n        // noteNameInputVaild: false,\n      // formValid: false,\n      // validationMessages: {\n      //   noteNameInput: ''\n      // }"]},"metadata":{},"sourceType":"module"}