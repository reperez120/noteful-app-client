{"ast":null,"code":"var _jsxFileName = \"/Users/rachelemilyperez/projects/noteful-app/noteful-app-client/src/App/App.js\";\nimport React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport NoteListNav from '../NoteListNav/NoteListNav';\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport NoteListMain from '../NoteListMain/NoteListMain';\nimport NotePageMain from '../NotePageMain/NotePageMain';\nimport AddFolder from '../AddFolder/AddFolder';\nimport AddNote from '../AddNote/AddNote';\nimport EditNote from '../EditNote/EditNote';\nimport EditFolder from '../EditFolder/EditFolder';\nimport ApiContext from '../ApiContext';\nimport config from '../config';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      folders: []\n    };\n    this.foldersRes = [{\n      id: 1,\n      name: 'Important'\n    }, {\n      id: 2,\n      name: 'Super'\n    }, {\n      id: 3,\n      name: 'Spangley'\n    }, {\n      id: 4,\n      name: 'g'\n    }, {\n      id: 5,\n      name: 'g'\n    }];\n    this.notesRes = [{\n      id: 1,\n      name: 'Dogs',\n      folderId: 1\n    }, {\n      id: 2,\n      name: 'Cats',\n      folderId: 2\n    }, {\n      id: 3,\n      name: 'Pigs',\n      folderId: 2\n    }, {\n      id: 4,\n      name: 'Birds',\n      folderId: 1\n    }, {\n      id: 5,\n      name: 'Bears',\n      folderId: 1\n    }, {\n      id: 6,\n      name: 'Horses',\n      folderId: 2\n    }, {\n      id: 7,\n      name: 'Tigers',\n      folderId: 3\n    }, {\n      id: 8,\n      name: 'Wolves',\n      folderId: 3\n    }, {\n      id: 9,\n      name: 'Elephants',\n      folderId: 2\n    }, {\n      id: 10,\n      name: 'Lions',\n      folderId: 1\n    }, {\n      id: 11,\n      name: 'Monkeys',\n      folderId: 3\n    }];\n\n    this.addFolderContent = () => {\n      this.state.folders = this.notesRes.reduce((foldersRes, note) => {\n        const index = foldersRes.findIndex(f => f.id === note.folderId);\n        if (!foldersRes[index].notes) foldersRes[index].notes = [];\n        foldersRes[index].notes.push({\n          id: note.id,\n          name: note.name\n        });\n        return foldersRes;\n      }, foldersRes);\n      console.log(JSON.stringify(state, null, 3));\n    };\n\n    this.addNewFolder = folder => {\n      this.setState({\n        folders: [...this.state.folders, folder]\n      });\n    };\n\n    this.addNewNote = note => {\n      this.setState({\n        notes: [...this.state.notes, note]\n      });\n    };\n\n    this.editNote = editedNote => {\n      const newNotes = this.state.notes.map(note => note.id === editedNote.id ? editedNote : note);\n      this.setState({\n        notes: newNotes\n      });\n    };\n\n    this.handleDeleteNote = noteId => {\n      this.setState({\n        notes: this.state.notes.filter(note => note.id !== noteId)\n      });\n      this.props.history.push(\"/\");\n    };\n\n    this.handleDeleteFolder = folderId => {\n      this.setState({\n        folders: this.state.folders.filter(folder => folder.id !== folderId)\n      });\n    };\n  }\n\n  componentDidMount() {\n    Promise.all([fetch(\"\".concat(config.API_ENDPOINT, \"/api/notes\")), fetch(\"\".concat(config.API_ENDPOINT, \"/api/folders\"))]).then(([notesRes, foldersRes]) => {\n      if (!notesRes.ok) return notesRes.json().then(e => Promise.reject(e));\n      if (!foldersRes.ok) return foldersRes.json().then(e => Promise.reject(e));\n      return Promise.all([notesRes.json(), foldersRes.json()]);\n    }).then(([notes, folders]) => {\n      console.log(notes, folders);\n      this.setState({\n        notes,\n        folders\n      });\n    }).catch(error => {\n      console.error({\n        error\n      });\n    });\n  }\n\n  renderNavRoutes() {\n    return React.createElement(React.Fragment, null, ['/', '/folder/:folderId'].map(path => React.createElement(Route, {\n      exact: true,\n      key: path,\n      path: path,\n      component: NoteListNav,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/note/:noteId\",\n      component: NotePageNav,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/add-folder\",\n      component: NotePageNav,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/add-note\",\n      component: NotePageNav,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }));\n  }\n\n  renderMainRoutes() {\n    return React.createElement(React.Fragment, null, ['/', '/folder/:folderId'].map(path => React.createElement(Route, {\n      exact: true,\n      key: path,\n      path: path,\n      component: NoteListMain,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/note/:noteId\",\n      component: NotePageMain,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/add-folder\",\n      render: history => React.createElement(AddFolder, {\n        addNewFolder: this.addNewFolder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/add-note\",\n      render: history => React.createElement(AddNote, {\n        addNewNote: this.addNewNote,\n        folders: this.state.folders,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/edit/:noteId\",\n      render: history => React.createElement(EditNote, {\n        editNote: this.EditNote,\n        folders: this.state.folders,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/edit/:folderId\",\n      render: history => React.createElement(EditFolder, {\n        editFolder: this.EditFolder,\n        folders: this.state.folders,\n        notes: this.state.notes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }));\n  }\n\n  render() {\n    const value = {\n      notes: this.state.notes,\n      folders: this.state.folders,\n      deleteNote: this.handleDeleteNote,\n      deleteFolder: this.handleDeleteFolder\n    };\n    return React.createElement(ApiContext.Provider, {\n      value: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      className: \"App__nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, this.renderNavRoutes()), React.createElement(\"header\", {\n      className: \"App__header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"Noteful\"), ' ')), React.createElement(\"main\", {\n      className: \"App__main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, this.renderMainRoutes())));\n  }\n\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/rachelemilyperez/projects/noteful-app/noteful-app-client/src/App/App.js"],"names":["React","Component","Route","Link","withRouter","NoteListNav","NotePageNav","NoteListMain","NotePageMain","AddFolder","AddNote","EditNote","EditFolder","ApiContext","config","App","state","folders","foldersRes","id","name","notesRes","folderId","addFolderContent","reduce","note","index","findIndex","f","notes","push","console","log","JSON","stringify","addNewFolder","folder","setState","addNewNote","editNote","editedNote","newNotes","map","handleDeleteNote","noteId","filter","props","history","handleDeleteFolder","componentDidMount","Promise","all","fetch","API_ENDPOINT","then","ok","json","e","reject","catch","error","renderNavRoutes","path","renderMainRoutes","render","value","deleteNote","deleteFolder"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Route, Link} from 'react-router-dom';\nimport {withRouter} from 'react-router-dom';\nimport NoteListNav from '../NoteListNav/NoteListNav';\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport NoteListMain from '../NoteListMain/NoteListMain';\nimport NotePageMain from '../NotePageMain/NotePageMain';\nimport AddFolder from '../AddFolder/AddFolder';\nimport AddNote from '../AddNote/AddNote';\nimport EditNote from '../EditNote/EditNote';\nimport EditFolder from'../EditFolder/EditFolder';\nimport ApiContext from '../ApiContext';\nimport config from '../config';\nimport './App.css'\n\nclass App extends Component {\n\n    state = {\n        folders: [],\n      }\n        \n    foldersRes = [\n        { id: 1, name: 'Important' },\n        { id: 2, name: 'Super' },\n        { id: 3, name: 'Spangley' },\n        { id: 4, name: 'g' },\n        { id: 5, name: 'g' },\n      ]\n      \n     notesRes = [\n        { id: 1, name: 'Dogs', folderId: 1 },\n        { id: 2, name: 'Cats', folderId: 2 },\n        { id: 3, name: 'Pigs', folderId: 2 },\n        { id: 4, name: 'Birds', folderId: 1 },\n        { id: 5, name: 'Bears', folderId: 1 },\n        { id: 6, name: 'Horses', folderId: 2 },\n        { id: 7, name: 'Tigers', folderId: 3 },\n        { id: 8, name: 'Wolves', folderId: 3 },\n        { id: 9, name: 'Elephants', folderId: 2 },\n        { id: 10, name: 'Lions', folderId: 1 },\n        { id: 11, name: 'Monkeys', folderId: 3 }\n      ]\n\n      addFolderContent = () => {\n      \n      this.state.folders = this.notesRes.reduce((foldersRes, note) => {\n        const index = foldersRes.findIndex(f => f.id === note.folderId) \n        if (!foldersRes[index].notes) \n          foldersRes[index].notes = []\n        foldersRes[index].notes.push({ \n          id: note.id, \n          name: note.name \n        })\n        return foldersRes\n      }, foldersRes)\n\n      console.log(JSON.stringify(state, null, 3))\n    }\n\n    // state = {\n    //     notes: [],\n    //     folders: []  \n    // };\n\n    addNewFolder = folder => {\n        this.setState({ \n            folders: [ ...this.state.folders, folder \n        ]})\n    }\n\n    addNewNote = (note) => {\n        this.setState({ \n            notes: [ ...this.state.notes, note\n        ]});\n    };\n\n    editNote= editedNote => {\n        const newNotes = this.state.notes.map(note =>\n            (note.id === editedNote.id)\n            ? editedNote\n            : note\n            )\n        this.setState({\n            notes: newNotes\n        })\n    }\n \n    componentDidMount() {\n        Promise.all([\n            fetch(`${config.API_ENDPOINT}/api/notes`),\n            fetch(`${config.API_ENDPOINT}/api/folders`)\n        ])\n            .then(([notesRes, foldersRes]) => {\n               \n                if (!notesRes.ok)\n                    return notesRes.json().then(e => Promise.reject(e));\n                if (!foldersRes.ok)\n                    return foldersRes.json().then(e => Promise.reject(e));\n                    \n                    return Promise.all([notesRes.json(), foldersRes.json()]);\n            })\n            .then(([notes, folders]) => {\n                console.log(notes, folders)\n                this.setState({notes, folders});\n            })\n            .catch(error => {\n                console.error({error});\n            });\n    };\n\n    handleDeleteNote = noteId => {\n        this.setState({\n            notes: this.state.notes.filter(note => note.id !== noteId)\n        });\n        this.props.history.push(`/`)\n    };\n\n    handleDeleteFolder = folderId => {\n        this.setState({\n            folders: this.state.folders.filter(folder => folder.id !== folderId)\n        });\n    };\n\n    renderNavRoutes() {\n        return (\n            <>\n                {['/', '/folder/:folderId'].map(path => (\n                    <Route\n                        exact\n                        key={path}\n                        path={path}\n                        component={NoteListNav}\n                    />\n                ))}\n                <Route path=\"/note/:noteId\" component={NotePageNav} />\n                <Route path=\"/add-folder\" component={NotePageNav} />\n                <Route path=\"/add-note\" component={NotePageNav} />\n            </>\n        );\n    }\n\n    renderMainRoutes() {\n        return (\n            <>\n                {['/', '/folder/:folderId'].map(path => (\n                    <Route\n                        exact\n                        key={path}\n                        path={path}\n                        component={NoteListMain}\n                    />\n                ))}\n                <Route \n                    path=\"/note/:noteId\" \n                    component={NotePageMain} \n                />\n\n                <Route path='/add-folder' \n                    render={(history) =>\n                <AddFolder\n                    addNewFolder={this.addNewFolder}\n                />}\n                />\n               <Route path='/add-note'\n                render={(history) =>\n                    <AddNote\n                        addNewNote = {this.addNewNote}\n                        folders ={this.state.folders} \n                    /> }\n                />\n                <Route path='/edit/:noteId'\n                    render={(history) =>\n                    <EditNote\n                        editNote = {this.EditNote}\n                        folders ={this.state.folders} \n                    /> }\n                />\n\n                <Route path='/edit/:folderId'\n                    render={(history) =>\n                    <EditFolder\n                        editFolder = {this.EditFolder}\n                        folders = {this.state.folders} \n                        notes = {this.state.notes}\n                    /> }\n            />          \n            </>\n        );\n    }\n\n    render() {\n            const value = {\n            notes: this.state.notes,\n            folders: this.state.folders,\n            deleteNote: this.handleDeleteNote,\n            deleteFolder: this.handleDeleteFolder\n            };\n        \n        return (\n            <ApiContext.Provider value={value}>\n                <div className=\"App\">\n                    <nav className=\"App__nav\">{this.renderNavRoutes()}</nav>\n                    <header className=\"App__header\">\n                        <h1>\n                            <Link to=\"/\">Noteful</Link>{' '}\n                        </h1>\n                    </header>\n                    <main className=\"App__main\">{this.renderMainRoutes()}</main>\n                </div>\n            </ApiContext.Provider>\n        );\n    }\n}\n\nexport default withRouter(App)\n"]},"metadata":{},"sourceType":"module"}