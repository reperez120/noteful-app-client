{"version":3,"sources":["AddButton/AddButton.js","ApiContext.js","notes-helpers.js","config.js","EditFolder/EditFolder.js","NoteListNav/NoteListNav.js","NotefulError.js","NotePageNav/NotePageNav.js","EditNote/EditNote.js","Note/Note.js","NoteListMain/NoteListMain.js","NotePageMain/NotePageMain.js","NotefulForm/NotefulForm.js","AddFolder/AddFolder.js","AddNote/ValidationError.js","AddNote/AddNote.js","App/App.js","index.js"],"names":["NavAddButton","props","tag","className","childrenm","otherProps","Object","objectWithoutProperties","React","createElement","objectSpread","join","children","defaultProps","ApiContext","createContext","render","console","log","this","folders","addFolder","addNote","deleteNote","updateNote","updateFolder","deleteFolder","findNote","notes","arguments","length","undefined","noteId","find","note","id","Number","config","API_ENDPOINT","EditFolder","state","error","name","handleNameChange","e","_this","setState","target","value","handleSubmit","preventDefault","folderId","match","params","newFolder","url","concat","options","method","headers","content-type","body","JSON","stringify","fetch","then","res","ok","Error","context","history","push","catch","err","message","_this2","json","data","react_default","a","onSubmit","htmlFor","type","defaultValue","onChange","Component","contextType","NoteListNav","noteLength","handleClickDelete","Promise","reject","_this$context","_this$context$folders","_this$context$notes","map","folder","key","react_router_dom","to","filter","countNotesForFolder","onClick","bind","Link","onDeleteFolder","onEditFolder","NotefulError","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","hasError","NotePageNav","findFolder","NotefulError_NotefulError","role","goBack","EditNote","content","handleContentChange","handleFolderChange","noteName","_this$state","newNote","_this$state2","handleContentsChange","Note","_this$props","modified","format","replace","onDeleteNote","onEditNote","NoteListMain","notesForFolder","getNotesForFolder","Note_Note_Note","date","NotePageMain","NotefulForm","assign","action","AddFolder","handleFolderSubmit","NotefulForm_NotefulForm","withRouter","ValidationError","Fragment","AddNote","handleNoteSubmit","_e$target","selectedFolder","Date","addNewNote","nameValid","formValid","validationMessage","validateName","fieldValue","fieldErrors","trim","_this3","verifyNameLength","nameVaild","disabled","App","toConsumableArray","mergeFoldersAndNotes","forEach","index","findIndex","f","editedNote","newNotes","updatedFolder","newFolders","handleDeleteNote","handleDeleteFolder","getNotes","EditNotefolders","all","_ref","_ref2","slicedToArray","notesRes","foldersRes","_ref3","_ref4","path","react_router","exact","component","src_AddFolder_AddFolder","src_AddNote_AddNote","src_ApiContext","Provider","renderNavRoutes","renderMainRoutes","ReactDOM","src_App_App","document","getElementById"],"mappings":"qlBAGe,SAASA,EAAaC,GACkBA,EAA7CC,IAA6CD,EAAxCE,UAAwCF,EAA7BG,UADkB,IACJC,EADIC,OAAAC,EAAA,EAAAD,CACWL,EADX,iCAG1C,OAAOO,IAAMC,cACXR,EAAMC,IADDI,OAAAI,EAAA,EAAAJ,CAAA,CAGHH,UAAW,CAAC,eAAgBF,EAAME,WAAWQ,KAAK,MAC/CN,GAELJ,EAAMW,UAIVZ,EAAaa,aAAc,CACzBX,IAAK,KCfP,IAkBeY,EAlBKN,IAAMO,cAAc,CAEtCC,OAFsC,WAGpCC,QAAQC,IAAI,UAAWC,MAEdA,KAAKC,QAEHD,KAAKE,UACPF,KAAKG,QACFH,KAAKI,WACLJ,KAAKK,WACJL,KAAKM,aACJN,KAAKO,gBCVVC,EAAW,eAACC,EAADC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAO,GAAIG,EAAXH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAA,OACtBH,EAAMK,KAAK,SAAAC,GAAI,OAAIA,EAAKC,KAAOC,OAAOJ,MCLzBK,UAAA,CACXC,aAAc,kDCKGC,6MAcjBC,MAAQ,CACJC,MAAO,KACPC,KAAM,MA0BVC,iBAAmB,SAAAC,GACfC,EAAKC,SAAS,CAAEJ,KAAME,EAAEG,OAAOC,WAGnCC,aAAe,SAAAL,GACXA,EAAEM,iBAEF,IAAOC,EAAYN,EAAK5C,MAAMmD,MAAMC,OAAOF,SAErCG,EAAa,CAACZ,KADLG,EAAKL,MAAME,MAEpBa,EAAG,qCAAAC,OAAwCL,GAC3CM,EAAU,CACZC,OAAQ,QACPC,QAAS,CACNC,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUT,IAEzBU,MAAMT,EAAKE,GACVQ,KAAK,SAAAC,GACN,IAAIA,EAAIC,GACJ,MAAM,IAAIC,MAAM,kDAGnBH,KAAM,WACHpB,EAAKwB,QAAQ5C,aAAa6B,GAC1BT,EAAK5C,MAAMqE,QAAQC,KAAK,OAE9BC,MAAM,SAAAC,GACJ5B,EAAKC,SAAS,CACVL,MAAOgC,EAAIC,gGArDC,IAAAC,EAAAxD,KAEdgC,EAAYhC,KAAKlB,MAAMmD,MAAMC,OAAOF,SAE1Ca,MAAK,qCAAAR,OAAsCL,GAAY,CAAEO,OAAQ,QAC5DO,KAAK,SAAAC,GACN,IAAIA,EAAIC,GACJ,MAAM,IAAIC,MAAM,gDAEpB,OAAOF,EAAIU,SAEdX,KAAK,SAAAY,GACDF,EAAK7B,SAAS,CACNJ,KAAMmC,EAAKnC,SAGvB8B,MAAM,SAAAC,GACHE,EAAK7B,SAAS,CACVL,MAAOgC,EAAIC,6CAwCd,IACGhC,EAASvB,KAAKqB,MAAdE,KAER,OACEoC,EAAAC,EAAAtE,cAAA,WAASN,UAAU,cACjB2E,EAAAC,EAAAtE,cAAA,yBACAqE,EAAAC,EAAAtE,cAAA,QAAMuE,SAAU7D,KAAK8B,cACjB6B,EAAAC,EAAAtE,cAAA,OAAKN,UAAU,SACX2E,EAAAC,EAAAtE,cAAA,SAAOwE,QAAQ,cAAf,SAGAH,EAAAC,EAAAtE,cAAA,SACIyE,KAAK,OACL/C,GAAG,OACHO,KAAK,OACLyC,aAAczC,EACd0C,SAAUjE,KAAKwB,oBAGvBmC,EAAAC,EAAAtE,cAAA,OAAKN,UAAU,WACX2E,EAAAC,EAAAtE,cAAA,UAAQN,UAAU,aAAa+E,KAAK,UAApC,yBAjGwBG,aAAnB9C,EAYV+C,YAAcxE,oBCPJyE,6MASnB/C,MAAQ,CACNgD,WAAY,QAGdC,kBAAoB,SAACtC,EAAUP,GAC7BA,EAAEM,iBAEFc,MAAK,GAAAR,OAAInB,EAAOC,aAAX,iBAAAkB,OAAuCL,GAAY,CACtDO,OAAQ,WAETO,KAAK,SAAAC,GAEJ,OADAjD,QAAQC,IAAIgD,GACPA,EAAIC,GAEFD,EADEA,EAAIU,OAAOX,KAAK,SAAArB,GAAC,OAAI8C,QAAQC,OAAO/C,OAG9CqB,KAAK,WACJpB,EAAKwB,QAAQ3C,aAAayB,KAE3BqB,MAAM,SAAA/B,GACLxB,QAAQwB,MAAM,CAAEA,qFAIX,IAAAkC,EAAAxD,KAAAyE,EAC2BzE,KAAKkD,QADhCwB,EAAAD,EACCxE,eADD,IAAAyE,EACS,GADTA,EAAAC,EAAAF,EACchE,aADd,IAAAkE,EACoB,GADpBA,EAWP,OACEhB,EAAAC,EAAAtE,cAAA,OAAKN,UAAU,eACb2E,EAAAC,EAAAtE,cAAA,MAAIN,UAAU,qBACXiB,EAAQ2E,IAAI,SAAAC,GAAM,OACjBlB,EAAAC,EAAAtE,cAAA,MAAIwF,IAAKD,EAAO7D,IACd2C,EAAAC,EAAAtE,cAACyF,EAAA,EAAD,CACE/F,UAAU,2BACVgG,GAAE,WAAA3C,OAAawC,EAAO7D,KAEtB2C,EAAAC,EAAAtE,cAAA,QAAMN,UAAU,0BH7CG,eAACyB,EAADC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAO,GAAIsB,EAAXtB,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAA,OACjCH,EAAMwE,OAAO,SAAAlE,GAAI,OAAIA,EAAKiB,WAAaA,IAAUrB,OG6ChCuE,CAAoBzE,EAAOoE,EAAO7D,KAGpC6D,EAAOtD,KACRoC,EAAAC,EAAAtE,cAAA,QAAMN,UAAU,YAWlB2E,EAAAC,EAAAtE,cAAA,OAAKN,UAAU,WACb2E,EAAAC,EAAAtE,cAAA,UACJN,UAAU,gBACV+E,KAAK,SACLoB,QAAS3B,EAAKc,kBAAkBc,KAAK,KAAMP,EAAO7D,KAH9C,UAON2C,EAAAC,EAAAtE,cAAA,OAAKN,UAAU,cACf2E,EAAAC,EAAAtE,cAACyF,EAAA,EAAD,CAAMC,GAAE,YAAA3C,OACKwC,EAAO7D,GADZ,UAAR,eAUF2C,EAAAC,EAAAtE,cAAA,OAAKN,UAAU,+BACb2E,EAAAC,EAAAtE,cAACT,EAAD,CACEE,IAAKsG,IACLL,GAAG,cACHjB,KAAK,SACL/E,UAAU,kCAJZ,aAOE2E,EAAAC,EAAAtE,cAAA,qBAhG6BD,IAAM6E,WAA1BE,EACZ1E,aAAc,CACnBO,QAAS,GACTqF,eAAgB,aAChBC,aAAc,cAJGnB,EAMZD,YAAcxE,MCfF6F,cAEjB,SAAAA,EAAY1G,GAAO,IAAA4C,EAAA,OAAAvC,OAAAsG,EAAA,EAAAtG,CAAAa,KAAAwF,IACf9D,EAAAvC,OAAAuG,EAAA,EAAAvG,CAAAa,KAAAb,OAAAwG,EAAA,EAAAxG,CAAAqG,GAAAI,KAAA5F,KAAMlB,KACDuC,MAAQ,CACTwE,UAAU,GAHCnE,wEAWjB,OAAI1B,KAAKqB,MAAMwE,SAEXlC,EAAAC,EAAAtE,cAAA,iCAGGU,KAAKlB,MAAMW,4DATY6B,GAC5B,MAAO,CAAEuE,UAAU,UAVe3B,aCKrB4B,2LAWV,IAAApE,EAAA1B,KAAAyE,EACqBzE,KAAKkD,QAAzBzC,EADDgE,EACChE,MAAOR,EADRwE,EACQxE,QACPY,EAAWb,KAAKlB,MAAMmD,MAAMC,OAA5BrB,OAEFgE,ELrBgB,eAAC5E,EAADS,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAS,GAAIsB,EAAbtB,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAA,OACxBX,EAAQa,KAAK,SAAA+D,GAAM,OAAIA,EAAO7D,KAAOgB,IKoBpB+D,CAAW9F,GADbO,EAASC,EAAOI,IAAW,IACAmB,UACxC,OACE2B,EAAAC,EAAAtE,cAAA,OAAKN,UAAU,eACf2E,EAAAC,EAAAtE,cAAC0G,EAAD,KACErC,EAAAC,EAAAtE,cAACT,EAAD,CACEE,IAAI,SACJkH,KAAK,OACLd,QAAS,kBAAMzD,EAAK5C,MAAMqE,QAAQ+C,UAClClH,UAAU,4BAEV2E,EAAAC,EAAAtE,cAAA,WANF,QASCuF,GACClB,EAAAC,EAAAtE,cAAA,MAAIN,UAAU,4BACX6F,EAAOtD,eA9BqBlC,IAAM6E,YAA1B4B,EACZpG,aAAe,CACpByD,QAAS,CACP+C,OAAQ,cAEVjE,MAAO,CACLC,OAAQ,KANO4D,EASZ3B,YAAcxE,eCVFwG,qNAWjB9E,MAAQ,CACJC,MAAO,KACPC,KAAM,GACN6E,QAAS,GACTvB,OAAQ,MA8BZrD,iBAAmB,SAAAC,GACfC,EAAKC,SAAS,CAAEJ,KAAME,EAAEG,OAAOC,WAGnCwE,oBAAsB,SAAA5E,GAClBC,EAAKC,SAAS,CAAEyE,QAAS3E,EAAEG,OAAOC,WAGtCyE,mBAAqB,SAAA7E,GACjBC,EAAKC,SAAS,CAAEkD,OAAQpD,EAAEG,OAAOC,WAGrCC,aAAe,SAAAL,GACXA,EAAEM,iBACF,IAAMwE,EAAW9E,EAAEG,OAAOL,KAAKM,MAC/BH,EAAKC,SAAU,CACZJ,KAAMgF,IAET,IAAM1F,EAASa,EAAK5C,MAAMmD,MAAMC,OAAOrB,OANvB2F,EAOsB9E,EAAKL,MACrCoF,EAAU,CAAEzF,GARFwF,EAORxF,GACcO,KARNiF,EAOJjF,KACgB6E,QARZI,EAOEJ,QACmBvB,OARrB2B,EAOW3B,QAGrBzC,EAAG,mCAAAC,OAAsCxB,GAC/Cf,QAAQC,IAAIqC,GACZ,IAAME,EAAU,CACZC,OAAQ,QACPC,QAAS,CACNC,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU6D,IAEzB5D,MAAMT,EAAKE,GACVQ,KAAK,SAAAC,GACN,IAAIA,EAAIC,GACJ,MAAM,IAAIC,MAAM,gDAEpB,OAAOF,EAAIU,SAEVX,KAAK,WACFpB,EAAKwB,QAAQ7C,WAAWoG,GACxB/E,EAAK5C,MAAMqE,QAAQC,KAAK,OAE9BC,MAAM,SAAAC,GACJ5B,EAAKC,SAAS,CACVL,MAAOgC,EAAIC,gGArEC,IAAAC,EAAAxD,KAEda,EAASb,KAAKlB,MAAMmD,MAAMC,OAAOrB,OAEvCgC,MAAK,qCAAAR,OAAsCxB,GAAU,CAAE0B,OAAQ,QAC1DO,KAAK,SAAAC,GACN,IAAIA,EAAIC,GACJ,MAAM,IAAIC,MAAM,gDAEpB,OAAOF,EAAIU,SAEdX,KAAK,SAAAY,GACDF,EAAK7B,SAAS,CACNJ,KAAMmC,EAAKnC,KACX6E,QAAS1C,EAAK0C,QACdvB,OAAQnB,EAAKmB,WAGzBxB,MAAM,SAAAC,GACHE,EAAK7B,SAAS,CACVL,MAAOgC,EAAIC,6CAsDd,IAAAmD,EAC8B1G,KAAKqB,MAAhCE,EADHmF,EACGnF,KAAM6E,EADTM,EACSN,QAASvB,EADlB6B,EACkB7B,OACjB5E,EAAUD,KAAKlB,MAAMmB,QAE3B,OACE0D,EAAAC,EAAAtE,cAAA,WAASN,UAAU,YACjB2E,EAAAC,EAAAtE,cAAA,uBACAqE,EAAAC,EAAAtE,cAAA,QAAMuE,SAAU7D,KAAK8B,cACjB6B,EAAAC,EAAAtE,cAAA,OAAKN,UAAU,SACX2E,EAAAC,EAAAtE,cAAA,SAAOwE,QAAQ,cAAf,SAGAH,EAAAC,EAAAtE,cAAA,SACIyE,KAAK,OACL/C,GAAG,OACHO,KAAK,OACLyC,aAAczC,EACd0C,SAAUjE,KAAKwB,oBAGvBmC,EAAAC,EAAAtE,cAAA,OAAKN,UAAU,SACb2E,EAAAC,EAAAtE,cAAA,SAAOwE,QAAQ,sBAAf,WAGAH,EAAAC,EAAAtE,cAAA,YACAyE,KAAK,OACL/C,GAAG,UACHO,KAAK,UACLyC,aAAcoC,EACdnC,SAAUjE,KAAK2G,wBAEjBhD,EAAAC,EAAAtE,cAAA,OAAKN,UAAU,SACb2E,EAAAC,EAAAtE,cAAA,SAAOwE,QAAQ,sBAAf,UAGAH,EAAAC,EAAAtE,cAAA,UAAQ0B,GAAG,iBAAiBO,KAAK,iBAAiByC,aAAca,EAAQZ,SAAUjE,KAAKsG,oBACrF3C,EAAAC,EAAAtE,cAAA,UAAQuC,MAAO,MAAf,OACC5B,EAAQ2E,IAAI,SAAAC,GAAM,OACjBlB,EAAAC,EAAAtE,cAAA,UAAQwF,IAAKD,EAAO7D,GAAIa,MAAOgD,EAAO7D,IACnC6D,EAAOtD,UAKhBoC,EAAAC,EAAAtE,cAAA,OAAKN,UAAU,WACX2E,EAAAC,EAAAtE,cAAA,UAAQN,UAAU,aAAa+E,KAAK,UAApC,yBA3IsBG,cAAjBiC,EAkBVhC,YAAcxE,aCfJiH,6MASnBtC,kBAAoB,SAAEzD,EAAQY,GAC5BA,EAAEM,iBAEFc,MAAK,GAAAR,OAAInB,EAAOC,aAAX,eAAAkB,OAAqCxB,GAAU,CAClD0B,OAAQ,WAEPO,KAAK,SAAAC,GAEJ,OADAjD,QAAQC,IAAIgD,GACPA,EAAIC,GAEFD,EADEA,EAAIU,OAAOX,KAAK,SAAArB,GAAC,OAAI8C,QAAQC,OAAO/C,OAG9CqB,KAAK,WACJpB,EAAKwB,QAAQ9C,WAAWS,KAEzBwC,MAAM,SAAA/B,GACLxB,QAAQwB,MAAM,CAAEA,qFAIb,IAAAuF,EACuC7G,KAAKlB,MAArCyC,GADPsF,EACC9F,KADD8F,EACOtF,MAAMP,EADb6F,EACa7F,GAAIoF,EADjBS,EACiBT,QAASU,EAD1BD,EAC0BC,SAD1BrC,EAE0BzE,KAAKkD,QAF/BuB,EAECxE,QAFDwE,EAEahE,MAEpB,OACEkD,EAAAC,EAAAtE,cAAA,OAAKN,UAAU,QACb2E,EAAAC,EAAAtE,cAAA,MAAIN,UAAU,eACZ2E,EAAAC,EAAAtE,cAACyF,EAAA,EAAD,CAAMC,GAAE,SAAA3C,OAAWrB,IAChBO,IAGLoC,EAAAC,EAAAtE,cAAA,OAAKN,UAAU,iBACf2E,EAAAC,EAAAtE,cAAA,UACEN,UAAU,eACV+E,KAAK,SACLoB,QAASnF,KAAKsE,mBAEb,IALH,UAQAX,EAAAC,EAAAtE,cAAA,OAAKN,UAAU,YACZ2E,EAAAC,EAAAtE,cAACyF,EAAA,EAAD,CAAMC,GAAE,UAAA3C,OACGrB,EADH,UAAR,UAMH2C,EAAAC,EAAAtE,cAAA,OAAKN,UAAU,eACb2E,EAAAC,EAAAtE,cAAA,OAAKN,UAAU,wBAAf,YAEG,IACD2E,EAAAC,EAAAtE,cAAA,QAAMN,UAAU,QACb+H,iBAAOD,EAAU,kBAItBnD,EAAAC,EAAAtE,cAAA,OAAKN,UAAU,0BAEf2E,EAAAC,EAAAtE,cAAA,UAAK8G,GAAW,IAAIY,QAAQ,QAAS,YAAYA,QAAQ,MAAO,mBAnExC3H,IAAM6E,WAAnB0C,EACZlH,aAAc,CACnBO,QAAS,GACTgH,aAAc,aACdC,WAAY,aACZzG,MAAO,IALUmG,EAOZzC,YAAcxE,aCPFwH,mLAQV,IACCnF,EAAahC,KAAKlB,MAAMmD,MAAMC,OAA9BF,SADDyC,EAE2BzE,KAAKkD,QAFhCyB,GAAAF,EAEExE,QAFFwE,EAEchE,OAEf2G,ERduB,eAAC3G,EAADC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAO,GAAIsB,EAAXtB,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAA,OAC7BoB,EAEEvB,EAAMwE,OAAO,SAAAlE,GAAI,OAAIA,EAAKiB,WAAaA,IADvCvB,EQYqB4G,MAJhB,IAAA1C,EAEoB,GAFpBA,EAIyC3C,GAEhD,OACE2B,EAAAC,EAAAtE,cAAA,WAASN,UAAU,gBACjB2E,EAAAC,EAAAtE,cAAC0G,EAAD,KACArC,EAAAC,EAAAtE,cAAA,UAEG8H,EAAexC,IAAI,SAAA7D,GAAI,OACtB4C,EAAAC,EAAAtE,cAAA,MAAIwF,IAAK/D,EAAKC,IACZ2C,EAAAC,EAAAtE,cAACgI,EAAD,CACEtG,GAAID,EAAKC,GACTO,KAAMR,EAAKQ,KACXuF,SAAU/F,EAAKwG,WAKvB5D,EAAAC,EAAAtE,cAAA,OAAKN,UAAU,kCACb2E,EAAAC,EAAAtE,cAACT,EAAD,CACEE,IAAKsG,IACLL,GAAG,YACHjB,KAAK,SACL/E,UAAU,iCAJZ,WAOE2E,EAAAC,EAAAtE,cAAA,sBArC8BD,IAAM6E,WAA3BiD,EACZzH,aAAe,CACpBuC,MAAO,CACLC,OAAQ,KAHOiF,EAMZhD,YAAcxE,aCRF6H,cACnB,SAAAA,EAAY1I,GAAO,OAAAK,OAAAsG,EAAA,EAAAtG,CAAAa,KAAAwH,GAAArI,OAAAuG,EAAA,EAAAvG,CAAAa,KAAAb,OAAAwG,EAAA,EAAAxG,CAAAqI,GAAA5B,KAAA5F,KACXlB,0EAUC,IAAA6F,EACc3E,KAAKkD,QAAlBzC,aADD,IAAAkE,EACO,GADPA,EAEA9D,EAAUb,KAAKlB,MAAMmD,MAAMC,OAAOrB,OACzCf,QAAQC,IAAIc,GACZ,IAAME,EAAOP,EAASC,EAAOI,IAAW,CAAEuF,QAAS,IACnD,OACEzC,EAAAC,EAAAtE,cAAA,WAASN,UAAU,gBACjB2E,EAAAC,EAAAtE,cAAC0G,EAAD,KACArC,EAAAC,EAAAtE,cAACgI,EAAD,CACEtG,GAAID,EAAKC,GACTO,KAAMR,EAAKQ,KACX6E,QAASrF,EAAKqF,QACdU,SAAU/F,EAAKwG,gBAxBiBlI,IAAM6E,WAA3BsD,EAKZ9H,aAAe,CACpBuC,MAAO,CACLC,OAAQ,KAPOsF,EAUZrD,YAAcxE,SCbR,SAAS8H,EAAY3I,GAAO,IACjCE,EAA6BF,EAA7BE,UAAcE,EADmBC,OAAAC,EAAA,EAAAD,CACJL,EADI,eAEzC,OACE6E,EAAAC,EAAAtE,cAAA,OAAAH,OAAAuI,OAAA,CACE1I,UAAW,CAAC,eAAgBA,GAAWQ,KAAK,KAC5CmI,OAAO,KACHzI,eCHJ0I,cAMJ,SAAAA,EAAY9I,GAAO,IAAA4C,EAAA,OAAAvC,OAAAsG,EAAA,EAAAtG,CAAAa,KAAA4H,IACjBlG,EAAAvC,OAAAuG,EAAA,EAAAvG,CAAAa,KAAAb,OAAAwG,EAAA,EAAAxG,CAAAyI,GAAAhC,KAAA5F,KAAMlB,KAMR+I,mBAAqB,SAAApG,GACnBA,EAAEM,iBADsB,IAGlB8C,EAAS,CACbtD,KAFaE,EAAEG,OAAVL,KAEMM,OAIPS,EAAU,CAChBC,OAAQ,OACRC,QAAS,CACLC,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUiC,IAErBnD,EAAKC,SAAS,CAAEL,MAAO,OACvBuB,MAVY,oCAUDP,GACRQ,KAAK,SAAAC,GACJ,IAAIA,EAAIC,GACN,MAAM,IAAIC,MAAM,gDAElB,OAAOF,EAAIU,SAEZX,KAAK,SAAAY,GACJhC,EAAK5C,MAAMoB,UAAUwD,GACrBhC,EAAK5C,MAAMqE,QAAQC,KAAK,OAEzBC,MAAM,SAAAC,GACL5B,EAAKC,SAAS,CACZL,MAAOgC,EAAIC,aAlCjB7B,EAAKL,MAAQ,CACXE,KAAM,IAHSG,wEA0CjB,OACEiC,EAAAC,EAAAtE,cAAA,WAASN,UAAU,aACjB2E,EAAAC,EAAAtE,cAAC0G,EAAD,KACArC,EAAAC,EAAAtE,cAAA,6BACAqE,EAAAC,EAAAtE,cAACwI,EAAD,CAAajE,SAAU7D,KAAK6H,oBAC1BlE,EAAAC,EAAAtE,cAAA,OAAKN,UAAU,SACb2E,EAAAC,EAAAtE,cAAA,SAAOwE,QAAQ,cAAf,QAGAH,EAAAC,EAAAtE,cAAA,SAAOyE,KAAK,OAAO/C,GAAG,UAExB2C,EAAAC,EAAAtE,cAAA,OAAKN,UAAU,WACb2E,EAAAC,EAAAtE,cAAA,UAAQyE,KAAK,SAAS/E,UAAU,mBAAhC,yBA5DYkF,aA8ET6D,cAAWH,GCnFX,SAASI,EAAgBlJ,GACtC,OAAGA,EAAM+G,SAELlC,EAAAC,EAAAtE,cAAA,OAAKN,UAAU,SAASF,EAAMyE,SAI3BI,EAAAC,EAAAtE,cAAAqE,EAAAC,EAAAqE,SAAA,iBCFHC,cAEJ,SAAAA,EAAYpJ,GAAO,IAAA4C,EAAA,OAAAvC,OAAAsG,EAAA,EAAAtG,CAAAa,KAAAkI,IACjBxG,EAAAvC,OAAAuG,EAAA,EAAAvG,CAAAa,KAAAb,OAAAwG,EAAA,EAAAxG,CAAA+I,GAAAtC,KAAA5F,KAAMlB,KAeRqJ,iBAAmB,SAAA1G,GACjBA,EAAEM,iBADoB,IAAAqG,EAEoB3G,EAAEG,OAApCL,EAFc6G,EAEd7G,KAAM8G,EAFQD,EAERC,eAAgBjC,EAFRgC,EAEQhC,QACxBrF,EAAO,CACXQ,KAAMA,EAAKM,MACXgD,OAAQwD,EAAexG,MACvBuE,QAASA,EAAQvE,MACjB0F,KAAM,IAAIe,MAEZxI,QAAQC,IAAIgB,GAEZ,IAAMuB,EAAU,CACdC,OAAQ,OACRC,QAAS,CACPC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU7B,IAEvBW,EAAKC,SAAS,CAAEL,MAAO,OACvBuB,MAAM,kCAAmCP,GACtCQ,KAAK,SAAAC,GACJ,IAAIA,EAAIC,GACN,MAAM,IAAIC,MAAM,gDAElB,OAAOF,EAAIU,SAEdX,KAAK,SAAAY,GACJhC,EAAK5C,MAAMyJ,WAAW7E,GACtBhC,EAAK5C,MAAMqE,QAAQC,KAAK,OAEzBC,MAAM,SAAAC,GACL5B,EAAKC,SAAS,CACZL,MAAOgC,EAAIC,aA9Cf7B,EAAKL,MAAQ,CACXE,KAAM,GACNiH,WAAW,EACXC,WAAW,EACXC,kBAAmB,CACjBnH,KAAM,KAPOG,gFAYFH,GAAM,IAAAiC,EAAAxD,KACrBA,KAAK2B,SAAS,CAACJ,QAAO,WAAOiC,EAAKmF,aAAapH,0CAwCpCqH,GACX,IAAMC,EAAW1J,OAAAI,EAAA,EAAAJ,CAAA,GAAOa,KAAKqB,MAAMqH,mBAC/B7C,GAAW,EAEU,KADzB+C,EAAaA,EAAWE,QACVnI,QACZkI,EAAYtH,KAAO,2BACnBsE,GAAW,IAEXgD,EAAYtH,KAAO,GACnBsE,GAAW,GAEb7F,KAAK2B,SAAS,CACZ+G,kBAAmBG,EACnBL,WAAY3C,GACX7F,KAAKyI,+CAGVzI,KAAK2B,SAAS,CACV8G,UAAWzI,KAAKqB,MAAMmH,6CAIjB,IAAAO,EAAA/I,KACDC,EAAUD,KAAKlB,MAAMmB,QAC3B,OACE0D,EAAAC,EAAAtE,cAAA,WAASN,UAAU,WACjB2E,EAAAC,EAAAtE,cAAC0G,EAAD,KACErC,EAAAC,EAAAtE,cAAA,2BACAqE,EAAAC,EAAAtE,cAACwI,EAAD,CAAajE,SAAU7D,KAAKmI,kBAC1BxE,EAAAC,EAAAtE,cAAA,OAAKN,UAAU,SACb2E,EAAAC,EAAAtE,cAAA,SAAOwE,QAAQ,mBAAf,QAGAH,EAAAC,EAAAtE,cAAA,SAAOyE,KAAK,OAAO/C,GAAG,OAAOO,KAAK,OAAO0C,SAAU,SAAAxC,GAAC,OAAIsH,EAAKC,iBAAiBvH,EAAEG,OAAOC,UACvF8B,EAAAC,EAAAtE,cAAC0I,EAAD,CAAiBnC,UAAW7F,KAAKqB,MAAM4H,UAAW1F,QAASvD,KAAKqB,MAAMqH,kBAAkBnH,QAE1FoC,EAAAC,EAAAtE,cAAA,OAAKN,UAAU,SACb2E,EAAAC,EAAAtE,cAAA,SAAOwE,QAAQ,sBAAf,WAGAH,EAAAC,EAAAtE,cAAA,YAAUyE,KAAK,OAAO/C,GAAG,UAAUO,KAAK,aAE1CoC,EAAAC,EAAAtE,cAAA,OAAKN,UAAU,SACb2E,EAAAC,EAAAtE,cAAA,SAAOwE,QAAQ,sBAAf,UAGAH,EAAAC,EAAAtE,cAAA,UAAQ0B,GAAG,iBAAiBO,KAAK,kBAC/BoC,EAAAC,EAAAtE,cAAA,UAAQuC,MAAO,MAAf,OACC5B,EAAQ2E,IAAI,SAAAC,GAAM,OACjBlB,EAAAC,EAAAtE,cAAA,UAAQwF,IAAKD,EAAO7D,GAAIa,MAAOgD,EAAO7D,IACnC6D,EAAOtD,UAKhBoC,EAAAC,EAAAtE,cAAA,OAAKN,UAAU,WACb2E,EAAAC,EAAAtE,cAAA,UAAQyE,KAAK,SAASmF,UAAWlJ,KAAKqB,MAAMoH,WAA5C,uBA/GQvE,aA0HP6D,cAAWG,GCjHpBiB,qNAEF9H,MAAQ,CACJpB,QAAS,MAGbC,UAAY,SAAA2E,GACRnD,EAAKC,SAAS,CACV1B,QAAO,GAAAoC,OAAAlD,OAAAiK,EAAA,EAAAjK,CAAOuC,EAAKL,MAAMpB,SAAlB,CAA2B4E,SAI1CwE,qBAAuB,SAACpJ,EAASQ,GAc7B,OAbAA,EAAM6I,QAAQ,SAACvI,GACb,IAAMwI,EAAQtJ,EAAQuJ,UAAU,SAAAC,GAAC,OAAIA,EAAEzI,KAAOD,EAAK8D,SAC9C5E,EAAQsJ,GAAO9I,QAClBR,EAAQsJ,GAAO9I,MAAQ,IAEzBR,EAAQsJ,GAAO9I,MAAM2C,KAAK,CACxBpC,GAAID,EAAKC,GACTO,KAAMR,EAAKQ,SAMRtB,KAkCTE,QAAU,SAACF,EAASc,GAClBd,EAAQQ,MAAM2C,KAAK,CACfpC,GAAID,EAAKC,GACTO,KAAMR,EAAKQ,UAInBlB,WAAa,SAAAqJ,GACT,IAAMC,EAAWjI,EAAKL,MAAMuD,IAAI,SAAA7D,GAAI,OAC/BA,EAAKC,KAAO0I,EAAW1I,GACtB0I,EACA3I,IAENW,EAAKC,SAAS,CACVlB,MAAOkJ,OAIfrJ,aAAe,SAAAsJ,GACX,IAAMC,EAAanI,EAAKL,MAAMpB,QAAQ2E,IAAI,SAAAC,GAAM,OAC7CA,EAAO7D,KAAO4I,EAAc5I,GACzB4I,EACA/E,IAENnD,EAAKC,SAAS,CACd1B,QAAS4J,OAIbC,iBAAmB,SAAAjJ,GACfa,EAAKC,SAAS,CACVlB,MAAOiB,EAAKL,MAAMZ,MAAMwE,OAAO,SAAAlE,GAAI,OAAIA,EAAKC,KAAOH,MAEvDa,EAAK5C,MAAMqE,QAAQC,KAAnB,QAGJ2G,mBAAqB,SAAA/H,GACjBN,EAAKC,SAAS,CACV1B,QAASyB,EAAKL,MAAMpB,QAAQgF,OAAO,SAAAJ,GAAM,OAAIA,EAAO7D,KAAOgB,SAInEgI,SAAW,WACPtI,EAAKL,MAAM4I,gBAAgBX,QAAQ,SAACzE,GACpC,IAAIpE,EAAK,GAAA4B,OAAMwC,EAAOpE,OACtBiB,EAAKC,SAAU,CACXlB,MAAOA,0FAKK,IAAA+C,EAAAxD,KAIhBuE,QAAQ2F,IAAI,CACRrH,MAAK,GAAAR,OAAInB,EAAOC,aAAX,eACL0B,MAAK,GAAAR,OAAInB,EAAOC,aAAX,mBAEJ2B,KAAK,SAAAqH,GAA4B,IAAAC,EAAAjL,OAAAkL,EAAA,EAAAlL,CAAAgL,EAAA,GAA1BG,EAA0BF,EAAA,GAAhBG,EAAgBH,EAAA,GAE9B,OAAKE,EAAStH,GAETuH,EAAWvH,GAGLuB,QAAQ2F,IAAI,CAACI,EAAS7G,OAAQ8G,EAAW9G,SAFzC8G,EAAW9G,OAAOX,KAAK,SAAArB,GAAC,OAAI8C,QAAQC,OAAO/C,KAF3C6I,EAAS7G,OAAOX,KAAK,SAAArB,GAAC,OAAI8C,QAAQC,OAAO/C,OAMvDqB,KAAK,SAAA0H,GAAsB,IAAAC,EAAAtL,OAAAkL,EAAA,EAAAlL,CAAAqL,EAAA,GAApB/J,EAAoBgK,EAAA,GAAbxK,EAAawK,EAAA,GACnB/G,EAAOF,EAAK6F,qBAAqBpJ,EAASQ,GAE/C+C,EAAK7B,SAAS,CAAC1B,QAASyD,MAE3BL,MAAM,SAAA/B,GACHxB,QAAQwB,MAAM,CAACA,sDAuB3B,OACQqC,EAAAC,EAAAtE,cAAAqE,EAAAC,EAAAqE,SAAA,KACK,CAAC,IAAK,qBAAqBrD,IAAI,SAAA8F,GAAI,OAChC/G,EAAAC,EAAAtE,cAACqL,EAAA,EAAD,CACIC,OAAK,EACL9F,IAAK4F,EACLA,KAAMA,EACNG,UAAWzG,MAGnBT,EAAAC,EAAAtE,cAACqL,EAAA,EAAD,CAAOD,KAAK,gBAAgBG,UAAW/E,IACvCnC,EAAAC,EAAAtE,cAACqL,EAAA,EAAD,CAAOD,KAAK,cAAcG,UAAW/E,IACrCnC,EAAAC,EAAAtE,cAACqL,EAAA,EAAD,CAAOD,KAAK,YAAYG,UAAW/E,IACnCnC,EAAAC,EAAAtE,cAACqL,EAAA,EAAD,CAAOD,KAAK,oBAAoBG,UAAW/E,gDAKpC,IAAAiD,EAAA/I,KAEf,OACI2D,EAAAC,EAAAtE,cAAAqE,EAAAC,EAAAqE,SAAA,KACK,CAAC,IAAK,qBAAqBrD,IAAI,SAAA8F,GAAI,OAChC/G,EAAAC,EAAAtE,cAACqL,EAAA,EAAD,CACIC,OAAK,EACL9F,IAAK4F,EACLA,KAAMA,EACNG,UAAW1D,MAGnBxD,EAAAC,EAAAtE,cAACqL,EAAA,EAAD,CACID,KAAK,gBACLG,UAAWrD,IAGf7D,EAAAC,EAAAtE,cAACqL,EAAA,EAAD,CAAOD,KAAK,cACR7K,OAAQ,SAACsD,GAAD,OACZQ,EAAAC,EAAAtE,cAACwL,EAAD,CACI5K,UAAW6I,EAAK7I,UAChBD,QAAU8I,EAAK1H,MAAMpB,aAG1B0D,EAAAC,EAAAtE,cAACqL,EAAA,EAAD,CAAOD,KAAK,YACX7K,OAAQ,SAACsD,GAAD,OACJQ,EAAAC,EAAAtE,cAACyL,EAAD,CACIxC,WAAcQ,EAAKR,WACnBtI,QAAU8I,EAAK1H,MAAMpB,aAG7B0D,EAAAC,EAAAtE,cAACqL,EAAA,EAAD,CACID,KAAK,0BACLG,UAAWzJ,IAGfuC,EAAAC,EAAAtE,cAACqL,EAAA,EAAD,CACID,KAAK,qBACLG,UAAW1E,sCAQvB,IAAMtE,EAAQ,CACd5B,QAASD,KAAKqB,MAAMpB,QACpBQ,MAAOT,KAAKqB,MAAMZ,MAClBL,WAAYJ,KAAK8J,iBACjBvJ,aAAcP,KAAK+J,mBACnB5J,QAASH,KAAKG,QACdD,UAAWF,KAAKE,UAChBI,aAAcN,KAAKM,aACnBD,WAAYL,KAAKK,YAGjB,OACIsD,EAAAC,EAAAtE,cAAC0L,EAAWC,SAAZ,CAAqBpJ,MAAOA,GACxB8B,EAAAC,EAAAtE,cAAA,OAAKN,UAAU,OACX2E,EAAAC,EAAAtE,cAAA,OAAKN,UAAU,YAAYgB,KAAKkL,mBAChCvH,EAAAC,EAAAtE,cAAA,UAAQN,UAAU,eACd2E,EAAAC,EAAAtE,cAAA,UACIqE,EAAAC,EAAAtE,cAACyF,EAAA,EAAD,CAAMC,GAAG,KAAT,WAA4B,MAGpCrB,EAAAC,EAAAtE,cAAA,QAAMN,UAAU,aAAagB,KAAKmL,6BAjPpCjH,cAwPH6D,cAAWoB,GC1P1BiC,IAASvL,OACP8D,EAAAC,EAAAtE,cAACyF,EAAA,EAAD,KACEpB,EAAAC,EAAAtE,cAAC+L,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.197ac832.chunk.js","sourcesContent":["import React from 'react'\nimport './AddButton.css'\n\nexport default function NavAddButton(props) {\n  const { tag, className, childrenm, ...otherProps } = props\n\n  return React.createElement(\n    props.tag,\n    {\n      className: ['NavAddButton', props.className].join(' '),\n      ...otherProps\n    },\n    props.children\n  )\n}\n\nNavAddButton.defaultProps ={\n  tag: 'a',\n}\n","import React from 'react'\n\nconst ApiContext =  React.createContext({\n\n  render() {\n    console.log('context', this)\n    const contextValue = {\n    folders: this.folders,\n    notes: [],\n    addFolder: this.addFolder,\n    addNote: this.addNote,\n    deleteNote: this.deleteNote,\n    updateNote: this.updateNote,\n    updateFolder:this.updateFolder,\n    deleteFolder: this.deleteFolder\n    }\n  }\n\n})\n\nexport default ApiContext","\nexport const findFolder = (folders=[], folderId) =>\n  folders.find(folder => folder.id === folderId)\n\nexport const findNote = (notes=[], noteId) => \n  notes.find(note => note.id === Number(noteId))\n\nexport const getNotesForFolder = (notes=[], folderId) => (\n  (!folderId)\n    ? notes\n    : notes.filter(note => note.folderId === folderId)\n)\n\nexport const getContent = (folders=[], folderId) => {\n  folders.forEach(function(folderSummary, folderId) {\n    let content = folders[folderId].notes.length\n   })\n}\n\nexport const countNotesForFolder = (notes=[], folderId) =>\n  notes.filter(note => note.folderId === folderId).length\n","export default {\n    API_ENDPOINT: 'https://git.heroku.com/rocky-gorge-29682.com/'\n\n  }","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './EditFolder.css';\nimport ApiContext from '../ApiContext';\nimport config from '../config'\n\nexport default class EditFolder extends Component {\n\n\n    static propTypes = {\n        match: PropTypes.shape({\n          params: PropTypes.object,\n        }),\n        history: PropTypes.shape({\n          push: PropTypes.func,\n        }).isRequired,\n      };\n\n    static contextType = ApiContext\n\n    state = {\n        error: null,\n        name: ''\n      };\n    \n    componentDidMount() {\n\n    const folderId  = this.props.match.params.folderId\n\n    fetch(`http://localhost:8000/api/folders/${folderId}`, { method: 'GET'})\n        .then(res => {\n        if(!res.ok) {\n            throw new Error('Something went wrong, please try again later');\n        }\n        return res.json();\n        })  \n    .then(data => {\n         this.setState({\n                 name: data.name\n         })\n        })\n    .catch(err => {\n        this.setState({\n            error: err.message\n            });\n        })\n    }\n\n    handleNameChange = e => {\n        this.setState({ name: e.target.value })\n      };\n\n    handleSubmit = e => {\n        e.preventDefault()\n\n        const  folderId  = this.props.match.params.folderId\n        const  name  = this.state.name\n        const newFolder =  {name}\n        const url = `http://localhost:8000/api/folders/${folderId}`\n        const options = {\n            method: 'PATCH',\n             headers: {\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify(newFolder)\n        }\n        fetch(url, options)\n        .then(res => {\n        if(!res.ok) {\n            throw new Error('Something went wrong, please try again later');\n        }\n        })  \n        .then (() => {\n            this.context.updateFolder(newFolder)\n            this.props.history.push('/')\n        })\n     .catch(err => {\n        this.setState({\n            error: err.message\n            });\n        })\n}\n\nrender() {\n    const { name } = this.state\n \n    return (\n      <section className='EditFolder'>\n        <h2>Edit Folder</h2>\n        <form onSubmit={this.handleSubmit}> \n            <div className='field'>\n                <label htmlFor='name-input'>\n                Name:\n                </label>\n                <input \n                    type='text' \n                    id='name' \n                    name='name'\n                    defaultValue={name}\n                    onChange={this.handleNameChange}\n                    />\n            </div>\n            <div className='buttons'>\n                <button className='editButton' type='submit'>\n                Edit folder\n                </button>\n            </div>\n        </form>\n      </section>\n    )\n  }\n}","import React from 'react'\nimport { NavLink, Link } from 'react-router-dom'\nimport AddButton from '../AddButton/AddButton'\nimport ApiContext from '../ApiContext'\nimport { countNotesForFolder } from '../notes-helpers'\nimport EditFolder from'../EditFolder/EditFolder';\nimport './NoteListNav.css'\nimport PropTypes from 'prop-types'\nimport config from '../config'\nimport { get } from 'https';\n\nexport default class NoteListNav extends React.Component {\n  static defaultProps ={\n    folders: [],\n    onDeleteFolder: () => {},\n    onEditFolder: () => {}\n  }\n  static contextType = ApiContext;\n\n\n  state = {\n    noteLength: null\n  }\n\n  handleClickDelete = (folderId, e) => {\n    e.preventDefault()\n\n    fetch(`${config.API_ENDPOINT}/api/folders/${folderId}`, {\n      method: 'DELETE'\n    })\n    .then(res => {\n      console.log(res)\n      if (!res.ok)\n        return res.json().then(e => Promise.reject(e))\n      return res\n    })\n    .then(() => {\n      this.context.deleteFolder(folderId)\n    })\n    .catch(error => {\n      console.error({ error })\n    })\n}\n\n  render() {\n    const { folders=[],  notes=[] } = this.context\n\n    // let getContent = (i) => {\n\n    //   folders.forEach(function(folderSummary, i) {\n    //     let folderLength = folders[i].notes.length\n    //     console.log(folderLength)\n    //    })\n    // }\n\n    return (\n      <div className='NoteListNav'>\n        <ul className='NoteListNav__list'>\n          {folders.map(folder =>\n            <li key={folder.id}>\n              <NavLink\n                className='NoteListNav__folder-link'\n                to={`/folder/${folder.id}`}\n              >\n                <span className='NoteListNav__num-notes'>\n                  {countNotesForFolder(notes, folder.id)}\n                  {/* {getContent(0)} */}\n                </span>\n                {folder.name}\n                <span className=\"Content\">\n  \n         {/* folders.forEach(function(folderSummary) {\n                 folders[1].notes.length\n               } \n\n             folders.forEach(function(folderSummary) {\n                            folders[2].notes.length\n              }  */}\n              </span>      \n\n              <div className='buttons'>\n                <button\n            className='Folder_delete'\n            type='button'\n            onClick={this.handleClickDelete.bind(null, folder.id)}\n          >\n          remove\n          </button>\n          <div className='editFolder'>\n          <Link to=\n          {`/folders/${folder.id}/edit`}>\n          edit\n          </Link>\n          </div>\n          </div>\n              </NavLink>\n            </li>\n          )}\n        </ul>\n        <div className='NoteListNav__button-wrapper'>\n          <AddButton\n            tag={Link}\n            to='/add-folder'\n            type='button'\n            className='NoteListNav__add-folder-button'\n          >\n           Add Folder\n            <br />\n          </AddButton>\n        </div>\n      </div>\n    )\n  }\n}\n\nNoteListNav.propTypes = {\n  folder: PropTypes.objectOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  })) \n};\n","import React, {Component} from 'react';\n\nexport default class NotefulError extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        };\n    }\n\n    static getDerivedStateFromError(error) {\n        return { hasError: true };\n      }\n    render() {\n      if (this.state.hasError) {      \n        return (\n          <h2>There was an error.</h2>\n        );\n      }\n      return this.props.children;\n    }\n}\n","import React from 'react';\nimport AddButton from '../AddButton/AddButton';\nimport ApiContext from '../ApiContext';\nimport { findNote, findFolder } from '../notes-helpers';\nimport NotefulError from '../NotefulError';\nimport './NotePageNav.css'\n\nexport default class NotePageNav extends React.Component {\n  static defaultProps = {\n    history: {\n      goBack: () => { }\n    },\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext;\n\n  render() {\n    const { notes, folders, } = this.context\n    const { noteId } = this.props.match.params\n    const note = findNote(notes, noteId) || {}\n    const folder = findFolder(folders, note.folderId)\n    return (\n      <div className='NotePageNav'>\n      <NotefulError>\n        <AddButton\n          tag='button'\n          role='link'\n          onClick={() => this.props.history.goBack()}\n          className='NotePageNav__back-button'\n        >\n          <br />\n          Back\n        </AddButton>\n        {folder && (\n          <h3 className='NotePageNav__folder-name'>\n            {folder.name}\n          </h3>\n        )}\n        </NotefulError>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './EditNote.css';\nimport ApiContext from '../ApiContext';\nimport config from '../config'\n\nexport default class EditNote extends Component {\n\n    static propTypes = {\n        match: PropTypes.shape({\n          params: PropTypes.object,\n        }),\n        history: PropTypes.shape({\n          push: PropTypes.func,\n        }).isRequired,\n      };\n\n    state = {\n        error: null,\n        name: \"\",\n        content: \"\",\n        folder: \"\"\n    }\n\n    static contextType = ApiContext\n\n    componentDidMount() {\n\n    const noteId = this.props.match.params.noteId\n\n    fetch(`http://localhost:8000/api/folders/${noteId}`, { method: 'GET'})\n        .then(res => {\n        if(!res.ok) {\n            throw new Error('Something went wrong, please try again later');\n        }\n        return res.json();\n        })  \n    .then(data => {\n         this.setState({\n                 name: data.name,\n                 content: data.content,\n                 folder: data.folder\n         })\n        })\n    .catch(err => {\n        this.setState({\n            error: err.message\n            });\n        })\n    }\n\n    handleNameChange = e => {\n        this.setState({ name: e.target.value })\n      };\n\n    handleContentChange = e => {\n        this.setState({ content: e.target.value })\n    };\n\n    handleFolderChange = e => {\n        this.setState({ folder: e.target.value })\n      };\n\n    handleSubmit = e => {\n        e.preventDefault()\n        const noteName = e.target.name.value\n        this.setState ({\n           name: noteName\n        })\n        const noteId = this.props.match.params.noteId\n        const { id, name, content, folder } = this.state\n        const newNote = { id, name, content, folder }\n\n        const url = `http://localhost:8000/api/notes/${noteId}`\n        console.log(url)\n        const options = {\n            method: 'PATCH',\n             headers: {\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify(newNote)\n        }\n        fetch(url, options)\n        .then(res => {\n        if(!res.ok) {\n            throw new Error('Something went wrong, please try again later');\n        }\n        return res.json();\n        })  \n        .then(() => {\n            this.context.updateNote(newNote)\n            this.props.history.push('/')\n        })\n     .catch(err => {\n        this.setState({\n            error: err.message\n            });\n        })\n}\n\nrender() {\n    const { name, content, folder  } = this.state\n    const folders = this.props.folders\n \n    return (\n      <section className='EditNote'>\n        <h2>Edit Note</h2>\n        <form onSubmit={this.handleSubmit}> \n            <div className='field'>\n                <label htmlFor='name-input'>\n                Name:\n                </label>\n                <input \n                    type='text' \n                    id='name' \n                    name='name'\n                    defaultValue={name}\n                    onChange={this.handleNameChange}\n                    />\n            </div>\n            <div className='field'>\n              <label htmlFor='note-content-input'>\n                Content\n              </label>\n              <textarea \n              type='text' \n              id='content' \n              name='content'\n              defaultValue={content}\n              onChange={this.handleContentsChange}/>\n            </div>\n            <div className='field'>\n              <label htmlFor='note-folder-select'>\n                Folder\n              </label>\n              <select id='selectedFolder' name='selectedFolder' defaultValue={folder} onChange={this.handleFolderChange} >\n                <option value={null}>...</option>\n                {folders.map(folder =>\n                  <option key={folder.id} value={folder.id}>\n                    {folder.name}\n                  </option>\n                )}\n              </select>\n            </div>\n            <div className='buttons'>\n                <button className='editButton' type='submit'>\n                Edit folder\n                </button>\n            </div>\n        </form>\n      </section>\n    )\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport ApiContext from '../ApiContext';\nimport EditNote from '../EditNote/EditNote';\nimport config from '../config';\nimport PropTypes from 'prop-types';\nimport './Note.css'\n\nexport default class Note extends React.Component {\n  static defaultProps ={\n    folders: [],\n    onDeleteNote: () => {},\n    onEditNote: () => {},\n    notes: []\n  }\n  static contextType = ApiContext;\n\n  handleClickDelete = ( noteId, e) => {\n    e.preventDefault()\n  \n    fetch(`${config.API_ENDPOINT}/api/notes/${noteId}`, {\n      method: 'DELETE'\n    })\n      .then(res => {\n        console.log(res)\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n        return res\n      })\n      .then(() => {\n        this.context.deleteNote(noteId)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  render() {\n    const { note, name, id, content, modified } = this.props\n    const { folders=[], notes=[] } = this.context\n   \n    return (\n      <div className='Note'>\n        <h2 className='Note__title'>\n          <Link to={`/note/${id}`}>\n            {name}\n          </Link>\n        </h2>\n        <div className=\"folderButtons\">\n        <button\n          className='Note__delete'\n          type='button'\n          onClick={this.handleClickDelete}\n        >\n          {' '}\n          remove\n        </button>\n        <div className='editNote'>\n           <Link to=\n           {`/notes/${id}/edit`}>\n             edit\n           </Link>\n        </div>\n        </div>\n        <div className='Note__dates'>\n          <div className='Note__dates-modified'>\n            modified:\n            {' '}\n            <span className='Date'>\n              {format(modified, 'YYYY MMM Do')}\n            </span>\n          </div>\n        </div>\n          <div className='NotePageMain__content'>\n          </div> \n          <p>{(content || '').replace(/\\n\\n/g, '</p> <p>').replace(/\\n/g, '<br />')}</p>\n      </div>\n      \n    )\n  }\n}\n\nNote.propTypes = {\n  note: PropTypes.objectOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    modified: PropTypes.number.isRequired,\n  })) \n};\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Note from '../Note/Note';\nimport AddButton from '../AddButton/AddButton';\nimport ApiContext from '../ApiContext';\nimport { getNotesForFolder } from '../notes-helpers';\nimport NotefulError from '../NotefulError';\nimport './NoteListMain.css'\n\nexport default class NoteListMain extends React.Component {\n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext\n\n  render() {\n    const { folderId } = this.props.match.params\n    const {  folders=[], notes=[] } = this.context\n\n    const notesForFolder = getNotesForFolder(notes, folderId)\n\n    return (\n      <section className='NoteListMain'>\n        <NotefulError>\n        <ul>\n    \n          {notesForFolder.map(note =>\n            <li key={note.id}>\n              <Note\n                id={note.id}\n                name={note.name}\n                modified={note.date}\n              />\n            </li>\n          )}\n        </ul>\n        <div className='NoteListMain__button-container'>\n          <AddButton\n            tag={Link}\n            to='/add-note'\n            type='button'\n            className='NoteListMain__add-note-button'\n          >\n          Add Note\n            <br />\n          </AddButton>      \n        </div>\n        </NotefulError>\n      </section>\n    )\n  }\n}\n","import React from 'react';\nimport Note from '../Note/Note';\nimport ApiContext from '../ApiContext';\nimport { findNote } from '../notes-helpers';\nimport NotefulError from '../NotefulError';\nimport './NotePageMain.css'\n\nexport default class NotePageMain extends React.Component {\n  constructor(props){\n    super(props)\n  }\n\n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext\n\n  render() {\n    const { notes=[] } = this.context\n    const  noteId  = this.props.match.params.noteId\n    console.log(noteId)\n    const note = findNote(notes, noteId) || { content: '' }\n    return (\n      <section className='NotePageMain'>\n        <NotefulError>\n        <Note\n          id={note.id}\n          name={note.name}\n          content={note.content}\n          modified={note.date}\n        />\n        </NotefulError>\n      </section>\n    )\n  }\n}","import React from 'react';\nimport './NotefulForm.css';\nimport PropTypes from 'prop-types';\n\nexport default function NotefulForm(props) {\n  const { className, ...otherProps } = props\n  return (\n    <form\n      className={['Noteful-form', className].join(' ')}\n      action='#'\n      {...otherProps}\n    />\n  )\n}\n\nNotefulForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};","import React, { Component } from 'react';\nimport NotefulForm from '../NotefulForm/NotefulForm';\nimport NotefulError from '../NotefulError';\nimport PropTypes from 'prop-types';\nimport './AddFolder.css';\nimport { withRouter } from 'react-router-dom';\n\nclass AddFolder extends Component {\n\n  // state = {\n  //   error: null,\n  // };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: ''\n    }\n  }\n\n  handleFolderSubmit = e => {\n    e.preventDefault()\n    const {name} = e.target\n    const folder = {\n      name: name.value\n    }\n    const url = 'http://localhost:8000/api/folders'\n    \n    const options = {\n    method: 'POST',\n    headers: {\n        'content-type': 'application/json'\n    },\n    body: JSON.stringify(folder),\n    }\n    this.setState({ error: null })\n    fetch(url, options)\n      .then(res => {\n        if(!res.ok) {\n          throw new Error('Something went wrong, please try again later');\n        }\n        return res.json();\n      })\n      .then(data => {\n        this.props.addFolder(data);\n        this.props.history.push('/')\n      })\n      .catch(err => {\n        this.setState({\n          error: err.message\n        });\n      })\n  }\n\n  render() {\n    return (\n      <section className='AddFolder'>\n        <NotefulError>\n        <h2>Create a folder</h2>\n        <NotefulForm onSubmit={this.handleFolderSubmit}>\n          <div className='field'>\n            <label htmlFor='name-input'>\n              Name\n            </label>\n            <input type='text' id='name'/>\n          </div>\n          <div className='buttons'>\n            <button type='submit' className=\"addFolderButton\">\n              Add folder\n            </button>\n          </div>\n        </NotefulForm>\n        </NotefulError>\n      </section>\n    )\n  }\n}\n\nAddFolder.propTypes = {\n  addFolder: PropTypes.func.isRequired,\n  folders: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired\n  })) \n};\n\nexport default withRouter(AddFolder);","import React from 'react';\n\nexport default function ValidationError(props) {\n  if(props.hasError) {\n    return (\n      <div className=\"error\">{props.message}</div>\n    );\n  }\n\n  return <></>\n}","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport NotefulForm from '../NotefulForm/NotefulForm';\nimport ValidationError from './ValidationError';\nimport NotefulError from '../NotefulError';\nimport './AddNote.css'\n\nclass AddNote extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      nameValid: false,\n      formValid: false,\n      validationMessage: {\n        name: ''\n      }\n    }\n  }\n\n  verifyNameLength(name) {\n    this.setState({name}, () => {this.validateName(name)});\n  }\n\n  handleNoteSubmit = e => {\n    e.preventDefault();\n    const { name, selectedFolder, content } = e.target;\n    const note = {\n      name: name.value,\n      folder: selectedFolder.value,\n      content: content.value,\n      date: new Date()\n    }\n    console.log(note)\n    \n    const options = {           \n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    }\n    this.setState({ error: null })\n    fetch('http://localhost:8000/api/notes', options)\n      .then(res => {\n        if(!res.ok) {\n          throw new Error('Something went wrong, please try again later');\n        }\n        return res.json();\n      })\n    .then(data => {\n      this.props.addNewNote(data)\n      this.props.history.push('/')\n    })\n    .catch(err => {\n      this.setState({\n        error: err.message\n      });\n    });\n  }\n\n  validateName(fieldValue) {\n    const fieldErrors = {...this.state.validationMessage};\n    let hasError = false;\n    fieldValue = fieldValue.trim();\n    if(fieldValue.length === 0) {\n      fieldErrors.name = 'A note name is required.';\n      hasError = true;\n    } else {\n      fieldErrors.name = '';\n      hasError = false;\n    }\n    this.setState({\n      validationMessage: fieldErrors,\n      nameValid: !hasError\n    }, this.formValid );\n  }\nformValid() {\n  this.setState({\n      formValid: this.state.nameValid\n  });\n}\n\n  render() {\n    const folders = this.props.folders\n    return (\n      <section className='AddNote'>\n        <NotefulError>\n          <h2>Create a note</h2>\n          <NotefulForm onSubmit={this.handleNoteSubmit}>\n            <div className='field'>\n              <label htmlFor='note-name-input'>\n                Name\n              </label>\n              <input type='text' id='name' name='name' onChange={e => this.verifyNameLength(e.target.value)}/>\n              <ValidationError hasError={!this.state.nameVaild} message={this.state.validationMessage.name}/>\n            </div>\n            <div className='field'>\n              <label htmlFor='note-content-input'>\n                Content\n              </label>\n              <textarea type='text' id='content' name='content'/>\n            </div>\n            <div className='field'>\n              <label htmlFor='note-folder-select'>\n                Folder\n              </label>\n              <select id='selectedFolder' name='selectedFolder'>\n                <option value={null}>...</option>\n                {folders.map(folder =>\n                  <option key={folder.id} value={folder.id}>\n                    {folder.name}\n                  </option>\n                )}\n              </select>\n            </div>\n            <div className='buttons'>\n              <button type='submit' disabled={!this.state.formValid} >\n                Add note\n              </button>\n            </div>\n          </NotefulForm>\n        </NotefulError>\n      </section>\n    )\n  }\n}\n\nexport default withRouter(AddNote);","\nimport React, {Component} from 'react';\nimport {Route, Link} from 'react-router-dom';\nimport {withRouter} from 'react-router-dom';\nimport NoteListNav from '../NoteListNav/NoteListNav';\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport NoteListMain from '../NoteListMain/NoteListMain';\nimport NotePageMain from '../NotePageMain/NotePageMain';\nimport AddFolder from '../AddFolder/AddFolder';\nimport AddNote from '../AddNote/AddNote';\nimport EditNote from '../EditNote/EditNote';\nimport EditFolder from '../EditFolder/EditFolder';\nimport ApiContext from '../ApiContext';\nimport config from '../config';\nimport './App.css'\n\nclass App extends Component {\n\n    state = {\n        folders: []\n    }\n\n    addFolder = folder => {\n        this.setState({ \n            folders: [ ...this.state.folders, folder \n        ]})\n    }\n\n    mergeFoldersAndNotes = (folders, notes) => {\n        notes.forEach((note) => {\n          const index = folders.findIndex(f => f.id === note.folder) \n          if (!folders[index].notes) {\n            folders[index].notes = []\n          }\n          folders[index].notes.push({ \n            id: note.id, \n            name: note.name \n          })\n          })\n        //   this.setState({ \n        //     notes: [ ...this.state.notes, folders.notes \n        // ]})\n        return folders\n      }\n\n    //   getNotes = (folders, notes, i) => {\n    //     folders.forEach((folder) => {\n    //         const content = (folders[i].notes.length)    \n    //       folders[i].contents.push({ \n    //             content\n    //         })\n    //     })\n    // }\n\n    //   getNotes = (folders, notes) => {\n    //     folders.forEach((folder => {\n    //         const index = notes.findIndex(f => n.f === folders.note) \n    //      console.log(index)\n    //         const notes = folders[i].notes.length\n    //         this.setState ({\n    //             content: content\n    //         })\n    //         console.log(this.state.content)\n    //     })\n    // }\n\n    //   getContent = (folders) => {\n    //     folders.forEach((folder) => {\n    //         const content = folders[i].notes.length\n    //         this.setState ({\n    //             content: content\n    //         })\n    //         console.log(this.state.content)\n    //     } )\n    // }\n\n      addNote = (folders, note) => {\n        folders.notes.push({ \n            id: note.id, \n            name: note.name \n        })\n    };\n\n    updateNote = editedNote  => {\n        const newNotes = this.state.map(note =>\n            (note.id === editedNote.id)\n            ? editedNote\n            : note\n            )\n        this.setState({\n            notes: newNotes\n        })\n    }\n\n    updateFolder = updatedFolder => {\n        const newFolders = this.state.folders.map(folder =>\n          (folder.id === updatedFolder.id)\n            ? updatedFolder\n            : folder\n        )\n        this.setState({\n        folders: newFolders\n        })\n    };\n\n    handleDeleteNote = noteId => {\n        this.setState({\n            notes: this.state.notes.filter(note => note.id !== noteId)\n        });\n        this.props.history.push(`/`)\n    };\n\n    handleDeleteFolder = folderId => {\n        this.setState({\n            folders: this.state.folders.filter(folder => folder.id !== folderId)\n        });\n    };\n\n    getNotes = () => {\n        this.state.EditNotefolders.forEach((folder) => {\n        let notes = `${folder.notes}`\n        this.setState ({\n            notes: notes\n        })  \n      })\n    }\n\n    componentDidMount() {\n\n        // this.getContent(folderId)\n\n        Promise.all([\n            fetch(`${config.API_ENDPOINT}/api/notes`),\n            fetch(`${config.API_ENDPOINT}/api/folders`)\n        ])\n            .then(([notesRes, foldersRes]) => {\n               \n                if (!notesRes.ok)\n                    return notesRes.json().then(e => Promise.reject(e));\n                if (!foldersRes.ok)\n                    return foldersRes.json().then(e => Promise.reject(e));\n                    \n                    return Promise.all([notesRes.json(), foldersRes.json()]);\n            })\n            .then(([notes, folders]) => {\n               const data = this.mergeFoldersAndNotes(folders, notes)\n\n                this.setState({folders: data});\n            })\n            .catch(error => {\n                console.error({error});\n            });\n    };\n\n    renderNavRoutes() {\n        // console.log(this.state)\n        // let folders  = this.state.folders;\n        // console.log(this.state.folders[0])\n        // folders.forEach((folder) =>  console.log(`${folder.notes}`));\n            // let folders = this.state.folders\n            // folders.forEach(function(folderSummary, i) {\n            //     let content = folders[1].notes.length\n            //     console.log(content)\n            // } )\n        // }\n        // getContent()\n\n        // let folders = this.state.folders\n        //     folders.forEach(function(folderSummary, i) {\n        //         let content = folders[i].notes.length\n        //         console.log(content)\n        //     } )\n\n    return (\n            <>\n                {['/', '/folder/:folderId'].map(path => (\n                    <Route\n                        exact\n                        key={path}\n                        path={path}\n                        component={NoteListNav}\n                    />\n                ))}\n                <Route path=\"/note/:noteId\" component={NotePageNav} />\n                <Route path=\"/add-folder\" component={NotePageNav} />\n                <Route path=\"/add-note\" component={NotePageNav} />\n                <Route path=\"/folder/:folderId\" component={NotePageNav} />\n            </>\n        );\n    }\n\n    renderMainRoutes() {\n   \n        return (\n            <>\n                {['/', '/folder/:folderId'].map(path => (\n                    <Route\n                        exact\n                        key={path}\n                        path={path}\n                        component={NoteListMain}\n                    />\n                ))}\n                <Route \n                    path=\"/note/:noteId\" \n                    component={NotePageMain} \n                />\n\n                <Route path='/add-folder' \n                    render={(history) =>\n                <AddFolder\n                    addFolder={this.addFolder}\n                    folders ={this.state.folders} \n                />}\n                />\n               <Route path='/add-note'\n                render={(history) =>\n                    <AddNote\n                        addNewNote = {this.addNewNote}\n                        folders ={this.state.folders} \n                    /> }\n                />\n                <Route \n                    path='/folders/:folderId/edit'\n                    component={EditFolder} \n                    /> \n\n                <Route \n                    path='notes/:noteId/edit'\n                    component={EditNote} \n                    /> \n            </>\n        );\n    }\n\n    render() {\n\n        const value = {\n        folders: this.state.folders,\n        notes: this.state.notes,\n        deleteNote: this.handleDeleteNote,\n        deleteFolder: this.handleDeleteFolder,\n        addNote: this.addNote,\n        addFolder: this.addFolder,\n        updateFolder: this.updateFolder,\n        updateNote: this.updateNote\n        };\n       \n        return (\n            <ApiContext.Provider value={value}>\n                <div className=\"App\">\n                    <nav className=\"App__nav\">{this.renderNavRoutes()}</nav>\n                    <header className=\"App__header\">\n                        <h1>\n                            <Link to=\"/\">Noteful</Link>{' '}\n                        </h1>\n                    </header>\n                    <main className=\"App__main\">{this.renderMainRoutes()}</main>\n                </div>\n            </ApiContext.Provider>\n        );\n    }\n}\n\nexport default withRouter(App)\n","\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n// import { library } from '@fortawesome/fontawesome-svg-core'\n// import {\n//   faPlus, faChevronLeft, faTrashAlt, faCheckDouble\n// } from '@fortawesome/free-solid-svg-icons'\nimport { BrowserRouter } from 'react-router-dom'\n// import 'typeface-roboto'\nimport './index.css'\nimport App from './App/App'\n\n// library.add(faPlus, faChevronLeft, faTrashAlt, faCheckDouble)\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n)"],"sourceRoot":""}