{"ast":null,"code":"import _objectSpread from \"/Users/rachelemilyperez/projects/noteful-app-state-copy/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/rachelemilyperez/projects/noteful-app-state-copy/src/AddNote/AddNote.js\";\nimport React, { Component } from 'react';\nimport NotefulForm from '../NotefulForm/NotefulForm';\nimport './AddNote.css';\nimport { format } from 'date-fns';\nimport ValidationError from './ValidationError';\nimport ApiContext from '../ApiContext';\nimport NotefulError from '../NotefulError';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\n\nclass AddNote extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: null,\n      nameValid: false,\n      validationMessages: {\n        name: ''\n      }\n    };\n\n    this.handleNoteSubmit = e => {\n      e.preventDefault();\n      const _e$target = e.target,\n            name = _e$target.name,\n            selectedFolder = _e$target.selectedFolder,\n            content = _e$target.content;\n      const note = {\n        name: name.value,\n        selectedFolder: selectedFolder.value,\n        content: content.value\n      };\n      const url = 'http://localhost:9090/notes';\n      const options = {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify(note)\n      };\n      this.setState({\n        error: null\n      });\n      fetch(url, options).then(res => {\n        if (!res.ok) {\n          throw new Error('Something went wrong, please try again later');\n        }\n\n        return res.json();\n      }).then(data => {\n        name.value = '';\n        selectedFolder.value = '';\n        content.value = '';\n        this.props.addNewNote(data);\n        this.props.history.push('/');\n      }).catch(err => {\n        this.setState({\n          error: err.message\n        });\n      });\n    };\n  }\n\n  validateName(fieldValue) {\n    const fieldErrors = _objectSpread({}, this.state.validationMessages);\n\n    let hasError = false;\n    fieldValue = fieldValue.trim();\n\n    if (fieldValue.length === 0) {\n      fieldErrors.name = 'A name is required';\n      hasError = true;\n    } else {\n      fieldErrors.name = '';\n      hasError = false;\n    }\n\n    this.setState({\n      validationMessages: fieldErrors,\n      nameValid: !hasError\n    }, this.formValid);\n  }\n\n  formValid() {\n    this.setState({\n      formValid: this.state.nameValid\n    });\n  }\n\n  render() {\n    const error = this.state.error;\n    const _this$context$folders = this.context.folders,\n          folders = _this$context$folders === void 0 ? [] : _this$context$folders;\n    return React.createElement(\"section\", {\n      className: \"AddNote\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(NotefulError, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Create a note\"), React.createElement(NotefulForm, {\n      onSubmit: this.handleNoteSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"note-name-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"name\",\n      name: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(ValidationError, {\n      hasError: !this.state.nameVaild,\n      message: this.state.validationMessages.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"note-content-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Content\"), React.createElement(\"textarea\", {\n      id: \"content\",\n      name: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"note-folder-select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Folder\"), React.createElement(\"select\", {\n      id: \"selectedFolder\",\n      name: \"selectedFolder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"...\"), folders.map(folder => React.createElement(\"option\", {\n      key: folder.id,\n      value: folder.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, folder.name)))), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      disabled: !this.state.formValid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Add note\")))));\n  } // AddNote.propTypes = {\n  //   noteNameInput: PropTypes.string.isRequired\n  // };\n\n\n} // disabled={!this.state.formValid}>\n\n\nAddNote.defaultProps = {\n  addNewNote: () => {}\n};\nexport default withRouter(AddNote);","map":{"version":3,"sources":["/Users/rachelemilyperez/projects/noteful-app-state-copy/src/AddNote/AddNote.js"],"names":["React","Component","NotefulForm","format","ValidationError","ApiContext","NotefulError","PropTypes","withRouter","AddNote","state","error","nameValid","validationMessages","name","handleNoteSubmit","e","preventDefault","target","selectedFolder","content","note","value","url","options","method","headers","body","JSON","stringify","setState","fetch","then","res","ok","Error","json","data","props","addNewNote","history","push","catch","err","message","validateName","fieldValue","fieldErrors","hasError","trim","length","formValid","render","context","folders","nameVaild","map","folder","id","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport NotefulForm from '../NotefulForm/NotefulForm';\nimport './AddNote.css';\nimport { format } from 'date-fns';\nimport ValidationError from './ValidationError';\nimport ApiContext from '../ApiContext';\nimport NotefulError from '../NotefulError'\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\n\nclass AddNote extends Component {\n\n  static defaultProps = {\n    addNewNote: () => {}\n  };\n\n  state = {\n    error: null,\n    nameValid: false,\n    validationMessages: {\n      name: '',\n    }\n  };\n\n  handleNoteSubmit = e => {\n    e.preventDefault()\n    const { name, selectedFolder, content } = e.target\n    const note = {\n      name: name.value,\n      selectedFolder: selectedFolder.value,\n      content: content.value\n    }\n    const url = 'http://localhost:9090/notes';\n    const options = {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    }\n    this.setState({ error: null })\n    fetch(url, options)\n      .then(res => {\n        if(!res.ok) {\n          throw new Error('Something went wrong, please try again later');\n        }\n        return res.json();\n      })\n    .then(data => {\n      name.value = ''\n      selectedFolder.value = '' \n      content.value = ''\n      this.props.addNewNote(data)\n      this.props.history.push('/')\n    })\n    .catch(err => {\n      this.setState({\n        error: err.message\n      });\n    });\n  }\n\n  validateName(fieldValue) {\n    const fieldErrors = {...this.state.validationMessages};\n    let hasError = false;\n\n    fieldValue = fieldValue.trim();\n    if(fieldValue.length === 0) {\n      fieldErrors.name = 'A name is required';\n      hasError = true;\n    } else {\n      fieldErrors.name = '';\n      hasError = false;\n    }\n    this.setState({\n      validationMessages: fieldErrors,\n      nameValid: !hasError\n    }, this.formValid );\n}\n\n formValid() {\n    this.setState({\n      formValid: this.state.nameValid \n    });\n  }\n\n  render() {\n    const { error } = this.state\n    const { folders=[] } = this.context\n    return (\n      <section className='AddNote'>\n        <NotefulError>\n          <h2>Create a note</h2>\n          <NotefulForm onSubmit={this.handleNoteSubmit}>\n            <div className='field'>\n              <label htmlFor='note-name-input'>\n                Name\n              </label>\n              <input type='text' id='name' name='name'/>\n              <ValidationError hasError={!this.state.nameVaild} message={this.state.validationMessages.name}/>\n            </div>\n            <div className='field'>\n              <label htmlFor='note-content-input'>\n                Content\n              </label>\n              <textarea id='content' name='content'/>\n            </div>\n            <div className='field'>\n              <label htmlFor='note-folder-select'>\n                Folder\n              </label>\n              <select id='selectedFolder' name='selectedFolder'>\n                <option value={null}>...</option>\n                {folders.map(folder =>\n                  <option key={folder.id} value={folder.id}>\n                    {folder.name}\n                  </option>\n                )}\n              </select>\n            </div>\n            <div className='buttons'>\n              <button type='submit' disabled={!this.state.formValid}>\n                Add note\n              </button>\n            </div>\n          </NotefulForm>\n        </NotefulError>\n      </section>\n    )\n  }\n\n  // AddNote.propTypes = {\n  //   noteNameInput: PropTypes.string.isRequired\n  // };\n\n}\n\n// disabled={!this.state.formValid}>\n\n\nexport default withRouter(AddNote);"]},"metadata":{},"sourceType":"module"}