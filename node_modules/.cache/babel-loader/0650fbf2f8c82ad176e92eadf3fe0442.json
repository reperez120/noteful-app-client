{"ast":null,"code":"var _jsxFileName = \"/Users/rachelemilyperez/projects/notefulapp_client/src/App/App.js\";\nimport React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport NoteListNav from '../NoteListNav/NoteListNav';\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport NoteListMain from '../NoteListMain/NoteListMain';\nimport NotePageMain from '../NotePageMain/NotePageMain';\nimport AddFolder from '../AddFolder/AddFolder';\nimport AddNote from '../AddNote/AddNote';\nimport EditNote from '../EditNote/EditNote';\nimport ApiContext from '../ApiContext';\nimport config from '../config';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      notes: [],\n      folders: []\n    };\n\n    this.addNewFolder = folder => {\n      this.setState({\n        folders: [...this.state.folders, folder]\n      });\n    };\n\n    this.addNewNote = note => {\n      this.setState({\n        notes: [...this.state.notes, note]\n      });\n    };\n\n    this.handleDeleteNote = noteId => {\n      this.setState({\n        notes: this.state.notes.filter(note => note.id !== noteId)\n      });\n    };\n  }\n\n  componentDidMount() {\n    Promise.all([fetch(\"\".concat(config.API_ENDPOINT, \"/notes\")), fetch(\"\".concat(config.API_ENDPOINT, \"/folders\"))]).then(([notesRes, foldersRes]) => {\n      if (!notesRes.ok) return notesRes.json().then(e => Promise.reject(e));\n      if (!foldersRes.ok) return foldersRes.json().then(e => Promise.reject(e));\n      return Promise.all([notesRes.json(), foldersRes.json()]);\n    }).then(([notes, folders]) => {\n      this.setState({\n        notes,\n        folders\n      });\n    }).catch(error => {\n      console.error({\n        error\n      });\n    });\n  }\n\n  renderNavRoutes() {\n    return React.createElement(React.Fragment, null, ['/', '/folder/:folderId'].map(path => React.createElement(Route, {\n      exact: true,\n      key: path,\n      path: path,\n      component: NoteListNav,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/note/:noteId\",\n      component: NotePageNav,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/add-folder\",\n      component: NotePageNav,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/add-note\",\n      component: NotePageNav,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }));\n  }\n\n  renderMainRoutes() {\n    return React.createElement(React.Fragment, null, ['/', '/folder/:folderId'].map(path => React.createElement(Route, {\n      exact: true,\n      key: path,\n      path: path,\n      component: NoteListMain,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/note/:noteId\",\n      component: NotePageMain,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/add-folder\",\n      render: history => React.createElement(AddFolder, {\n        addNewFolder: this.addNewFolder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/add-note\",\n      render: history => React.createElement(AddNote, {\n        addNewNote: this.addNewNote,\n        folders: this.state.folders,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/edit/:bookmarkId\",\n      component: EditNote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }));\n  }\n\n  render() {\n    const value = {\n      notes: this.state.notes,\n      folders: this.state.folders,\n      deleteNote: this.handleDeleteNote\n    };\n    return React.createElement(ApiContext.Provider, {\n      value: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      className: \"App__nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, this.renderNavRoutes()), React.createElement(\"header\", {\n      className: \"App__header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Noteful\"), ' ')), React.createElement(\"main\", {\n      className: \"App__main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, this.renderMainRoutes())));\n  }\n\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/rachelemilyperez/projects/notefulapp_client/src/App/App.js"],"names":["React","Component","Route","Link","withRouter","NoteListNav","NotePageNav","NoteListMain","NotePageMain","AddFolder","AddNote","EditNote","ApiContext","config","App","state","notes","folders","addNewFolder","folder","setState","addNewNote","note","handleDeleteNote","noteId","filter","id","componentDidMount","Promise","all","fetch","API_ENDPOINT","then","notesRes","foldersRes","ok","json","e","reject","catch","error","console","renderNavRoutes","map","path","renderMainRoutes","history","render","value","deleteNote"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Route, Link} from 'react-router-dom';\nimport {withRouter} from 'react-router-dom';\nimport NoteListNav from '../NoteListNav/NoteListNav';\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport NoteListMain from '../NoteListMain/NoteListMain';\nimport NotePageMain from '../NotePageMain/NotePageMain';\nimport AddFolder from '../AddFolder/AddFolder';\nimport AddNote from '../AddNote/AddNote';\nimport EditNote from '../EditNote/EditNote';\nimport ApiContext from '../ApiContext';\nimport config from '../config';\nimport './App.css'\n\nclass App extends Component {\n\n    state = {\n        notes: [],\n        folders: [],\n    };\n\n    addNewFolder = folder => {\n        this.setState({ \n            folders: [ ...this.state.folders, folder \n        ]})\n    }\n\n    addNewNote = (note) => {\n        this.setState({ \n            notes: [ ...this.state.notes, note\n        ]});\n    };\n \n    componentDidMount() {\n        Promise.all([\n            fetch(`${config.API_ENDPOINT}/notes`),\n            fetch(`${config.API_ENDPOINT}/folders`)\n        ])\n            .then(([notesRes, foldersRes]) => {\n                if (!notesRes.ok)\n                    return notesRes.json().then(e => Promise.reject(e));\n                if (!foldersRes.ok)\n                    return foldersRes.json().then(e => Promise.reject(e));\n\n                return Promise.all([notesRes.json(), foldersRes.json()]);\n            })\n            .then(([notes, folders]) => {\n                this.setState({notes, folders});\n            })\n            .catch(error => {\n                console.error({error});\n            });\n    };\n\n    handleDeleteNote = noteId => {\n        this.setState({\n            notes: this.state.notes.filter(note => note.id !== noteId)\n        });\n    };\n\n    renderNavRoutes() {\n        return (\n            <>\n                {['/', '/folder/:folderId'].map(path => (\n                    <Route\n                        exact\n                        key={path}\n                        path={path}\n                        component={NoteListNav}\n                    />\n                ))}\n                <Route path=\"/note/:noteId\" component={NotePageNav} />\n                <Route path=\"/add-folder\" component={NotePageNav} />\n                <Route path=\"/add-note\" component={NotePageNav} />\n            </>\n        );\n    }\n\n    renderMainRoutes() {\n        return (\n            <>\n                {['/', '/folder/:folderId'].map(path => (\n                    <Route\n                        exact\n                        key={path}\n                        path={path}\n                        component={NoteListMain}\n                    />\n                ))}\n                <Route path=\"/note/:noteId\" component={NotePageMain} />\n\n                <Route path='/add-folder' \n                    render={(history) =>\n                    <AddFolder\n                        addNewFolder={this.addNewFolder}\n                    />}\n                />\n               <Route path='/add-note'\n                render={(history) =>\n                    <AddNote\n                        addNewNote = {this.addNewNote}\n                        folders ={this.state.folders} \n                    /> }\n                />\n                <Route path='/edit/:bookmarkId'\n                component={EditNote}\n            />\n            </>\n        );\n    }\n\n    render() {\n            const value = {\n            notes: this.state.notes,\n            folders: this.state.folders,\n            deleteNote: this.handleDeleteNote\n        };\n        \n        return (\n            <ApiContext.Provider value={value}>\n                <div className=\"App\">\n                    <nav className=\"App__nav\">{this.renderNavRoutes()}</nav>\n                    <header className=\"App__header\">\n                        <h1>\n                            <Link to=\"/\">Noteful</Link>{' '}\n                        </h1>\n                    </header>\n                    <main className=\"App__main\">{this.renderMainRoutes()}</main>\n                </div>\n            </ApiContext.Provider>\n        );\n    }\n}\n\nexport default withRouter(App)\n"]},"metadata":{},"sourceType":"module"}