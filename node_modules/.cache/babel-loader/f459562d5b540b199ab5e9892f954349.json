{"ast":null,"code":"var _jsxFileName = \"/Users/rachelemilyperez/projects/noteful-app/noteful-app-client/src/EditFolder/EditFolder.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './EditFolder.css';\nimport ApiContext from '../ApiContext';\nimport config from '../config';\nexport default class EditFolder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: null,\n      name: ''\n    };\n\n    this.handleNameChange = e => {\n      this.setState({\n        name: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const folderId = this.props.match.params.folderId;\n      const name = this.state.name;\n      const newFolder = {\n        name\n      };\n      const url = \"http://localhost:8000/api/folders/\".concat(folderId);\n      const options = {\n        method: 'PATCH',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify(newFolder)\n      };\n      fetch(url, options).then(res => {\n        if (!res.ok) {\n          throw new Error('Something went wrong, please try again later');\n        } // return res.json();\n\n      }).then(data => {\n        console.log(data); // this.resetFields(newFolder)\n\n        this.context.updateFolder(newFolder);\n        this.props.history.push('/');\n      }).catch(err => {\n        this.setState({\n          error: err.message\n        });\n      });\n    };\n\n    this.resetFields = newFields => {\n      this.setState({\n        name: newFields.name || ''\n      });\n    };\n  }\n\n  componentDidMount() {\n    const folderId = this.props.match.params.folderId;\n    fetch(\"http://localhost:8000/api/folders/\".concat(folderId), {\n      method: 'GET'\n    }).then(res => {\n      if (!res.ok) {\n        throw new Error('Something went wrong, please try again later');\n      }\n\n      return res.json();\n    }).then(data => {\n      this.setState({\n        name: data.name\n      });\n    }).catch(err => {\n      this.setState({\n        error: err.message\n      });\n    });\n  }\n\n  render() {\n    const name = this.state.name;\n    return React.createElement(\"section\", {\n      className: \"EditFolder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Edit Folder\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Name:\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"name\",\n      name: \"name\",\n      defaultValue: name,\n      onChange: this.handleNameChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"editButton\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Edit folder\"))));\n  }\n\n}\nEditFolder.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.object\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func\n  }).isRequired\n};\nEditFolder.contextType = ApiContext;","map":{"version":3,"sources":["/Users/rachelemilyperez/projects/noteful-app/noteful-app-client/src/EditFolder/EditFolder.js"],"names":["React","Component","PropTypes","ApiContext","config","EditFolder","state","error","name","handleNameChange","e","setState","target","value","handleSubmit","preventDefault","folderId","props","match","params","newFolder","url","options","method","headers","body","JSON","stringify","fetch","then","res","ok","Error","data","console","log","context","updateFolder","history","push","catch","err","message","resetFields","newFields","componentDidMount","json","render","propTypes","shape","object","func","isRequired","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './EditFolder.css';\nimport ApiContext from '../ApiContext';\nimport config from '../config'\n\nexport default class EditFolder extends Component {\n\n\n    static propTypes = {\n        match: PropTypes.shape({\n          params: PropTypes.object,\n        }),\n        history: PropTypes.shape({\n          push: PropTypes.func,\n        }).isRequired,\n      };\n\n    static contextType = ApiContext\n\n    state = {\n        error: null,\n        name: ''\n      };\n    \n    componentDidMount() {\n\n    const folderId  = this.props.match.params.folderId\n\n    fetch(`http://localhost:8000/api/folders/${folderId}`, { method: 'GET'})\n        .then(res => {\n        if(!res.ok) {\n            throw new Error('Something went wrong, please try again later');\n        }\n        return res.json();\n        })  \n    .then(data => {\n         this.setState({\n                 name: data.name\n         })\n        })\n    .catch(err => {\n        this.setState({\n            error: err.message\n            });\n        })\n    }\n\n    handleNameChange = e => {\n        this.setState({ name: e.target.value })\n      };\n\n    handleSubmit = e => {\n        e.preventDefault()\n\n        const  folderId  = this.props.match.params.folderId\n        const  name  = this.state.name\n        const newFolder =  {name}\n        const url = `http://localhost:8000/api/folders/${folderId}`\n        const options = {\n            method: 'PATCH',\n             headers: {\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify(newFolder)\n        }\n        fetch(url, options)\n        .then(res => {\n        if(!res.ok) {\n            throw new Error('Something went wrong, please try again later');\n        }\n        // return res.json();\n        })  \n        .then(data => {\n            console.log(data)\n            // this.resetFields(newFolder)\n            this.context.updateFolder(newFolder)\n            this.props.history.push('/')\n        })\n     .catch(err => {\n        this.setState({\n            error: err.message\n            });\n        })\n}\n\nresetFields = (newFields) => {\n    this.setState({\n      name: newFields.name || ''\n    })\n  }\n\n\nrender() {\n    const { name } = this.state\n \n    return (\n      <section className='EditFolder'>\n        <h2>Edit Folder</h2>\n        <form onSubmit={this.handleSubmit}> \n            <div className='field'>\n                <label htmlFor='name-input'>\n                Name:\n                </label>\n                <input \n                    type='text' \n                    id='name' \n                    name='name'\n                    defaultValue={name}\n                    onChange={this.handleNameChange}\n                    />\n            </div>\n            <div className='buttons'>\n                <button className='editButton' type='submit'>\n                Edit folder\n                </button>\n            </div>\n        </form>\n      </section>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}