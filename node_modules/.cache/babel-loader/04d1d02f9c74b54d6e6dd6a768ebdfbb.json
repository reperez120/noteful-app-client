{"ast":null,"code":"var _jsxFileName = \"/Users/rachelemilyperez/projects/notefulapp_client/src/EditNote/EditNote.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport config from '../config';\nimport './EditNote.css';\n\nclass EditNote extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleChangeName = e => {\n      this.setState({\n        name: e.target.value\n      });\n    };\n\n    this.handleChangeUrl = e => {\n      this.setState({\n        url: e.target.value\n      });\n    };\n\n    this.handleChangeContent = e => {\n      this.setState({\n        content: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const bookmarkId = this.props.match.params.bookmarkId;\n      const _this$state = this.state,\n            id = _this$state.id,\n            title = _this$state.title,\n            url = _this$state.url,\n            description = _this$state.description,\n            rating = _this$state.rating;\n      const newBookmark = {\n        id,\n        title,\n        url,\n        description,\n        rating\n      };\n      fetch(config.API_ENDPOINT + \"/\".concat(bookmarkId), {\n        method: 'PATCH',\n        body: JSON.stringify(newBookmark),\n        headers: {\n          'content-type': 'application/json',\n          'authorization': \"Bearer \".concat(config.API_KEY)\n        }\n      }).then(res => {\n        if (!res.ok) return res.json().then(error => Promise.reject(error));\n      }).then(() => {\n        this.resetFields(newBookmark);\n        this.context.updateBookmark(newBookmark);\n        this.props.history.push('/');\n      }).catch(error => {\n        console.error(error);\n        this.setState({\n          error\n        });\n      });\n    };\n\n    this.resetFields = newFields => {\n      this.setState({\n        id: newFields.id || '',\n        title: newFields.title || '',\n        url: newFields.url || '',\n        description: newFields.description || '',\n        rating: newFields.rating || ''\n      });\n    };\n\n    this.handleClickCancel = () => {\n      this.props.history.push('/');\n    };\n  }\n\n  componentDidMount() {\n    const noteId = this.props.match.params.noteId;\n    fetch(config.API_ENDPOINT + \"/\".concat(noteId), {\n      method: 'GET'\n    }).then(res => {\n      if (!res.ok) return res.json().then(error => Promise.reject(error));\n      return res.json();\n    }).then(responseData => {\n      this.setState({\n        id: responseData.id,\n        name: responseData.name,\n        url: responseData.url,\n        content: responseData.content\n      });\n    }).catch(error => {\n      console.error(error);\n      this.setState({\n        error\n      });\n    });\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          error = _this$state2.error,\n          title = _this$state2.title,\n          url = _this$state2.url,\n          description = _this$state2.description,\n          rating = _this$state2.rating;\n    return React.createElement(\"section\", {\n      className: \"EditBookmark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Edit bookmark\"), React.createElement(\"form\", {\n      className: \"EditBookmark__form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"EditBookmark__error\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, error && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, error.message)), React.createElement(\"input\", {\n      type: \"hidden\",\n      name: \"id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Title\", ' ', React.createElement(Required, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      id: \"title\",\n      placeholder: \"Great website!\",\n      required: true,\n      value: title,\n      onChange: this.handleChangeTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"url\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"URL\", ' ', React.createElement(Required, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"url\",\n      name: \"url\",\n      id: \"url\",\n      placeholder: \"https://www.great-website.com/\",\n      required: true,\n      value: url,\n      onChange: this.handleChangeUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"textarea\", {\n      name: \"description\",\n      id: \"description\",\n      value: description,\n      onChange: this.handleChangeDescription,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"rating\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Rating\", ' ', React.createElement(Required, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"number\",\n      name: \"rating\",\n      id: \"rating\",\n      min: \"1\",\n      max: \"5\",\n      required: true,\n      value: rating,\n      onChange: this.handleChangeRating,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"EditBookmark__buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleClickCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Cancel\"), ' ', React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Save\"))));\n  }\n\n}\n\nexport default EditNote;","map":{"version":3,"sources":["/Users/rachelemilyperez/projects/notefulapp_client/src/EditNote/EditNote.js"],"names":["React","Component","PropTypes","config","EditNote","handleChangeName","e","setState","name","target","value","handleChangeUrl","url","handleChangeContent","content","handleSubmit","preventDefault","bookmarkId","props","match","params","state","id","title","description","rating","newBookmark","fetch","API_ENDPOINT","method","body","JSON","stringify","headers","API_KEY","then","res","ok","json","error","Promise","reject","resetFields","context","updateBookmark","history","push","catch","console","newFields","handleClickCancel","componentDidMount","noteId","responseData","render","message","handleChangeTitle","handleChangeDescription","handleChangeRating"],"mappings":"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","sourcesContent":["import React, { Component } from  'react';\nimport PropTypes from 'prop-types';\nimport config from '../config'\nimport './EditNote.css';\n\nclass EditNote extends Component {\n\n    componentDidMount() {\n        const { noteId } = this.props.match.params\n        fetch(config.API_ENDPOINT + `/${noteId}`, {\n          method: 'GET'\n        })\n          .then(res => {\n            if (!res.ok)\n              return res.json().then(error => Promise.reject(error))\n    \n            return res.json()\n          })\n          .then(responseData => {\n            this.setState({\n              id: responseData.id,\n              name: responseData.name,\n              url: responseData.url,\n              content: responseData.content,\n\n            })\n          })\n          .catch(error => {\n            console.error(error)\n            this.setState({ error })\n          })\n      }\n    \n      handleChangeName= e => {\n        this.setState({ name: e.target.value })\n      };\n    \n      handleChangeUrl = e => {\n        this.setState({ url: e.target.value })\n      };\n    \n      handleChangeContent = e => {\n        this.setState({ content: e.target.value })\n      }\n    \n\n      handleSubmit = e => {\n        e.preventDefault()\n        const { bookmarkId } = this.props.match.params\n        const { id, title, url, description, rating } = this.state\n        const newBookmark = { id, title, url, description, rating }\n        fetch(config.API_ENDPOINT + `/${bookmarkId}`, {\n          method: 'PATCH',\n          body: JSON.stringify(newBookmark),\n          headers: {\n            'content-type': 'application/json',\n            'authorization': `Bearer ${config.API_KEY}`\n          },\n        })\n          .then(res => {\n            if (!res.ok)\n              return res.json().then(error => Promise.reject(error))\n          })\n          .then(() => {\n            this.resetFields(newBookmark)\n            this.context.updateBookmark(newBookmark)\n            this.props.history.push('/')\n          })\n          .catch(error => {\n            console.error(error)\n            this.setState({ error })\n          })\n      }\n    \n      resetFields = (newFields) => {\n        this.setState({\n          id: newFields.id || '',\n          title: newFields.title || '',\n          url: newFields.url || '',\n          description: newFields.description || '',\n          rating: newFields.rating || '',\n        })\n      }\n    \n      handleClickCancel = () => {\n        this.props.history.push('/')\n      };\n    \n      render() {\n        const { error, title, url, description, rating } = this.state\n        return (\n          <section className='EditBookmark'>\n            <h2>Edit bookmark</h2>\n            <form\n              className='EditBookmark__form'\n              onSubmit={this.handleSubmit}\n            >\n              <div className='EditBookmark__error' role='alert'>\n                {error && <p>{error.message}</p>}\n              </div>\n              <input\n                type='hidden'\n                name='id'\n              />\n              <div>\n                <label htmlFor='title'>\n                  Title\n                  {' '}\n                  <Required />\n                </label>\n                <input\n                  type='text'\n                  name='title'\n                  id='title'\n                  placeholder='Great website!'\n                  required\n                  value={title}\n                  onChange={this.handleChangeTitle}\n                />\n              </div>\n              <div>\n                <label htmlFor='url'>\n                  URL\n                  {' '}\n                  <Required />\n                </label>\n                <input\n                  type='url'\n                  name='url'\n                  id='url'\n                  placeholder='https://www.great-website.com/'\n                  required\n                  value={url}\n                  onChange={this.handleChangeUrl}\n                />\n              </div>\n              <div>\n                <label htmlFor='description'>\n                  Description\n                </label>\n                <textarea\n                  name='description'\n                  id='description'\n                  value={description}\n                  onChange={this.handleChangeDescription}\n                />\n              </div>\n              <div>\n                <label htmlFor='rating'>\n                  Rating\n                  {' '}\n                  <Required />\n                </label>\n                <input\n                  type='number'\n                  name='rating'\n                  id='rating'\n                  min='1'\n                  max='5'\n                  required\n                  value={rating}\n                  onChange={this.handleChangeRating}\n                />\n              </div>\n              <div className='EditBookmark__buttons'>\n                <button type='button' onClick={this.handleClickCancel}>\n                  Cancel\n                </button>\n                {' '}\n                <button type='submit'>\n                  Save\n                </button>\n              </div>\n            </form>\n          </section>\n        );\n      }\n    }\n\nexport default EditNote;"]},"metadata":{},"sourceType":"module"}