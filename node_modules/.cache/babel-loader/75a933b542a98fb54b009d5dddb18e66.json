{"ast":null,"code":"import _objectSpread from \"/Users/rachelemilyperez/projects/noteful-app/noteful-app-client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/rachelemilyperez/projects/noteful-app/noteful-app-client/src/AddNote/AddNote.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport NotefulForm from '../NotefulForm/NotefulForm';\nimport ValidationError from './ValidationError';\nimport PropTypes from 'prop-types';\nimport ApiContext from '../ApiContext';\nimport NotefulError from '../NotefulError';\nimport './AddNote.css';\nimport config from '../config';\n\nclass AddNote extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null\n    };\n\n    this.handleNoteSubmit = e => {\n      e.preventDefault();\n      const _e$target = e.target,\n            name = _e$target.name,\n            selectedFolder = _e$target.selectedFolder,\n            content = _e$target.content;\n      const note = {\n        name: name.value,\n        folder: selectedFolder.value,\n        content: content.value,\n        date: new Date()\n      };\n      const options = {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify(note)\n      };\n      this.setState({\n        error: null\n      });\n      fetch('http://localhost:8000/api/notes', options).then(res => {\n        if (!res.ok) {\n          throw new Error('Something went wrong, please try again later');\n        }\n\n        return res;\n      });\n      Promise.all([fetch(\"\".concat(config.API_ENDPOINT, \"/api/notes\")), fetch(\"\".concat(config.API_ENDPOINT, \"/api/folders\")),, {\n        method: 'GET'\n      }]).then(([notesRes, foldersRes]) => {\n        console.log(notesRes);\n        if (!notesRes.ok) return notesRes.json().then(e => Promise.reject(e));\n        if (!foldersRes.ok) return foldersRes.json().then(e => Promise.reject(e));\n        return Promise.all([notesRes.json(), foldersRes.json()]);\n      }).then(([notes, folders]) => {\n        this.context.addNote(folders, note);\n        this.props.history.push('/');\n      }).catch(err => {\n        this.setState({\n          error: err.message\n        });\n      });\n    };\n\n    this.state = {\n      name: '',\n      nameValid: false,\n      formValid: false,\n      validationMessage: {\n        name: ''\n      }\n    };\n  }\n\n  verifyNameLength(name) {\n    this.setState({\n      name\n    }, () => {\n      this.validateName(name);\n    });\n  }\n\n  validateName(fieldValue) {\n    const fieldErrors = _objectSpread({}, this.state.validationMessage);\n\n    let hasError = false;\n    fieldValue = fieldValue.trim();\n\n    if (fieldValue.length === 0) {\n      fieldErrors.name = 'A note name is required.';\n      hasError = true;\n    } else {\n      fieldErrors.name = '';\n      hasError = false;\n    }\n\n    this.setState({\n      validationMessage: fieldErrors,\n      nameValid: !hasError\n    }, this.formValid);\n  }\n\n  formValid() {\n    this.setState({\n      formValid: this.state.nameValid\n    });\n  }\n\n  render() {\n    const folders = this.context.folders;\n    return React.createElement(\"section\", {\n      className: \"AddNote\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(NotefulError, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Create a note\"), React.createElement(NotefulForm, {\n      onSubmit: this.handleNoteSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"note-name-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"name\",\n      name: \"name\",\n      onChange: e => this.verifyNameLength(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(ValidationError, {\n      hasError: !this.state.nameVaild,\n      message: this.state.validationMessage.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"note-content-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Content\"), React.createElement(\"textarea\", {\n      type: \"text\",\n      id: \"content\",\n      name: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"note-folder-select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Folder\"), React.createElement(\"select\", {\n      id: \"selectedFolder\",\n      name: \"selectedFolder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"...\"), folders.map(folder => React.createElement(\"option\", {\n      key: folder.id,\n      value: folder.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, folder.name)))), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"addNoteButton\",\n      disabled: !this.state.formValid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Add note\")))));\n  }\n\n} // AddNote.propTypes = {\n//   addNote: PropTypes.func.isRequired,\n//   note: PropTypes.objectOf(PropTypes.shape({\n//     id: PropTypes.string.isRequired,\n//     name: PropTypes.string.isRequired,\n//     content: PropTypes.string.isRequired,\n//     modified: PropTypes.number.isRequired,\n//   })) \n// };\n\n\nAddNote.contextType = ApiContext;\nexport default withRouter(AddNote);","map":{"version":3,"sources":["/Users/rachelemilyperez/projects/noteful-app/noteful-app-client/src/AddNote/AddNote.js"],"names":["React","Component","withRouter","NotefulForm","ValidationError","PropTypes","ApiContext","NotefulError","config","AddNote","constructor","props","state","error","handleNoteSubmit","e","preventDefault","target","name","selectedFolder","content","note","value","folder","date","Date","options","method","headers","body","JSON","stringify","setState","fetch","then","res","ok","Error","Promise","all","API_ENDPOINT","notesRes","foldersRes","console","log","json","reject","notes","folders","context","addNote","history","push","catch","err","message","nameValid","formValid","validationMessage","verifyNameLength","validateName","fieldValue","fieldErrors","hasError","trim","length","render","nameVaild","map","id","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport NotefulForm from '../NotefulForm/NotefulForm';\nimport ValidationError from './ValidationError';\nimport PropTypes from 'prop-types';\nimport ApiContext from '../ApiContext';\nimport NotefulError from '../NotefulError';\nimport './AddNote.css';\nimport config from '../config';\n\nclass AddNote extends Component {\n\n  state = {\n    error: null,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      nameValid: false,\n      formValid: false,\n      validationMessage: {\n        name: ''\n      }\n    }\n  }\n\n  static contextType = ApiContext;\n\n  verifyNameLength(name) {\n    this.setState({name}, () => {this.validateName(name)});\n  }\n\n  handleNoteSubmit = e => {\n    e.preventDefault();\n    const { name, selectedFolder, content } = e.target;\n    const note = {\n      name: name.value,\n      folder: selectedFolder.value,\n      content: content.value,\n      date: new Date()\n    }\n\n    const options = {           \n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    }\n    this.setState({ error: null })\n    fetch('http://localhost:8000/api/notes', options)\n      .then(res => {\n        if(!res.ok) {\n          throw new Error('Something went wrong, please try again later');\n        }\n        return res\n      })\n      Promise.all([\n        fetch(`${config.API_ENDPOINT}/api/notes`),\n        fetch(`${config.API_ENDPOINT}/api/folders`),\n        , { method: 'GET'}\n      ])\n    .then(([notesRes, foldersRes]) => {\n      console.log(notesRes)\n               \n      if (!notesRes.ok)\n          return notesRes.json().then(e => Promise.reject(e));\n      if (!foldersRes.ok)\n          return foldersRes.json().then(e => Promise.reject(e));\n          \n          return Promise.all([notesRes.json(), foldersRes.json()]);\n  })\n    .then(([notes, folders])=> {\n      this.context.addNote(folders, note)\n      this.props.history.push('/')\n    })\n    .catch(err => {\n      this.setState({\n        error: err.message\n      });\n    });\n  }\n\n  validateName(fieldValue) {\n    const fieldErrors = {...this.state.validationMessage};\n    let hasError = false;\n    fieldValue = fieldValue.trim();\n    if(fieldValue.length === 0) {\n      fieldErrors.name = 'A note name is required.';\n      hasError = true;\n    } else {\n      fieldErrors.name = '';\n      hasError = false;\n    }\n    this.setState({\n      validationMessage: fieldErrors,\n      nameValid: !hasError\n    }, this.formValid );\n  }\nformValid() {\n  this.setState({\n      formValid: this.state.nameValid\n  });\n}\n\n  render() {\n    const folders = this.context.folders\n    return (\n      <section className='AddNote'>\n        <NotefulError>\n          <h2>Create a note</h2>\n          <NotefulForm onSubmit={this.handleNoteSubmit}>\n            <div className='field'>\n              <label htmlFor='note-name-input'>\n                Name\n              </label>\n              <input type='text' id='name' name='name' onChange={e => this.verifyNameLength(e.target.value)}/>\n              <ValidationError hasError={!this.state.nameVaild} message={this.state.validationMessage.name}/>\n            </div>\n            <div className='field'>\n              <label htmlFor='note-content-input'>\n                Content\n              </label>\n              <textarea type='text' id='content' name='content'/>\n            </div>\n            <div className='field'>\n              <label htmlFor='note-folder-select'>\n                Folder\n              </label>\n              <select id='selectedFolder' name='selectedFolder'>\n                <option value={null}>...</option>\n                {folders.map(folder =>\n                  <option key={folder.id} value={folder.id}>\n                    {folder.name}\n                  </option>\n                )}\n              </select>\n            </div>\n            <div className='buttons'>\n              <button type='submit' className='addNoteButton' disabled={!this.state.formValid} >\n                Add note\n              </button>\n            </div>\n          </NotefulForm>\n        </NotefulError>\n      </section>\n    )\n  }\n}\n\n// AddNote.propTypes = {\n//   addNote: PropTypes.func.isRequired,\n//   note: PropTypes.objectOf(PropTypes.shape({\n//     id: PropTypes.string.isRequired,\n//     name: PropTypes.string.isRequired,\n//     content: PropTypes.string.isRequired,\n//     modified: PropTypes.number.isRequired,\n//   })) \n// };\n\n\nexport default withRouter(AddNote);\n"]},"metadata":{},"sourceType":"module"}