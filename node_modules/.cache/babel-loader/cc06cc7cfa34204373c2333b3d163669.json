{"ast":null,"code":"var _jsxFileName = \"/Users/rachelemilyperez/projects/noteful-app/noteful-app-client/src/NoteListNav/NoteListNav.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport AddButton from '../AddButton/AddButton';\nimport ApiContext from '../ApiContext';\nimport './NoteListNav.css';\nimport PropTypes from 'prop-types';\nimport config from '../config';\nexport default class NoteListNav extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      noteLength: null\n    };\n\n    this.handleClickDelete = (folderId, e) => {\n      e.preventDefault();\n      fetch(\"\".concat(config.API_ENDPOINT, \"/api/folders/\").concat(folderId), {\n        method: 'DELETE'\n      }).then(res => {\n        if (!res.ok) return res.json().then(e => Promise.reject(e));\n        return res;\n      }).then(() => {\n        this.context.deleteFolder(folderId);\n      }).catch(error => {\n        console.error({\n          error\n        });\n      });\n    };\n\n    this.countNotes = folders => {\n      if (!folders.length) return folders;\n      folders.forEach(folder => {\n        folder.notes = folder.notes || [];\n\n        if (folder.notes.length) {\n          let length = folder.notes.length;\n          console.log(length);\n          return length;\n        }\n      });\n    };\n\n    this.findFolder = (folders = [], folderId) => folders.find(folder => folder.id === folderId);\n\n    this.countNotes = folders => {\n      if (!folders.length) return folders;\n      folders.forEach(folder => {\n        folder.notes = folder.notes || [];\n\n        if (folder.notes.length) {\n          let length = folder.notes.length;\n          return length;\n        }\n      });\n    };\n  }\n\n  render() {\n    const _this$context$folders = this.context.folders,\n          folders = _this$context$folders === void 0 ? {} : _this$context$folders;\n    this.countNotes(folders);\n    return React.createElement(\"div\", {\n      className: \"NoteListNav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"NoteListNav__list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, folders.map(folder => React.createElement(\"li\", {\n      key: folder.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"NoteListNav__num-notes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, this.countNotes(folders)), folder.name, React.createElement(\"span\", {\n      className: \"Content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"Folder_delete\",\n      type: \"button\",\n      onClick: this.handleClickDelete.bind(null, folder.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"remove\"), React.createElement(\"div\", {\n      className: \"editFolder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/folders/\".concat(folder.id, \"/edit\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"edit\")))))), React.createElement(\"div\", {\n      className: \"NoteListNav__button-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(AddButton, {\n      tag: Link,\n      to: \"/add-folder\",\n      type: \"button\",\n      className: \"NoteListNav__add-folder-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Add Folder\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }))));\n  }\n\n}\nNoteListNav.defaultProps = {\n  folders: []\n};\nNoteListNav.contextType = ApiContext;\nNoteListNav.propTypes = {\n  folder: PropTypes.objectOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired\n  }))\n};","map":{"version":3,"sources":["/Users/rachelemilyperez/projects/noteful-app/noteful-app-client/src/NoteListNav/NoteListNav.js"],"names":["React","Link","AddButton","ApiContext","PropTypes","config","NoteListNav","Component","state","noteLength","handleClickDelete","folderId","e","preventDefault","fetch","API_ENDPOINT","method","then","res","ok","json","Promise","reject","context","deleteFolder","catch","error","console","countNotes","folders","length","forEach","folder","notes","log","findFolder","find","id","render","map","name","bind","defaultProps","contextType","propTypes","objectOf","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport AddButton from '../AddButton/AddButton'\nimport ApiContext from '../ApiContext'\nimport './NoteListNav.css'\nimport PropTypes from 'prop-types'\nimport config from '../config'\n\nexport default class NoteListNav extends React.Component {\n  static defaultProps = {\n    folders: []\n  }\n  static contextType = ApiContext;\n\n  state = {\n    noteLength: null\n  }\n\n  handleClickDelete = (folderId, e) => {\n    e.preventDefault()\n\n    fetch(`${config.API_ENDPOINT}/api/folders/${folderId}`, {\n      method: 'DELETE'\n    })\n    .then(res => {\n      if (!res.ok)\n        return res.json().then(e => Promise.reject(e))\n      return res\n    })\n    .then(() => {\n      this.context.deleteFolder(folderId)\n    })\n    .catch(error => {\n      console.error({ error })\n    })\n  }\n\n  countNotes = (folders) => {\n    if (!folders.length) return folders\n     folders.forEach(folder => {\n       folder.notes = folder.notes || []\n       if (folder.notes.length) {\n          let length = folder.notes.length\n          console.log(length)\n          return length\n       }\n    })\n  }\n\n  findFolder = (folders=[], folderId) =>\n  folders.find(folder => folder.id === folderId)\n\n  // countNotesForFolder = (notes=[], folderId) =>\n  // notes.filter(note => note.folder === this.folder.id).length\n\n  countNotes = (folders) => {\n    if (!folders.length) return folders\n     folders.forEach(folder => {\n       folder.notes = folder.notes || []\n       if (folder.notes.length) {\n          let length = folder.notes.length\n          return length\n       }\n    })\n  }\n\n  render() {\n    const { folders={}} = this.context\n    this.countNotes(folders)\n    \n    return (\n      <div className='NoteListNav'>\n        <ul className='NoteListNav__list'>\n          {(folders.map(folder =>\n            <li key={folder.id}>\n                <span className='NoteListNav__num-notes'>\n                {this.countNotes(folders)}\n                </span>\n                {folder.name}\n                <span className=\"Content\">\n              </span>      \n              <div className='buttons'>\n                <button\n            className='Folder_delete'\n            type='button'\n            onClick={this.handleClickDelete.bind(null, folder.id)}\n          >\n          remove\n          </button>\n          <div className='editFolder'>\n          <Link to=\n          {`/folders/${folder.id}/edit`}>\n          edit\n          </Link>\n          </div>\n          </div>\n            </li>\n          ))}\n        </ul>\n        <div className='NoteListNav__button-wrapper'>\n          <AddButton\n            tag={Link}\n            to='/add-folder'\n            type='button'\n            className='NoteListNav__add-folder-button'\n          >\n           Add Folder\n            <br />\n          </AddButton>\n        </div>\n      </div>\n    )\n  }\n}\n\nNoteListNav.propTypes = {\n  folder: PropTypes.objectOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  })) \n};\n"]},"metadata":{},"sourceType":"module"}