{"ast":null,"code":"var _jsxFileName = \"/Users/rachelemilyperez/projects/notefulorganizingreactcode-copy2/src/App/App.js\";\nimport React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom'; // import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport NoteListNav from '../NoteListNav/NoteListNav';\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport NoteListMain from '../NoteListMain/NoteListMain';\nimport NotePageMain from '../NotePageMain/NotePageMain';\nimport AddFolder from '../AddFolder/AddFolder';\nimport AddNote from '../AddNote/AddNote';\nimport ApiContext from '../ApiContext';\nimport './App.css';\nimport PropTypes from 'prop-types';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      notes: [],\n      folders: [] // noteNameInput: '',\n      // noteContentInput:'',\n      // noteFolderSelect: '',\n\n    };\n\n    this.handleDeleteNote = noteId => {\n      this.setState({\n        notes: this.state.notes.filter(note => note.id !== noteId)\n      });\n    };\n  }\n\n  componentDidMount() {\n    Promise.all([fetch('http://localhost:9090/notes'), fetch('http://localhost:9090/folders')]).then(([notesRes, foldersRes]) => {\n      if (!notesRes.ok) return notesRes.json().then(e => Promise.reject(e));\n      if (!foldersRes.ok) return foldersRes.json().then(e => Promise.reject(e));\n      return Promise.all([notesRes.json(), foldersRes.json()]);\n    }).then(([notes, folders]) => {\n      console.log(folders);\n      this.setState({\n        notes,\n        folders\n      });\n    }).catch(error => {\n      console.error({\n        error\n      });\n    });\n  }\n\n  renderNavRoutes() {\n    return React.createElement(React.Fragment, null, ['/', '/folder/:folderId'].map(path => React.createElement(Route, {\n      exact: true,\n      key: path,\n      path: path,\n      component: NoteListNav,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/note/:noteId\",\n      component: NotePageNav,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/add-folder\",\n      component: NotePageNav,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/add-note\",\n      component: NotePageNav,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }));\n  }\n\n  renderMainRoutes() {\n    return React.createElement(React.Fragment, null, ['/', '/folder/:folderId'].map(path => React.createElement(Route, {\n      exact: true,\n      key: path,\n      path: path,\n      component: NoteListMain,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/note/:noteId\",\n      render: () => React.createElement(NotePageMain, {\n        noteName: this.noteNameInput,\n        noteContent: this.noteContentInput,\n        FolderSelected: this.noteFolderSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/add-folder\",\n      component: AddFolder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/add-note\",\n      component: AddNote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), \" }\");\n  }\n\n  render() {\n    const value = {\n      notes: this.state.notes,\n      folders: this.state.folders,\n      deleteNote: this.handleDeleteNote\n    };\n    return React.createElement(ApiContext.Provider, {\n      value: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      className: \"App__nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, this.renderNavRoutes()), React.createElement(\"header\", {\n      className: \"App__header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Noteful\"), ' ')), React.createElement(\"main\", {\n      className: \"App__main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, this.renderMainRoutes())));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/rachelemilyperez/projects/notefulorganizingreactcode-copy2/src/App/App.js"],"names":["React","Component","Route","Link","NoteListNav","NotePageNav","NoteListMain","NotePageMain","AddFolder","AddNote","ApiContext","PropTypes","App","state","notes","folders","handleDeleteNote","noteId","setState","filter","note","id","componentDidMount","Promise","all","fetch","then","notesRes","foldersRes","ok","json","e","reject","console","log","catch","error","renderNavRoutes","map","path","renderMainRoutes","noteNameInput","noteContentInput","noteFolderSelect","render","value","deleteNote"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport NoteListNav from '../NoteListNav/NoteListNav';\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport NoteListMain from '../NoteListMain/NoteListMain';\nimport NotePageMain from '../NotePageMain/NotePageMain';\nimport AddFolder from '../AddFolder/AddFolder';\nimport AddNote from '../AddNote/AddNote';\nimport ApiContext from '../ApiContext';\nimport './App.css';\nimport PropTypes from 'prop-types';\n\n\nclass App extends Component {\n  state = {\n    notes: [],\n    folders: [],\n    // noteNameInput: '',\n    // noteContentInput:'',\n    // noteFolderSelect: '',\n  };\n\n  componentDidMount() {\n    Promise.all([\n      fetch('http://localhost:9090/notes'),\n      fetch('http://localhost:9090/folders')\n    ])\n      .then(([notesRes, foldersRes]) => {\n        if (!notesRes.ok)\n          return notesRes.json().then(e => Promise.reject(e))\n        if (!foldersRes.ok)\n          return foldersRes.json().then(e => Promise.reject(e))\n\n        return Promise.all([\n          notesRes.json(),\n          foldersRes.json(),\n        ])\n      })\n      .then(([notes, folders]) => {\n        console.log(folders);\n        this.setState({ notes, folders })\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  handleDeleteNote = noteId => {\n    this.setState({\n      notes: this.state.notes.filter(note => note.id !== noteId)\n    })\n  }\n\n  renderNavRoutes() {\n    return (\n      <>\n        {['/', '/folder/:folderId'].map(path =>\n          <Route\n            exact\n            key={path}\n            path={path}\n            component={NoteListNav}\n          />\n        )}\n        <Route\n          path='/note/:noteId'\n          component={NotePageNav}\n        />\n        <Route\n          path='/add-folder'\n          component={NotePageNav}\n        />\n        <Route\n          path='/add-note'\n          component={NotePageNav}\n        />\n      </>\n    );\n  }\n\n  renderMainRoutes() {\n    return (\n      <>\n        {['/', '/folder/:folderId'].map(path =>\n          <Route\n            exact\n            key={path}\n            path={path}\n            component={NoteListMain}\n          />\n        )}\n        <Route path='/note/:noteId' \n           render={() =>\n             <NotePageMain \n             noteName = {this.noteNameInput}\n              noteContent = {this.noteContentInput}\n              FolderSelected = {this.noteFolderSelect}\n            />}\n        />\n        <Route\n          path='/add-folder'\n            component={AddFolder}\n        />\n\n         <Route\n           path='/add-note'\n             component={AddNote}\n        /> }\n      </>\n    );\n  }\n\n  render() {\n    const value = {\n      notes: this.state.notes,\n      folders: this.state.folders,\n      deleteNote: this.handleDeleteNote,\n    }\n    return (\n      <ApiContext.Provider value={value}>\n        <div className='App'>\n          <nav className='App__nav'>\n            {this.renderNavRoutes()}\n          </nav>\n          <header className='App__header'>\n            <h1>\n              <Link to='/'>Noteful</Link>\n              {' '}\n              {/* <FontAwesomeIcon icon='check-double' /> */}\n            </h1>\n          </header>\n          <main className='App__main'>\n            {this.renderMainRoutes()}\n          </main>\n        </div>\n      </ApiContext.Provider>\n    )\n  }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}