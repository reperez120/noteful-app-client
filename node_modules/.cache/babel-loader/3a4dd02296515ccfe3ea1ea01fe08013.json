{"ast":null,"code":"var _jsxFileName = \"/Users/rachelemilyperez/projects/noteful-app/noteful-app-client/src/EditNote/EditNote.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport NotefulForm from '../NotefulForm/NotefulForm';\nimport ValidationError from './ValidationError';\nimport NotefulError from '../NotefulError';\nimport PropTypes from 'prop-types';\nimport config from '../config';\nimport './EditNote.css';\n\nclass EditNote extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNoteEdit = e => {\n      e.preventDefault();\n      const _e$target = e.target,\n            name = _e$target.name,\n            selectedFolder = _e$target.selectedFolder,\n            content = _e$target.content;\n      const note = {\n        name: name.value,\n        folderId: selectedFolder.value,\n        content: content.value,\n        modified: Date.now()\n      };\n      fetch(\"https://localhost:8000/api/notes/\".concat(this.props.match.params.noteId), {\n        method: 'PATCH',\n        body: JSON.stringify(this.state.inputValue)\n      }).then(res => {\n        if (!res.ok) {\n          throw new Error('Something went wrong, please try again later');\n        }\n\n        return res.json();\n      }).then(data => {\n        this.props.EditNote(data);\n        this.props.history.push('/');\n      }).catch(err => {\n        this.setState({\n          error: err.message\n        });\n      });\n    };\n\n    this.state = {\n      name: '',\n      nameValid: false,\n      formValid: false,\n      validationMessage: {\n        name: ''\n      }\n    };\n  }\n\n  verifyNameLength(name) {\n    this.setState({\n      name\n    }, () => {\n      this.validateName(name);\n    });\n  }\n\n  componentDidMount() {\n    const noteId = this.props.match.params.noteId;\n    fetch(\"https://localhost:8000/api/notes/\".concat(noteId), {\n      method: 'GET'\n    }).then(res => {\n      if (!res.ok) {\n        throw new Error('Something went wrong, please try again later');\n      }\n\n      return res.json();\n    }).then(responseData => {\n      this.setState({\n        /* fields state updates here? */\n      });\n    }).catch(error => {\n      console.error({\n        error\n      });\n    });\n  }\n\n  render() {\n    const folders = this.props.folders;\n    return React.createElement(\"section\", {\n      className: \"AddNote\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(NotefulError, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Edit note\"), React.createElement(NotefulForm, {\n      onSubmit: this.handleNoteEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"note-name-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"note_name\",\n      name: \"note_name\",\n      value: note_name,\n      onChange: e => this.verifyNameLength(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(ValidationError, {\n      hasError: !this.state.nameVaild,\n      message: this.state.validationMessage.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"note-content-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Content\"), React.createElement(\"textarea\", {\n      id: \"content\",\n      name: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"note-folder-select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Folder\"), React.createElement(\"select\", {\n      id: \"selectedFolder\",\n      name: \"selectedFolder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"...\"), folders.map(folder => React.createElement(\"option\", {\n      key: folder.id,\n      value: folder.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, folder.name)))), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      disabled: !this.state.formValid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Edit note\")))));\n  }\n\n}\n\nEditNote.propTypes = {\n  EditNote: PropTypes.func.isRequired,\n  folders: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired\n  }))\n};\nexport default EditNote;","map":{"version":3,"sources":["/Users/rachelemilyperez/projects/noteful-app/noteful-app-client/src/EditNote/EditNote.js"],"names":["React","Component","withRouter","NotefulForm","ValidationError","NotefulError","PropTypes","config","EditNote","constructor","props","handleNoteEdit","e","preventDefault","target","name","selectedFolder","content","note","value","folderId","modified","Date","now","fetch","match","params","noteId","method","body","JSON","stringify","state","inputValue","then","res","ok","Error","json","data","history","push","catch","err","setState","error","message","nameValid","formValid","validationMessage","verifyNameLength","validateName","componentDidMount","responseData","console","render","folders","note_name","nameVaild","map","folder","id","propTypes","func","isRequired","arrayOf","shape","string"],"mappings":"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","sourcesContent":["import React, { Component } from  'react';\nimport { withRouter } from 'react-router-dom';\nimport NotefulForm from '../NotefulForm/NotefulForm';\nimport ValidationError from './ValidationError';\nimport NotefulError from '../NotefulError';\nimport PropTypes from 'prop-types';\nimport config from '../config'\nimport './EditNote.css';\n\nclass EditNote extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n\n      name: '',\n      nameValid: false,\n      formValid: false,\n      validationMessage: {\n        name: ''\n      }\n    }\n  }\n\n  verifyNameLength(name) {\n    this.setState({name}, () => {this.validateName(name)});\n  }\n\n    componentDidMount() {\n       const noteId = this.props.match.params.noteId\n      fetch(`https://localhost:8000/api/notes/${noteId}`, {\n          method: 'GET'\n       })\n       .then(res => {\n        if(!res.ok) {\n          throw new Error('Something went wrong, please try again later');\n        }\n        return res.json();\n      })\n      .then(responseData => {\n             this.setState({\n              /* fields state updates here? */\n            })\n           })\n           .catch(error => {\n              console.error({error});})\n    }\n\n    handleNoteEdit = e => {\n         e.preventDefault()\n         const { name, selectedFolder, content } = e.target;\n         const note = {\n         name: name.value,\n         folderId: selectedFolder.value,\n         content: content.value,\n         modified: Date.now()\n        }\n\n    fetch(`https://localhost:8000/api/notes/${this.props.match.params.noteId}`, {\n        method: 'PATCH',\n        body: JSON.stringify(this.state.inputValue)\n      })\n        .then(res => {\n        if(!res.ok) {\n          throw new Error('Something went wrong, please try again later');\n        }\n        return res.json();\n      })\n    .then(data => {\n      this.props.EditNote(data)\n      this.props.history.push('/')\n    })\n    .catch(err => {\n      this.setState({\n        error: err.message\n      });\n    });\n  }\n\n  render() {\n    const folders = this.props.folders\n    return (\n      <section className='AddNote'>\n        <NotefulError>\n          <h2>Edit note</h2>\n          <NotefulForm onSubmit={this.handleNoteEdit}>\n            <div className='field'>\n              <label htmlFor='note-name-input'>\n                Name\n              </label>\n              <input type='text' id='note_name' name='note_name' value={note_name} onChange={e => this.verifyNameLength(e.target.value)}/>\n              <ValidationError hasError={!this.state.nameVaild} message={this.state.validationMessage.name}/>\n            </div>\n            <div className='field'>\n              <label htmlFor='note-content-input'>\n                Content\n              </label>\n              <textarea id='content' name='content'/>\n            </div>\n            <div className='field'>\n              <label htmlFor='note-folder-select'>\n                Folder\n              </label>\n              <select id='selectedFolder' name='selectedFolder'>\n                <option value={null}>...</option>\n                {folders.map(folder =>\n                  <option key={folder.id} value={folder.id}>\n                    {folder.name}\n                  </option>\n                )}\n              </select>\n            </div>\n            <div className='buttons'>\n              <button type='submit' disabled={!this.state.formValid} >\n                Edit note\n              </button>\n            </div>\n          </NotefulForm>\n        </NotefulError>\n      </section>\n    )\n  }\n}\n\nEditNote.propTypes = {\n  EditNote: PropTypes.func.isRequired,\n  folders: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired\n  })) \n}\n   \nexport default EditNote;"]},"metadata":{},"sourceType":"module"}