{"ast":null,"code":"var _jsxFileName = \"/Users/rachelemilyperez/projects/noteful-app/noteful-app-client/src/App/App.js\";\nimport React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport NoteListNav from '../NoteListNav/NoteListNav';\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport NoteListMain from '../NoteListMain/NoteListMain';\nimport NotePageMain from '../NotePageMain/NotePageMain';\nimport AddFolder from '../AddFolder/AddFolder';\nimport AddNote from '../AddNote/AddNote';\nimport EditNote from '../EditNote/EditNote';\nimport EditFolder from '../EditFolder/EditFolder';\nimport ApiContext from '../ApiContext';\nimport config from '../config';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      folders: []\n    };\n    this.foldersRes = [{\n      id: 1,\n      name: 'Important'\n    }, {\n      id: 2,\n      name: 'Super'\n    }, {\n      id: 3,\n      name: 'Spangley'\n    }, {\n      id: 4,\n      name: 'g'\n    }, {\n      id: 5,\n      name: 'g'\n    }];\n    this.notesRes = [{\n      id: 1,\n      note_name: 'Dogs',\n      folder: 1\n    }, {\n      id: 2,\n      note_name: 'Cats',\n      folder: 2\n    }, {\n      id: 3,\n      note_name: 'Pigs',\n      folder: 2\n    }, {\n      id: 4,\n      note_name: 'Birds',\n      folder: 1\n    }, {\n      id: 5,\n      note_name: 'Bears',\n      folder: 1\n    }, {\n      id: 6,\n      note_name: 'Horses',\n      folder: 2\n    }, {\n      id: 7,\n      note_name: 'Tigers',\n      folder: 3\n    }, {\n      id: 8,\n      note_name: 'Wolves',\n      folder: 3\n    }, {\n      id: 9,\n      note_name: 'Elephants',\n      folder: 2\n    }, {\n      id: 10,\n      note_name: 'Lions',\n      folder: 1\n    }, {\n      id: 11,\n      note_name: 'Monkeys',\n      folder: 3\n    }];\n\n    this.addFolderContent = () => {\n      this.state.folders = this.notesRes.reduce((foldersRes, note) => {\n        const index = this.foldersRes.findIndex(f => f.id === note.folderId);\n        if (!foldersRes[index].notes) foldersRes[index].notes = [];\n        foldersRes[index].notes.push({\n          id: note.id,\n          name: note.name\n        });\n        return foldersRes;\n      }, this.foldersRes); //   console.log(JSON.stringify(state, null, 3))\n    };\n\n    this.addNewFolder = folder => {\n      this.setState({\n        folders: [...this.state.folders, folder]\n      });\n    };\n\n    this.addNewNote = note => {\n      this.setState({\n        notes: [...this.state.notes, note]\n      });\n    };\n\n    this.editNote = editedNote => {\n      const newNotes = this.state.notes.map(note => note.id === editedNote.id ? editedNote : note);\n      this.setState({\n        notes: newNotes\n      });\n    };\n\n    this.handleDeleteNote = noteId => {\n      this.setState({\n        notes: this.state.notes.filter(note => note.id !== noteId)\n      });\n      this.props.history.push(\"/\");\n    };\n\n    this.handleDeleteFolder = folderId => {\n      this.setState({\n        folders: this.state.folders.filter(folder => folder.id !== folderId)\n      });\n    };\n  }\n\n  componentDidMount() {\n    Promise.all([fetch(\"\".concat(config.API_ENDPOINT, \"/api/notes\")), fetch(\"\".concat(config.API_ENDPOINT, \"/api/folders\"))]).then(([notesRes, foldersRes]) => {\n      if (!notesRes.ok) return notesRes.json().then(e => Promise.reject(e));\n      if (!foldersRes.ok) return foldersRes.json().then(e => Promise.reject(e));\n      return Promise.all([notesRes.json(), foldersRes.json()]);\n    }).then(([notes, folders]) => {\n      console.log(notes, folders);\n      this.setState({\n        notes,\n        folders\n      });\n    }).catch(error => {\n      console.error({\n        error\n      });\n    });\n  }\n\n  renderNavRoutes() {\n    return React.createElement(React.Fragment, null, ['/', '/folder/:folderId'].map(path => React.createElement(Route, {\n      exact: true,\n      key: path,\n      path: path,\n      component: NoteListNav,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/note/:noteId\",\n      component: NotePageNav,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/add-folder\",\n      component: NotePageNav,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/add-note\",\n      component: NotePageNav,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }));\n  }\n\n  renderMainRoutes() {\n    return React.createElement(React.Fragment, null, ['/', '/folder/:folderId'].map(path => React.createElement(Route, {\n      exact: true,\n      key: path,\n      path: path,\n      component: NoteListMain,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/note/:noteId\",\n      component: NotePageMain,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/add-folder\",\n      render: history => React.createElement(AddFolder, {\n        addNewFolder: this.addNewFolder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/add-note\",\n      render: history => React.createElement(AddNote, {\n        addNewNote: this.addNewNote,\n        folders: this.state.folders,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/edit/:noteId\",\n      render: history => React.createElement(EditNote, {\n        editNote: this.EditNote,\n        folders: this.state.folders,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/edit/:folderId\",\n      render: history => React.createElement(EditFolder, {\n        editFolder: this.EditFolder,\n        folders: this.state.folders,\n        notes: this.state.notes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }));\n  }\n\n  render() {\n    const value = {\n      notes: this.state.notes,\n      folders: this.state.folders,\n      deleteNote: this.handleDeleteNote,\n      deleteFolder: this.handleDeleteFolder\n    };\n    return React.createElement(ApiContext.Provider, {\n      value: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      className: \"App__nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, this.renderNavRoutes()), React.createElement(\"header\", {\n      className: \"App__header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Noteful\"), ' ')), React.createElement(\"main\", {\n      className: \"App__main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, this.renderMainRoutes())));\n  }\n\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/rachelemilyperez/projects/noteful-app/noteful-app-client/src/App/App.js"],"names":["React","Component","Route","Link","withRouter","NoteListNav","NotePageNav","NoteListMain","NotePageMain","AddFolder","AddNote","EditNote","EditFolder","ApiContext","config","App","state","folders","foldersRes","id","name","notesRes","note_name","folder","addFolderContent","reduce","note","index","findIndex","f","folderId","notes","push","addNewFolder","setState","addNewNote","editNote","editedNote","newNotes","map","handleDeleteNote","noteId","filter","props","history","handleDeleteFolder","componentDidMount","Promise","all","fetch","API_ENDPOINT","then","ok","json","e","reject","console","log","catch","error","renderNavRoutes","path","renderMainRoutes","render","value","deleteNote","deleteFolder"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Route, Link} from 'react-router-dom';\nimport {withRouter} from 'react-router-dom';\nimport NoteListNav from '../NoteListNav/NoteListNav';\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport NoteListMain from '../NoteListMain/NoteListMain';\nimport NotePageMain from '../NotePageMain/NotePageMain';\nimport AddFolder from '../AddFolder/AddFolder';\nimport AddNote from '../AddNote/AddNote';\nimport EditNote from '../EditNote/EditNote';\nimport EditFolder from'../EditFolder/EditFolder';\nimport ApiContext from '../ApiContext';\nimport config from '../config';\nimport './App.css'\n\nclass App extends Component {\n\n    state = {\n        folders: [],\n      }\n        \n    foldersRes = [\n        { id: 1, name: 'Important' },\n        { id: 2, name: 'Super' },\n        { id: 3, name: 'Spangley' },\n        { id: 4, name: 'g' },\n        { id: 5, name: 'g' },\n      ]\n      \n     notesRes = [\n        { id: 1, note_name: 'Dogs', folder: 1 },\n        { id: 2, note_name: 'Cats', folder: 2 },\n        { id: 3, note_name: 'Pigs', folder: 2 },\n        { id: 4, note_name: 'Birds', folder: 1 },\n        { id: 5, note_name: 'Bears', folder: 1 },\n        { id: 6, note_name: 'Horses', folder: 2 },\n        { id: 7, note_name: 'Tigers', folder: 3 },\n        { id: 8, note_name: 'Wolves', folder: 3 },\n        { id: 9, note_name: 'Elephants', folder: 2 },\n        { id: 10, note_name: 'Lions', folder: 1 },\n        { id: 11, note_name: 'Monkeys', folder: 3 },\n      ]\n\n      addFolderContent = () => {\n      \n      this.state.folders = this.notesRes.reduce((foldersRes, note) => {\n        const index = this.foldersRes.findIndex(f => f.id === note.folderId) \n        if (!foldersRes[index].notes) \n          foldersRes[index].notes = []\n        foldersRes[index].notes.push({ \n          id: note.id, \n          name: note.name \n        })\n        return foldersRes\n      }, this.foldersRes)\n\n    //   console.log(JSON.stringify(state, null, 3))\n    }\n\n    addNewFolder = folder => {\n        this.setState({ \n            folders: [ ...this.state.folders, folder \n        ]})\n    }\n\n    addNewNote = (note) => {\n        this.setState({ \n            notes: [ ...this.state.notes, note\n        ]});\n    };\n\n    editNote= editedNote => {\n        const newNotes = this.state.notes.map(note =>\n            (note.id === editedNote.id)\n            ? editedNote\n            : note\n            )\n        this.setState({\n            notes: newNotes\n        })\n    }\n \n    componentDidMount() {\n        Promise.all([\n            fetch(`${config.API_ENDPOINT}/api/notes`),\n            fetch(`${config.API_ENDPOINT}/api/folders`)\n        ])\n            .then(([notesRes, foldersRes]) => {\n               \n                if (!notesRes.ok)\n                    return notesRes.json().then(e => Promise.reject(e));\n                if (!foldersRes.ok)\n                    return foldersRes.json().then(e => Promise.reject(e));\n                    \n                    return Promise.all([notesRes.json(), foldersRes.json()]);\n            })\n            .then(([notes, folders]) => {\n                console.log(notes, folders)\n                this.setState({notes, folders});\n            })\n            .catch(error => {\n                console.error({error});\n            });\n    };\n\n    handleDeleteNote = noteId => {\n        this.setState({\n            notes: this.state.notes.filter(note => note.id !== noteId)\n        });\n        this.props.history.push(`/`)\n    };\n\n    handleDeleteFolder = folderId => {\n        this.setState({\n            folders: this.state.folders.filter(folder => folder.id !== folderId)\n        });\n    };\n\n    renderNavRoutes() {\n        return (\n            <>\n                {['/', '/folder/:folderId'].map(path => (\n                    <Route\n                        exact\n                        key={path}\n                        path={path}\n                        component={NoteListNav}\n                    />\n                ))}\n                <Route path=\"/note/:noteId\" component={NotePageNav} />\n                <Route path=\"/add-folder\" component={NotePageNav} />\n                <Route path=\"/add-note\" component={NotePageNav} />\n            </>\n        );\n    }\n\n    renderMainRoutes() {\n        return (\n            <>\n                {['/', '/folder/:folderId'].map(path => (\n                    <Route\n                        exact\n                        key={path}\n                        path={path}\n                        component={NoteListMain}\n                    />\n                ))}\n                <Route \n                    path=\"/note/:noteId\" \n                    component={NotePageMain} \n                />\n\n                <Route path='/add-folder' \n                    render={(history) =>\n                <AddFolder\n                    addNewFolder={this.addNewFolder}\n                />}\n                />\n               <Route path='/add-note'\n                render={(history) =>\n                    <AddNote\n                        addNewNote = {this.addNewNote}\n                        folders ={this.state.folders} \n                    /> }\n                />\n                <Route path='/edit/:noteId'\n                    render={(history) =>\n                    <EditNote\n                        editNote = {this.EditNote}\n                        folders ={this.state.folders} \n                    /> }\n                />\n\n                <Route path='/edit/:folderId'\n                    render={(history) =>\n                    <EditFolder\n                        editFolder = {this.EditFolder}\n                        folders = {this.state.folders} \n                        notes = {this.state.notes}\n                    /> }\n            />          \n            </>\n        );\n    }\n\n    render() {\n            const value = {\n            notes: this.state.notes,\n            folders: this.state.folders,\n            deleteNote: this.handleDeleteNote,\n            deleteFolder: this.handleDeleteFolder\n            };\n        \n        return (\n            <ApiContext.Provider value={value}>\n                <div className=\"App\">\n                    <nav className=\"App__nav\">{this.renderNavRoutes()}</nav>\n                    <header className=\"App__header\">\n                        <h1>\n                            <Link to=\"/\">Noteful</Link>{' '}\n                        </h1>\n                    </header>\n                    <main className=\"App__main\">{this.renderMainRoutes()}</main>\n                </div>\n            </ApiContext.Provider>\n        );\n    }\n}\n\nexport default withRouter(App)\n"]},"metadata":{},"sourceType":"module"}