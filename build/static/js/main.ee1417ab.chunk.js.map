{"version":3,"sources":["AddButton/AddButton.js","ApiContext.js","config.js","NoteListNav/NoteListNav.js","NotefulError.js","NotePageNav/NotePageNav.js","Note/Note.js","NoteListMain/NoteListMain.js","NotePageMain/NotePageMain.js","NotefulForm/NotefulForm.js","AddFolder/AddFolder.js","AddNote/ValidationError.js","AddNote/AddNote.js","EditNote/EditNote.js","EditFolder/EditFolder.js","App/App.js","index.js"],"names":["NavAddButton","props","tag","className","childrenm","otherProps","Object","objectWithoutProperties","React","createElement","objectSpread","join","children","defaultProps","ApiContext","createContext","render","console","log","this","folders","addFolder","addNote","deleteNote","updateNote","updateFolder","deleteFolder","config","API_ENDPOINT","NoteListNav","state","noteLength","handleClickDelete","folderId","e","preventDefault","fetch","concat","method","then","res","ok","json","Promise","reject","_this","context","catch","error","countNotes","length","forEach","folder","notes","_this2","_this$context$folders","react_default","a","map","key","id","react_router_dom","to","name","type","onClick","bind","Link","Component","contextType","NotefulError","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","hasError","NotePageNav","findFolder","arguments","undefined","find","findNote","noteId","note","Number","match","params","NotefulError_NotefulError","role","history","goBack","Note","_this$props","content","modified","format","replace","NoteListMain","getNotes","newNotes","push","getNotesForFolder","filter","Note_Note_Note","date","NotePageMain","n","getNote","NotefulForm","assign","action","AddFolder","handleFolderSubmit","target","value","url","options","headers","content-type","body","JSON","stringify","setState","Error","data","err","message","NotefulForm_NotefulForm","onSubmit","htmlFor","withRouter","ValidationError","Fragment","AddNote","handleNoteSubmit","_e$target","selectedFolder","Date","nameValid","formValid","validationMessage","validateName","fieldValue","fieldErrors","trim","_this3","onChange","verifyNameLength","nameVaild","disabled","EditNote","handleNameChange","handleContentChange","handleFolderChange","handleSubmit","noteName","noteContent","_this$state","newNote","_this$state2","defaultValue","EditFolder","folderName","newFolder","App","toConsumableArray","mergeFoldersAndNotes","index","findIndex","f","copy","handleDeleteNote","newFolders","handleDeleteFolder","updatedFolder","editedNote","folderIndex","noteIndex","slice","all","_ref","_ref2","slicedToArray","notesRes","foldersRes","_ref3","_ref4","path","react_router","exact","component","src_ApiContext","Provider","renderNavRoutes","renderMainRoutes","ReactDOM","src_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.ee1417ab.chunk.js","sourcesContent":["import React from 'react'\nimport './AddButton.css'\n\nexport default function NavAddButton(props) {\n  const { tag, className, childrenm, ...otherProps } = props\n\n  return React.createElement(\n    props.tag,\n    {\n      className: ['NavAddButton', props.className].join(' '),\n      ...otherProps\n    },\n    props.children\n  )\n}\n\nNavAddButton.defaultProps ={\n  tag: 'a',\n}\n","import React from 'react'\n\nconst ApiContext =  React.createContext({\n\n  render() {\n    console.log('context', this)\n    const contextValue = {\n    folders: this.folders,\n    addFolder: this.addFolder,\n    addNote: this.addNote,\n    deleteNote: this.deleteNote,\n    updateNote: this.updateNote,\n    updateFolder:this.updateFolder,\n    deleteFolder: this.deleteFolder,\n    }\n  }\n\n})\n\nexport default ApiContext","export default {\n    API_ENDPOINT: 'https://rocky-gorge-29682.herokuapp.com'\n\n  }","import React from 'react'\nimport { NavLink, Link } from 'react-router-dom'\nimport AddButton from '../AddButton/AddButton'\nimport ApiContext from '../ApiContext'\nimport './NoteListNav.css'\nimport PropTypes from 'prop-types'\nimport config from '../config';\n\nexport default class NoteListNav extends React.Component {\n  static defaultProps = {\n    folders: []\n  }\n  static contextType = ApiContext;\n\n  state = {\n    noteLength: null\n  }\n\n  handleClickDelete = (folderId, e) => {\n    e.preventDefault()\n\n    fetch(`${config.API_ENDPOINT}/api/folders/${folderId}`, {\n      method: 'DELETE'\n    })\n    .then(res => {\n      if (!res.ok)\n        return res.json().then(e => Promise.reject(e))\n      return res\n    })\n    .then(() => {\n      this.context.deleteFolder(folderId)\n    })\n    .catch(error => {\n      console.error({ error })\n    })\n  }\n\n  countNotes = (folders) => {\n    if (!folders.length) return folders\n     folders.forEach(folder => {\n       folder.notes = folder.notes || []\n       if (folder.notes.length) {\n          let length = folder.notes.length\n          return length\n       }\n    })\n  }\n\n  render() {\n    const { folders={}} = this.context\n    this.countNotes(folders)\n    \n    return (\n      <div className='NoteListNav'>\n        <ul className='NoteListNav__list'>\n          {(folders.map(folder =>\n            <li key={folder.id}>\n            <NavLink\n                className='NoteListNav__folder-link'\n                to={`/folder/${folder.id}`}>\n                <span className='NoteListNav__num-notes'>\n                {this.countNotes(folders)}\n                {folder.notes.length}\n                </span>\n                {folder.name}\n                <span className=\"Content\">\n              </span>      \n              <div className='buttons'>\n                <button\n            className='Folder_delete'\n            type='button'\n            onClick={this.handleClickDelete.bind(null, folder.id)}\n          >\n          remove\n          </button>\n          <div className='editFolder'>\n          <Link to=\n          {`/folders/${folder.id}/edit`}>\n          edit\n          </Link>\n          </div>\n          </div>\n          </NavLink>\n            </li>\n          ))}\n        </ul>\n        <div className='NoteListNav__button-wrapper'>\n          <AddButton\n            tag={Link}\n            to='/add-folder'\n            type='button'\n            className='NoteListNav__add-folder-button'\n          >\n           Add Folder\n            <br />\n          </AddButton>\n        </div>\n      </div>\n    )\n  }\n}\n\nNoteListNav.propTypes = {\n  folder: PropTypes.objectOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  })) \n};\n","import React, {Component} from 'react';\n\nexport default class NotefulError extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        };\n    }\n\n    static getDerivedStateFromError(error) {\n        return { hasError: true };\n      }\n    render() {\n      if (this.state.hasError) {      \n        return (\n          <h2>There was an error.</h2>\n        );\n      }\n      return this.props.children;\n    }\n}\n","import React from 'react';\nimport AddButton from '../AddButton/AddButton';\nimport ApiContext from '../ApiContext';\nimport NotefulError from '../NotefulError';\nimport './NotePageNav.css';\n\nexport default class NotePageNav extends React.Component {\n  static defaultProps = {\n    history: {\n      goBack: () => { }\n    },\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext;\n\n findFolder = (folders=[], folderId) =>\n  folders.find(folder => folder.id === folderId)\n\n  findNote = (notes=[], noteId) => \n  notes.find(note => note.id === Number(noteId))\n\n  render() {\n    const notes = []\n    const { noteId } = this.props.match.params\n    const note = this.findNote(notes, noteId) || {}\n    const folder = this.findFolder(this.context.folders, note.folder)\n   \n    return (\n      <div className='NotePageNav'>\n      <NotefulError>\n        <AddButton\n          tag='button'\n          role='link'\n          onClick={() => this.props.history.goBack()}\n          className='NotePageNav__back-button'\n        >\n          <br />\n          Back\n        </AddButton>\n        {folder && (\n          <h3 className='NotePageNav__folder-name'>\n            {folder.name}\n          </h3>\n        )}\n        </NotefulError>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport ApiContext from '../ApiContext';\nimport config from '../config';\nimport PropTypes from 'prop-types';\nimport './Note.css'\n\nexport default class Note extends React.Component {\n  static defaultProps = {\n    folders: [],\n    notes: []\n  }\n\n  static propTypes = {\n    match: PropTypes.shape({\n      params: PropTypes.object,\n    }),\n    history: PropTypes.shape({\n      push: PropTypes.func,\n    }).isRequired,\n  };\n\n  static contextType = ApiContext;\n\n  handleClickDelete = (noteId, e) => {\n    e.preventDefault()\n  \n    fetch(`${config.API_ENDPOINT}/api/notes/${noteId}`, {\n      method: 'DELETE'\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n        // return res\n      })\n      .then(() => {\n        this.context.deleteNote(noteId)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  render() {\n    const { name, id, content, modified } = this.props\n\n    return (\n      <div className='Note'>\n        <h2 className='Note__title'>\n          <Link to={`/note/${id}`}>\n            {name}\n          </Link>\n        </h2>\n        <div className=\"folderButtons\">\n        <button\n          className='Note__delete'\n          type='button'\n          onClick={this.handleClickDelete.bind(null, id)}\n        >\n          {' '}\n          remove\n        </button>\n        <div className='editNote'>\n           <Link to=\n           {`/notes/${id}/edit`}>\n             edit\n           </Link>\n        </div>\n        </div>\n        <div className='Note__dates'>\n          <div className='Note__dates-modified'>\n            modified:\n            {' '}\n            <span className='Date'>\n              {format(modified, 'YYYY MMM Do')}\n            </span>\n          </div>\n        </div>\n          <div className='NotePageMain__content'>\n          </div> \n          <p>{(content || '').replace(/\\n\\n/g, '</p> <p>').replace(/\\n/g, '<br />')}</p>\n      </div>\n      \n    )\n  }\n}\n\nNote.propTypes = {\n  note: PropTypes.objectOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    modified: PropTypes.number.isRequired,\n  })) \n};\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Note from '../Note/Note';\nimport AddButton from '../AddButton/AddButton';\nimport ApiContext from '../ApiContext';\nimport NotefulError from '../NotefulError';\nimport './NoteListMain.css';\n\nexport default class NoteListMain extends React.Component {\n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext\n\ngetNotes = (folders = []) => {\n  let newNotes = []\n  if (!folders.length) return folders\n    folders.forEach(folder => {\n      folder.notes = folder.notes || []\n      if (folder.notes.length) {\n        folder.notes.forEach(note =>\n        { note.folder = folder.id\n          newNotes.push(note)  \n        }\n        )}   \n    } \n    )\n    return newNotes\n}\n\ngetNotesForFolder = (folders = [], folderId) => {\n  return (!folderId)\n    ? this.getNotes(folders)\n    : this.getNotes(folders).filter(note => note.folder === +folderId)\n}\n\n  render() {\n    const { folders=[] } = this.context\n    const notes =  this.getNotesForFolder(folders, this.props.match.params.folderId) || []\n\n    return (\n      <section className='NoteListMain'>\n        <NotefulError>\n        <ul> \n          {notes.map(note => \n            <li key={note.id}>\n              <Note\n                id={note.id}\n                name={note.name}\n                content={note.content}\n                modified={note.date}\n              />\n            </li>\n          )}\n        </ul>\n        <div className='NoteListMain__button-container'>\n          <AddButton\n            tag={Link}\n            to='/add-note'\n            type='button'\n            className='NoteListMain__add-note-button'\n          >\n          Add Note\n            <br />\n          </AddButton>      \n        </div>\n        </NotefulError>\n      </section>\n    )\n  }\n}\n","import React from 'react';\nimport Note from '../Note/Note';\nimport ApiContext from '../ApiContext';\nimport NotefulError from '../NotefulError';\nimport './NotePageMain.css';\n\nexport default class NotePageMain extends React.Component {\n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext\n\n  render() {\n    const { folders=[] } = this.context\n    const  noteId  = this.props.match.params.noteId\n\n    function getNote(id) {\n      id = Number(id)\n      let n\n      folders.find(folder => \n        folder.notes.find(note => {\n          if (note.id === id) n = note\n          return n\n        })\n      )\n      return n\n    }\n    const note =  getNote(noteId) || {}\n \n    return (\n      <section className='NotePageMain'>\n        <NotefulError>\n        <Note\n          id={note.id}\n          name={note.name}\n          content={note.content}\n          modified={note.date}\n        />\n        </NotefulError>\n      </section>\n    )\n  }\n}","import React from 'react';\nimport './NotefulForm.css';\nimport PropTypes from 'prop-types';\n\nexport default function NotefulForm(props) {\n  const { className, ...otherProps } = props\n  return (\n    <form\n      className={['Noteful-form', className].join(' ')}\n      action='#'\n      {...otherProps}\n    />\n  )\n}\n\nNotefulForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};","import React, { Component } from 'react';\nimport NotefulForm from '../NotefulForm/NotefulForm';\nimport NotefulError from '../NotefulError';\nimport PropTypes from 'prop-types';\nimport './AddFolder.css';\nimport { withRouter } from 'react-router-dom';\nimport ApiContext from '../ApiContext';\nimport config from '../config';\n\nclass AddFolder extends Component {\n\n  state = {\n    error: null,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: ''\n    }\n  }\n\n  static contextType = ApiContext;\n\n  handleFolderSubmit = e => {\n    e.preventDefault()\n    const {name} = e.target\n    const folder = {\n      name: name.value\n    }\n    const url = `${config.API_ENDPOINT}/api/folders`\n    \n    const options = {\n    method: 'POST',\n    headers: {\n        'content-type': 'application/json'\n    },\n    body: JSON.stringify(folder),\n    }\n    this.setState({ error: null })\n    fetch(url, options)\n      .then(res => {\n        if(!res.ok) {\n          throw new Error('Something went wrong, please try again later');\n        }\n        return res.json();\n      })\n      .then((data) => {\n        this.context.addFolder(data)\n        this.props.history.push('/')\n      })\n      .catch(err => {\n        this.setState({\n          error: err.message\n        });\n      })\n  }\n\n  render() {\n    return (\n      <section className='AddFolder'>\n        <NotefulError>\n        <h2>Create a folder</h2>\n        <NotefulForm onSubmit={this.handleFolderSubmit}>\n          <div className='field'>\n            <label htmlFor='name-input'>\n              Name\n            </label>\n            <input type='text' id='name'/>\n          </div>\n          <div className='buttons'>\n            <button type='submit' className=\"addFolderButton\">\n              Add folder\n            </button>\n          </div>\n        </NotefulForm>\n        </NotefulError>\n      </section>\n    )\n  }\n}\n\nAddFolder.propTypes = {\n  addFolder: PropTypes.func.isRequired,\n  folders: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired\n  })) \n};\n\nexport default withRouter(AddFolder);","import React from 'react';\n\nexport default function ValidationError(props) {\n  if(props.hasError) {\n    return (\n      <div className=\"error\">{props.message}</div>\n    );\n  }\n\n  return <></>\n}","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport NotefulForm from '../NotefulForm/NotefulForm';\nimport ValidationError from './ValidationError';\nimport PropTypes from 'prop-types';\nimport ApiContext from '../ApiContext';\nimport NotefulError from '../NotefulError';\nimport './AddNote.css';\nimport config from '../config';\n\nclass AddNote extends Component {\n\n  state = {\n    error: null,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      nameValid: false,\n      formValid: false,\n      validationMessage: {\n        name: ''\n      }\n    }\n  }\n\n  static contextType = ApiContext;\n\n  verifyNameLength(name) {\n    this.setState({name}, () => {this.validateName(name)});\n  }\n\n  handleNoteSubmit = e => {\n    e.preventDefault();\n    const { name, selectedFolder, content } = e.target;\n    const note = {\n      name: name.value,\n      folder: selectedFolder.value,\n      content: content.value,\n      date: new Date()\n    }\n\n    const options = {           \n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    }\n    this.setState({ error: null })\n    fetch(`${config.API_ENDPOINT}/api/notes`, options)\n      .then(res => {\n        if(!res.ok) {\n          throw new Error('Something went wrong, please try again later');\n        }\n        return res.json()\n      })\n      .then((data) => {\n      let folders = this.context.folders\n      this.context.addNote(folders, data)\n        this.props.history.push('/')\n      })\n      .catch(err => {\n        this.setState({\n          error: err.message\n        });\n      });\n  }\n\n  validateName(fieldValue) {\n    const fieldErrors = {...this.state.validationMessage};\n    let hasError = false;\n    fieldValue = fieldValue.trim();\n    if(fieldValue.length === 0) {\n      fieldErrors.name = 'A note name is required.';\n      hasError = true;\n    } else {\n      fieldErrors.name = '';\n      hasError = false;\n    }\n    this.setState({\n      validationMessage: fieldErrors,\n      nameValid: !hasError\n    }, this.formValid );\n  }\nformValid() {\n  this.setState({\n      formValid: this.state.nameValid\n  });\n}\n\n  render() {\n    const folders = this.context.folders\n    return (\n      <section className='AddNote'>\n        <NotefulError>\n          <h2>Create a note</h2>\n          <NotefulForm onSubmit={this.handleNoteSubmit}>\n            <div className='field'>\n              <label htmlFor='note-name-input'>\n                Name\n              </label>\n              <input type='text' id='name' name='name' onChange={e => this.verifyNameLength(e.target.value)}/>\n              <ValidationError hasError={!this.state.nameVaild} message={this.state.validationMessage.name}/>\n            </div>\n            <div className='field'>\n              <label htmlFor='note-content-input'>\n                Content\n              </label>\n              <textarea type='text' id='content' name='content'/>\n            </div>\n            <div className='field'>\n              <label htmlFor='note-folder-select'>\n                Folder\n              </label>\n              <select id='selectedFolder' name='selectedFolder'>\n                <option value={null}>...</option>\n                {folders.map(folder =>\n                  <option key={folder.id} value={folder.id}>\n                    {folder.name}\n                  </option>\n                )}\n              </select>\n            </div>\n            <div className='buttons'>\n              <button type='submit' className='addNoteButton' disabled={!this.state.formValid} >\n                Add note\n              </button>\n            </div>\n          </NotefulForm>\n        </NotefulError>\n      </section>\n    )\n  }\n}\n\nAddNote.propTypes = {\n\n  note: PropTypes.objectOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    content: PropTypes.string.isRequired,\n    modified: PropTypes.string.isRequired,\n  })) \n};\n\n\nexport default withRouter(AddNote);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './EditNote.css';\nimport ApiContext from '../ApiContext';\nimport config from '../config';\n \nexport default class EditNote extends Component {\n    \n    static propTypes = {\n        match: PropTypes.shape({\n          params: PropTypes.object,\n        }),\n        history: PropTypes.shape({\n          push: PropTypes.func,\n        }).isRequired,\n      };\n\n    static contextType = ApiContext\n\n   state = {\n       error: null,\n       id: \"\",\n       name: \"\",\n       content: \"\",\n       folder: \"\"\n    }\n \n   static contextType = ApiContext\n \n   componentDidMount() {\n \n    const noteId  = this.props.match.params.noteId\n\n   fetch(`${config.API_ENDPOINT}/api/notes/${noteId}`, { method: 'GET'})\n       .then(res => {\n       if(!res.ok) {\n           throw new Error('Something went wrong, please try again later');\n       }\n       return res.json();\n       }) \n    .then(data => {\n        this.setState({\n            id: data.id,\n            name: data.name,\n            content: data.content,\n            folder: data.folder\n        })\n       })\n   .catch(err => {\n       this.setState({\n           error: err.message\n           });\n        })\n    }\n \n   handleNameChange = e => {\n       this.setState({ name: e.target.value })\n    };\n \n   handleContentChange = e => {\n       this.setState({ content: e.target.value })\n   };\n \n   handleFolderChange = e => {\n       this.setState({ folder: e.target.value })\n     };\n\n   handleSubmit = e => {\n       e.preventDefault()\n       const noteName = e.target.name.value\n       const noteContent = e.target.content.value\n     \n       this.setState ({\n          name: noteName,\n          content: noteContent,\n       })\n       const noteId = this.props.match.params.noteId\n       const { id, name, content, folder } = this.state\n       const newNote = { id, name, content, folder }\n       \n       const url = `${config.API_ENDPOINT}/api/notes/${noteId}`\n       const options = {\n           method: 'PATCH',\n            headers: {\n               'content-type': 'application/json'\n           },\n           body: JSON.stringify(newNote)\n       }\n       fetch(url, options)\n       .then(res => {\n       if(!res.ok) {\n           throw new Error('Something went wrong, please try again later');\n       }\n       }) \n       .then(() => {\n           this.context.updateNote(newNote)\n           this.props.history.push('/')\n       })\n        .catch(err => {\n            this.setState({\n                error: err.message\n            });\n       })\n}\n\nrender() {\n   const { name, content, folder  } = this.state\n   const folders = this.context.folders\n   return (\n     <section className='EditNote'>\n       <h2>Edit Note</h2>\n       <form onSubmit={this.handleSubmit}>\n           <div className='field'>\n               <label htmlFor='name-input'>\n               Name:\n               </label>\n               <input\n                   type='text'\n                   id='name'\n                   name='name'\n                   defaultValue={name}\n                   onChange={this.handleNameChange}\n               />\n           </div>\n           <div className='field'>\n             <label htmlFor='note-content-input'>\n               Content\n             </label>\n             <textarea\n             type='text'\n             id='content'\n             name='content'\n             defaultValue={content}\n             onChange={this.handleContentChange}/>\n           </div>\n           <div className='field'>\n             <label htmlFor='note-folder-select'>\n               Folder\n             </label>\n             <select id='selectedFolder' name='selectedFolder' defaultValue={folder} onChange={this.handleFolderChange} >\n               <option value={null}>...</option>\n               {folders.map(folder =>\n                 <option key={folder.id} value={folder.id}>\n                   {folder.name}\n                 </option>\n               )}\n             </select>\n           </div>\n           <div className='buttons'>\n               <button className='editButton' type='submit'>\n               Edit note\n               </button>\n           </div>\n       </form>\n     </section>\n   )\n }\n}\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './EditFolder.css';\nimport ApiContext from '../ApiContext';\nimport config from '../config';\n\nexport default class EditFolder extends Component {\n\n    static propTypes = {\n        match: PropTypes.shape({\n          params: PropTypes.object,\n        }),\n        history: PropTypes.shape({\n          push: PropTypes.func,\n        }).isRequired,\n      };\n\n    state = {\n        error: null,\n        id: \"\",\n        name: \"\"\n    };\n\n    static contextType = ApiContext\n     \n    componentDidMount() {\n\n    const folderId = this.props.match.params.folderId\n   \n    fetch(`${config.API_ENDPOINT}/api/folders/${folderId}`, { method: 'GET'})\n        .then(res => {\n        if(!res.ok) {\n            throw new Error('Something went wrong, please try again later');\n        }\n        return res.json();\n        })  \n    .then(data => {\n         this.setState({\n            id: data.id,\n            name: data.name\n         })\n        })\n    .catch(err => {\n        this.setState({\n            error: err.message\n            });\n        })\n    }\n\n    handleNameChange = e => {\n        this.setState({ name: e.target.value })\n    };\n\n    handleSubmit = e => {\n        e.preventDefault()\n        const folderName = e.target.name.value\n       \n        this.setState ({\n           name: folderName\n        })\n\n        const  folderId  = this.props.match.params.folderId\n        const  {id, name }  = this.state\n        const newFolder =  {id, name}\n        const url = `${config.API_ENDPOINT}/api/folders/${folderId}`\n        const options = {\n            method: 'PATCH',\n             headers: {\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify(newFolder)\n        }\n        fetch(url, options)\n        .then(res => {\n        if(!res.ok) {\n            throw new Error('Something went wrong, please try again later');\n        }\n        })  \n        .then (() => {\n            this.context.updateFolder(newFolder)\n            this.props.history.push('/')\n        })\n        .catch(err => {\n            this.setState({\n                error: err.message\n            });\n        })\n}\n\nrender() {\n    const { name } = this.state\n    return (\n      <section className='EditFolder'>\n        <h2>Edit Folder</h2>\n        <form onSubmit={this.handleSubmit}> \n            <div className='field'>\n                <label htmlFor='name-input'>\n                Name:\n                </label>\n                <input \n                    type='text' \n                    id='name' \n                    name='name'\n                    defaultValue={name}\n                    onChange={this.handleNameChange}\n                    />\n            </div>\n            <div className='buttons'>\n                <button className='editButton' type='submit'>\n                Edit folder\n                </button>\n            </div>\n        </form>\n      </section>\n    )\n  }\n}","import React, {Component} from 'react';\nimport {Route, Link} from 'react-router-dom';\nimport {withRouter} from 'react-router-dom';\nimport NoteListNav from '../NoteListNav/NoteListNav';\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport NoteListMain from '../NoteListMain/NoteListMain';\nimport NotePageMain from '../NotePageMain/NotePageMain';\nimport AddFolder from '../AddFolder/AddFolder';\nimport AddNote from '../AddNote/AddNote';\nimport EditNote from '../EditNote/EditNote';\nimport EditFolder from '../EditFolder/EditFolder';\nimport ApiContext from '../ApiContext';\nimport config from '../config';\nimport './App.css'\n\nclass App extends Component {\n\n    state = {\n        folders: []\n    }\n\n    addFolder = folder => {\n        this.setState({ \n            folders: [ ...this.state.folders, folder \n        ]})\n    }\n\n    mergeFoldersAndNotes = (folders, notes) => {\n        notes.forEach((note) => {\n          const index = folders.findIndex(f => f.id === note.folder) \n          if (!folders[index].notes) {\n            folders[index].notes = []\n          }\n          folders[index].notes.push({ \n            id: note.id, \n            name: note.name,\n            content: note.content,\n            date: note.date\n          })\n          })\n        return folders\n    };\n \n    addNote = (folders, note) => {\n        let copy = [...folders]\n        const i = this.state.folders.findIndex(folder => {\n           return folder.id ===  +note.folder\n        })\n        copy[i].notes.push(note) \n        this.setState({\n            folders: copy\n        })\n    }\n     \n    handleDeleteNote = id => {\n        const newFolders = this.state.folders.map(folder => {\n          folder.notes = folder.notes.filter(note => note.id !== id)\n          return folder\n        })\n        this.setState({ folders: newFolders })\n      }\n\n    handleDeleteFolder = folderId => {\n        this.setState({\n            folders: this.state.folders.filter(folder => folder.id !== folderId)\n        });\n    };\n\n    componentDidMount() {\n        Promise.all([\n            fetch(`${config.API_ENDPOINT}/api/notes`),\n            fetch(`${config.API_ENDPOINT}/api/folders`)\n        ])\n            .then(([notesRes, foldersRes]) => {\n               \n                if (!notesRes.ok)\n                    return notesRes.json().then(e => Promise.reject(e));\n                if (!foldersRes.ok)\n                    return foldersRes.json().then(e => Promise.reject(e));\n                    \n                return Promise.all([notesRes.json(), foldersRes.json()]);\n            })\n            .then(([notes, folders]) => {\n               const data = this.mergeFoldersAndNotes(folders, notes)\n                this.setState({folders: data})\n            })\n            .catch(error => {\n                console.error({error});\n            });\n    };\n\n    updateFolder = updatedFolder => {\n        const newFolders = this.state.folders.map(folder =>\n          (folder.id === updatedFolder.id)\n            ? updatedFolder\n            : folder\n        )\n        this.setState({\n        folders: newFolders\n        })\n    };\n\n    updateNote = editedNote => {\n        const folderIndex = this.state.folders.findIndex(folder => folder.id === +editedNote.folder)\n        console.log(editedNote.folder)\n        const folder = this.state.folders[folderIndex]\n        const noteIndex = folder.notes.findIndex(n => n.id === editedNote.id)\n        let note = folder.notes[noteIndex]\n        let newNote = { ...note, ...editedNote }\n        folder.notes.push(newNote)\n        const newFolders = [\n            ...this.state.folders.slice(0, folderIndex),\n            folder,\n            ...this.state.folders.slice(folderIndex + 1)\n        ]\n        this.setState({\n           folders: newFolders\n        })\n    }\n\n    renderNavRoutes() {\n        return (\n            <>\n                {['/', '/folder/:folderId'].map(path => (\n                    <Route\n                        exact\n                        key={path}\n                        path={path}\n                        component={NoteListNav}\n                    />\n                ))}\n                <Route path=\"/note/:noteId\" component={NotePageNav}/>\n                <Route path=\"/add-folder\" component={NotePageNav}/>\n                <Route path=\"/add-note\" component={NotePageNav}/>\n            </>\n        );\n    }\n\n    renderMainRoutes() {\n        const notes  = this.state.folders.notes\n        return (\n\n            <>\n               {['/', '/folder/:folderId'].map(path => (\n                    <Route\n                        exact\n                        key={path}\n                        path={path}\n                        component={NoteListMain}\n                    />\n                ))} \n                <Route path='/note/:noteId'component={NotePageMain}/>\n                <Route path='/add-folder' component={AddFolder}/>\n                <Route path='/add-note'component={AddNote}/>\n                <Route path='/folders/:folderId/edit' component={EditFolder}/> \n                <Route path='/notes/:noteId/edit' component={EditNote}/> \n            </>\n            \n        );\n    }\n\n    render() {\n        const value = {\n        folders: this.state.folders,\n        notes: this.notes,\n        deleteNote: this.handleDeleteNote,\n        deleteFolder: this.handleDeleteFolder,\n        addNote: this.addNote,\n        addFolder: this.addFolder,\n        updateFolder: this.updateFolder,\n        updateNote: this.updateNote,\n        };   \n\n        return (\n            <ApiContext.Provider value={value}>\n                <div className=\"App\">\n                    <nav className=\"App__nav\">{this.renderNavRoutes()}</nav>\n                    <header className=\"App__header\">\n                        <h1>\n                            <Link to=\"/\">Noteful</Link>{' '}\n                        </h1>\n                    </header>\n                    <main className=\"App__main\">{this.renderMainRoutes()}</main>\n                </div>\n            </ApiContext.Provider>\n        );\n    }\n}\n\nexport default withRouter(App)\n","\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport './index.css'\nimport App from './App/App'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n)"],"sourceRoot":""}