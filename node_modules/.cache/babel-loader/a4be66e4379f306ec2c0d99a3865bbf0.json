{"ast":null,"code":"var _jsxFileName = \"/Users/rachelemilyperez/projects/notefulapp_client/src/EditFolder/EditFolder.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport config from '../config';\nimport './EditFolder.css';\n\nconst Required = () => React.createElement(\"span\", {\n  className: \"EditBookmark__required\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, \"*\");\n\nclass EditBookmark extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: null,\n      id: '',\n      title: '',\n      url: '',\n      description: '',\n      rating: 1\n    };\n\n    this.handleChangeTitle = e => {\n      this.setState({\n        title: e.target.value\n      });\n    };\n\n    this.handleChangeUrl = e => {\n      this.setState({\n        url: e.target.value\n      });\n    };\n\n    this.handleChangeDescription = e => {\n      this.setState({\n        description: e.target.value\n      });\n    };\n\n    this.handleChangeRating = e => {\n      this.setState({\n        rating: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const bookmarkId = this.props.match.params.bookmarkId;\n      const _this$state = this.state,\n            id = _this$state.id,\n            title = _this$state.title,\n            url = _this$state.url,\n            description = _this$state.description,\n            rating = _this$state.rating;\n      const newBookmark = {\n        id,\n        title,\n        url,\n        description,\n        rating\n      };\n      fetch(config.API_ENDPOINT + \"/\".concat(bookmarkId), {\n        method: 'PATCH',\n        body: JSON.stringify(newBookmark),\n        headers: {\n          'content-type': 'application/json',\n          'authorization': \"Bearer \".concat(config.API_KEY)\n        }\n      }).then(res => {\n        if (!res.ok) return res.json().then(error => Promise.reject(error));\n      }).then(() => {\n        this.resetFields(newBookmark);\n        this.context.updateBookmark(newBookmark);\n        this.props.history.push('/');\n      }).catch(error => {\n        console.error(error);\n        this.setState({\n          error\n        });\n      });\n    };\n\n    this.resetFields = newFields => {\n      this.setState({\n        id: newFields.id || '',\n        title: newFields.title || '',\n        url: newFields.url || '',\n        description: newFields.description || '',\n        rating: newFields.rating || ''\n      });\n    };\n\n    this.handleClickCancel = () => {\n      this.props.history.push('/');\n    };\n  }\n\n  componentDidMount() {\n    const bookmarkId = this.props.match.params.bookmarkId;\n    fetch(config.API_ENDPOINT + \"/\".concat(bookmarkId), {\n      method: 'GET',\n      headers: {\n        'authorization': \"Bearer \".concat(config.API_KEY)\n      }\n    }).then(res => {\n      if (!res.ok) return res.json().then(error => Promise.reject(error));\n      return res.json();\n    }).then(responseData => {\n      this.setState({\n        id: responseData.id,\n        title: responseData.title,\n        url: responseData.url,\n        description: responseData.description,\n        rating: responseData.rating\n      });\n    }).catch(error => {\n      console.error(error);\n      this.setState({\n        error\n      });\n    });\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          error = _this$state2.error,\n          title = _this$state2.title,\n          url = _this$state2.url,\n          description = _this$state2.description,\n          rating = _this$state2.rating;\n    return React.createElement(\"section\", {\n      className: \"EditBookmark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Edit bookmark\"), React.createElement(\"form\", {\n      className: \"EditBookmark__form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"EditBookmark__error\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, error && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, error.message)), React.createElement(\"input\", {\n      type: \"hidden\",\n      name: \"id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Title\", ' ', React.createElement(Required, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      id: \"title\",\n      placeholder: \"Great website!\",\n      required: true,\n      value: title,\n      onChange: this.handleChangeTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"url\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"URL\", ' ', React.createElement(Required, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"url\",\n      name: \"url\",\n      id: \"url\",\n      placeholder: \"https://www.great-website.com/\",\n      required: true,\n      value: url,\n      onChange: this.handleChangeUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"textarea\", {\n      name: \"description\",\n      id: \"description\",\n      value: description,\n      onChange: this.handleChangeDescription,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"rating\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Rating\", ' ', React.createElement(Required, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"number\",\n      name: \"rating\",\n      id: \"rating\",\n      min: \"1\",\n      max: \"5\",\n      required: true,\n      value: rating,\n      onChange: this.handleChangeRating,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"EditBookmark__buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleClickCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Cancel\"), ' ', React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"Save\"))));\n  }\n\n}\n\nEditBookmark.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.object\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func\n  }).isRequired\n};\nEditBookmark.contextType = BookmarksContext;\nexport default EditFolder;","map":{"version":3,"sources":["/Users/rachelemilyperez/projects/notefulapp_client/src/EditFolder/EditFolder.js"],"names":["React","Component","PropTypes","config","Required","EditBookmark","state","error","id","title","url","description","rating","handleChangeTitle","e","setState","target","value","handleChangeUrl","handleChangeDescription","handleChangeRating","handleSubmit","preventDefault","bookmarkId","props","match","params","newBookmark","fetch","API_ENDPOINT","method","body","JSON","stringify","headers","API_KEY","then","res","ok","json","Promise","reject","resetFields","context","updateBookmark","history","push","catch","console","newFields","handleClickCancel","componentDidMount","responseData","render","message","propTypes","shape","object","func","isRequired","contextType","BookmarksContext","EditFolder"],"mappings":"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","sourcesContent":["import React, { Component } from  'react';\nimport PropTypes from 'prop-types';\nimport config from '../config'\nimport './EditFolder.css';\n\nconst Required = () => (\n  <span className='EditBookmark__required'>*</span>\n)\n\nclass EditBookmark extends Component {\n  static propTypes = {\n    match: PropTypes.shape({\n      params: PropTypes.object,\n    }),\n    history: PropTypes.shape({\n      push: PropTypes.func,\n    }).isRequired,\n  };\n\n  static contextType = BookmarksContext;\n\n  state = {\n    error: null,\n    id: '',\n    title: '',\n    url: '',\n    description: '',\n    rating: 1,\n  };\n\n  componentDidMount() {\n    const { bookmarkId } = this.props.match.params\n    fetch(config.API_ENDPOINT + `/${bookmarkId}`, {\n      method: 'GET',\n      headers: {\n        'authorization': `Bearer ${config.API_KEY}`\n      }\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(error => Promise.reject(error))\n\n        return res.json()\n      })\n      .then(responseData => {\n        this.setState({\n          id: responseData.id,\n          title: responseData.title,\n          url: responseData.url,\n          description: responseData.description,\n          rating: responseData.rating,\n        })\n      })\n      .catch(error => {\n        console.error(error)\n        this.setState({ error })\n      })\n  }\n\n  handleChangeTitle = e => {\n    this.setState({ title: e.target.value })\n  };\n\n  handleChangeUrl = e => {\n    this.setState({ url: e.target.value })\n  };\n\n  handleChangeDescription = e => {\n    this.setState({ description: e.target.value })\n  };\n\n  handleChangeRating = e => {\n    this.setState({ rating: e.target.value })\n  };\n\n  handleSubmit = e => {\n    e.preventDefault()\n    const { bookmarkId } = this.props.match.params\n    const { id, title, url, description, rating } = this.state\n    const newBookmark = { id, title, url, description, rating }\n    fetch(config.API_ENDPOINT + `/${bookmarkId}`, {\n      method: 'PATCH',\n      body: JSON.stringify(newBookmark),\n      headers: {\n        'content-type': 'application/json',\n        'authorization': `Bearer ${config.API_KEY}`\n      },\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(error => Promise.reject(error))\n      })\n      .then(() => {\n        this.resetFields(newBookmark)\n        this.context.updateBookmark(newBookmark)\n        this.props.history.push('/')\n      })\n      .catch(error => {\n        console.error(error)\n        this.setState({ error })\n      })\n  }\n\n  resetFields = (newFields) => {\n    this.setState({\n      id: newFields.id || '',\n      title: newFields.title || '',\n      url: newFields.url || '',\n      description: newFields.description || '',\n      rating: newFields.rating || '',\n    })\n  }\n\n  handleClickCancel = () => {\n    this.props.history.push('/')\n  };\n\n  render() {\n    const { error, title, url, description, rating } = this.state\n    return (\n      <section className='EditBookmark'>\n        <h2>Edit bookmark</h2>\n        <form\n          className='EditBookmark__form'\n          onSubmit={this.handleSubmit}\n        >\n          <div className='EditBookmark__error' role='alert'>\n            {error && <p>{error.message}</p>}\n          </div>\n          <input\n            type='hidden'\n            name='id'\n          />\n          <div>\n            <label htmlFor='title'>\n              Title\n              {' '}\n              <Required />\n            </label>\n            <input\n              type='text'\n              name='title'\n              id='title'\n              placeholder='Great website!'\n              required\n              value={title}\n              onChange={this.handleChangeTitle}\n            />\n          </div>\n          <div>\n            <label htmlFor='url'>\n              URL\n              {' '}\n              <Required />\n            </label>\n            <input\n              type='url'\n              name='url'\n              id='url'\n              placeholder='https://www.great-website.com/'\n              required\n              value={url}\n              onChange={this.handleChangeUrl}\n            />\n          </div>\n          <div>\n            <label htmlFor='description'>\n              Description\n            </label>\n            <textarea\n              name='description'\n              id='description'\n              value={description}\n              onChange={this.handleChangeDescription}\n            />\n          </div>\n          <div>\n            <label htmlFor='rating'>\n              Rating\n              {' '}\n              <Required />\n            </label>\n            <input\n              type='number'\n              name='rating'\n              id='rating'\n              min='1'\n              max='5'\n              required\n              value={rating}\n              onChange={this.handleChangeRating}\n            />\n          </div>\n          <div className='EditBookmark__buttons'>\n            <button type='button' onClick={this.handleClickCancel}>\n              Cancel\n            </button>\n            {' '}\n            <button type='submit'>\n              Save\n            </button>\n          </div>\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default EditFolder;"]},"metadata":{},"sourceType":"module"}