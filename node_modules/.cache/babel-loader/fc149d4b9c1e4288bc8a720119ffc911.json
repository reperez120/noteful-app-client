{"ast":null,"code":"import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport NotefulForm from '../NotefulForm/NotefulForm';\nimport ValidationError from './ValidationError';\nimport NotefulError from '../NotefulError';\nimport PropTypes from 'prop-types';\nimport config from '../config';\nimport './EditNote.css'; // class EditNote extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       name: '',\n//       nameValid: false,\n//       formValid: false,\n//       validationMessage: {\n//         name: ''\n//       }\n//     }\n//   }\n//   verifyNameLength(name) {\n//     this.setState({name}, () => {this.validateName(name)});\n//   }\n//     componentDidMount() {\n//        const noteId = this.props.match.params.noteId\n//       fetch(`https://localhost:8000/api/notes/${noteId}`, {\n//           method: 'GET'\n//        })\n//        .then(res => {\n//         if(!res.ok) {\n//           throw new Error('Something went wrong, please try again later');\n//         }\n//         return res.json();\n//       })\n//       .then(responseData => {\n//              this.setState({\n//               /* fields state updates here? */\n//             })\n//            })\n//            .catch(error => {\n//               console.error({error});})\n//     }\n//     handleNoteEdit = e => {\n//          e.preventDefault()\n//          const { name, selectedFolder, content } = e.target;\n//          const note = {\n//          name: name.value,\n//          folderId: selectedFolder.value,\n//          content: content.value,\n//          modified: Date.now()\n//         }\n//     fetch(`https://localhost:8000/api/notes/${this.props.match.params.noteId}`, {\n//         method: 'PATCH',\n//         body: JSON.stringify(this.state.inputValue)\n//       })\n//         .then(res => {\n//         if(!res.ok) {\n//           throw new Error('Something went wrong, please try again later');\n//         }\n//         return res.json();\n//       })\n//     .then(data => {\n//       this.props.EditNote(data)\n//       this.props.history.push('/')\n//     })\n//     .catch(err => {\n//       this.setState({\n//         error: err.message\n//       });\n//     });\n//   }\n//   render() {\n//     const folders = this.props.folders\n//     return (\n//       <section className='AddNote'>\n//         <NotefulError>\n//           <h2>Edit note</h2>\n//           <NotefulForm onSubmit={this.handleNoteEdit}>\n//             <div className='field'>\n//               <label htmlFor='note-name-input'>\n//                 Name\n//               </label>\n//               <input type='text' id='name' name='name' value={name} onChange={e => this.verifyNameLength(e.target.value)}/>\n//               <ValidationError hasError={!this.state.nameVaild} message={this.state.validationMessage.name}/>\n//             </div>\n//             <div className='field'>\n//               <label htmlFor='note-content-input'>\n//                 Content\n//               </label>\n//               <textarea id='content' name='content'/>\n//             </div>\n//             <div className='field'>\n//               <label htmlFor='note-folder-select'>\n//                 Folder\n//               </label>\n//               <select id='selectedFolder' name='selectedFolder'>\n//                 <option value={null}>...</option>\n//                 {folders.map(folder =>\n//                   <option key={folder.id} value={folder.id}>\n//                     {folder.name}\n//                   </option>\n//                 )}\n//               </select>\n//             </div>\n//             <div className='buttons'>\n//               <button type='submit' disabled={!this.state.formValid} >\n//                 Edit note\n//               </button>\n//             </div>\n//           </NotefulForm>\n//         </NotefulError>\n//       </section>\n//     )\n//   }\n// }\n// EditNote.propTypes = {\n//   EditNote: PropTypes.func.isRequired,\n//   folders: PropTypes.arrayOf(PropTypes.shape({\n//     name: PropTypes.string.isRequired\n//   })) \n// }\n// export default EditNote;","map":{"version":3,"sources":["/Users/rachelemilyperez/projects/notefulapp_client/src/EditNote/EditNote.js"],"names":["React","Component","withRouter","NotefulForm","ValidationError","NotefulError","PropTypes","config"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAkC,OAAlC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAO,gsourcesContent":["import React, { Component } from  'react';\nimport { withRouter } from 'react-router-dom';\nimport NotefulForm from '../NotefulForm/NotefulForm';\nimport ValidationError from './ValidationError';\nimport NotefulError from '../NotefulError';\nimport PropTypes from 'prop-types';\nimport config from '../config'\nimport './EditNote.css';\n\n// class EditNote extends Component {\n\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n\n//       name: '',\n//       nameValid: false,\n//       formValid: false,\n//       validationMessage: {\n//         name: ''\n//       }\n//     }\n//   }\n\n//   verifyNameLength(name) {\n//     this.setState({name}, () => {this.validateName(name)});\n//   }\n\n//     componentDidMount() {\n//        const noteId = this.props.match.params.noteId\n//       fetch(`https://localhost:8000/api/notes/${noteId}`, {\n//           method: 'GET'\n//        })\n//        .then(res => {\n//         if(!res.ok) {\n//           throw new Error('Something went wrong, please try again later');\n//         }\n//         return res.json();\n//       })\n//       .then(responseData => {\n//              this.setState({\n//               /* fields state updates here? */\n//             })\n//            })\n//            .catch(error => {\n//               console.error({error});})\n//     }\n\n//     handleNoteEdit = e => {\n//          e.preventDefault()\n//          const { name, selectedFolder, content } = e.target;\n//          const note = {\n//          name: name.value,\n//          folderId: selectedFolder.value,\n//          content: content.value,\n//          modified: Date.now()\n//         }\n\n//     fetch(`https://localhost:8000/api/notes/${this.props.match.params.noteId}`, {\n//         method: 'PATCH',\n//         body: JSON.stringify(this.state.inputValue)\n//       })\n//         .then(res => {\n//         if(!res.ok) {\n//           throw new Error('Something went wrong, please try again later');\n//         }\n//         return res.json();\n//       })\n//     .then(data => {\n//       this.props.EditNote(data)\n//       this.props.history.push('/')\n//     })\n//     .catch(err => {\n//       this.setState({\n//         error: err.message\n//       });\n//     });\n//   }\n\n//   render() {\n//     const folders = this.props.folders\n//     return (\n//       <section className='AddNote'>\n//         <NotefulError>\n//           <h2>Edit note</h2>\n//           <NotefulForm onSubmit={this.handleNoteEdit}>\n//             <div className='field'>\n//               <label htmlFor='note-name-input'>\n//                 Name\n//               </label>\n//               <input type='text' id='name' name='name' value={name} onChange={e => this.verifyNameLength(e.target.value)}/>\n//               <ValidationError hasError={!this.state.nameVaild} message={this.state.validationMessage.name}/>\n//             </div>\n//             <div className='field'>\n//               <label htmlFor='note-content-input'>\n//                 Content\n//               </label>\n//               <textarea id='content' name='content'/>\n//             </div>\n//             <div className='field'>\n//               <label htmlFor='note-folder-select'>\n//                 Folder\n//               </label>\n//               <select id='selectedFolder' name='selectedFolder'>\n//                 <option value={null}>...</option>\n//                 {folders.map(folder =>\n//                   <option key={folder.id} value={folder.id}>\n//                     {folder.name}\n//                   </option>\n//                 )}\n//               </select>\n//             </div>\n//             <div className='buttons'>\n//               <button type='submit' disabled={!this.state.formValid} >\n//                 Edit note\n//               </button>\n//             </div>\n//           </NotefulForm>\n//         </NotefulError>\n//       </section>\n//     )\n//   }\n// }\n\n// EditNote.propTypes = {\n//   EditNote: PropTypes.func.isRequired,\n//   folders: PropTypes.arrayOf(PropTypes.shape({\n//     name: PropTypes.string.isRequired\n//   })) \n// }\n   \n// export default EditNote;"]},"metadata":{},"sourceType":"module"}