{"ast":null,"code":"var _jsxFileName = \"/Users/rachelemilyperez/projects/noteful-app/noteful-app-client/src/EditNote/EditNote.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './EditNote.css';\nimport ApiContext from '../ApiContext';\nimport config from '../config';\nexport default class EditNote extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: null,\n      id: \"\",\n      name: \"\",\n      content: \"\",\n      folder: \"\"\n    };\n\n    this.handleNameChange = e => {\n      this.setState({\n        name: e.target.value\n      });\n    };\n\n    this.handleContentChange = e => {\n      this.setState({\n        content: e.target.value\n      });\n    };\n\n    this.handleFolderChange = e => {\n      this.setState({\n        folder: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const noteName = e.target.name.value;\n      const noteContent = e.target.content.value;\n      this.setState({\n        name: noteName,\n        content: noteContent\n      });\n      const noteId = this.props.match.params.noteId;\n      const _this$state = this.state,\n            id = _this$state.id,\n            name = _this$state.name,\n            content = _this$state.content,\n            folder = _this$state.folder;\n      const newNote = {\n        id,\n        name,\n        content,\n        folder\n      };\n      const url = \"\".concat(config.API_ENDPOINT, \"/api/notes/\").concat(noteId);\n      const options = {\n        method: 'PATCH',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify(newNote)\n      };\n      fetch(url, options).then(res => {\n        if (!res.ok) {\n          throw new Error('Something went wrong, please try again later');\n        }\n      }).then(() => {\n        this.context.updateNote(newNote);\n        this.props.history.push('/');\n      }).catch(err => {\n        this.setState({\n          error: err.message\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    const noteId = this.props.match.params.noteId;\n    fetch(\"\".concat(config.API_ENDPOINT, \"/api/notes/\").concat(noteId), {\n      method: 'GET'\n    }).then(res => {\n      if (!res.ok) {\n        throw new Error('Something went wrong, please try again later');\n      }\n\n      return res.json();\n    }).then(data => {\n      this.setState({\n        id: data.id,\n        name: data.name,\n        content: data.content,\n        folder: data.folder\n      });\n    }).catch(err => {\n      this.setState({\n        error: err.message\n      });\n    });\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          name = _this$state2.name,\n          content = _this$state2.content,\n          folder = _this$state2.folder;\n    const folders = this.context.folders;\n    return React.createElement(\"section\", {\n      className: \"EditNote\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Edit Note\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Name:\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"name\",\n      name: \"name\",\n      defaultValue: name,\n      onChange: this.handleNameChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"note-content-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Content\"), React.createElement(\"textarea\", {\n      type: \"text\",\n      id: \"content\",\n      name: \"content\",\n      defaultValue: content,\n      onChange: this.handleContentChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"note-folder-select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Folder\"), React.createElement(\"select\", {\n      id: \"selectedFolder\",\n      name: \"selectedFolder\",\n      defaultValue: folder,\n      onChange: this.handleFolderChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"...\"), folders.map(folder => React.createElement(\"option\", {\n      key: folder.id,\n      value: folder.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, folder.name)))), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"editButton\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Edit note\"))));\n  }\n\n}\nEditNote.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.object\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func\n  }).isRequired\n};\nEditNote.contextType = ApiContext;\nEditNote.contextType = ApiContext;","map":{"version":3,"sources":["/Users/rachelemilyperez/projects/noteful-app/noteful-app-client/src/EditNote/EditNote.js"],"names":["React","Component","PropTypes","ApiContext","config","EditNote","state","error","id","name","content","folder","handleNameChange","e","setState","target","value","handleContentChange","handleFolderChange","handleSubmit","preventDefault","noteName","noteContent","noteId","props","match","params","newNote","url","API_ENDPOINT","options","method","headers","body","JSON","stringify","fetch","then","res","ok","Error","context","updateNote","history","push","catch","err","message","componentDidMount","json","data","render","folders","map","propTypes","shape","object","func","isRequired","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './EditNote.css';\nimport ApiContext from '../ApiContext';\nimport config from '../config';\n \nexport default class EditNote extends Component {\n    \n    static propTypes = {\n        match: PropTypes.shape({\n          params: PropTypes.object,\n        }),\n        history: PropTypes.shape({\n          push: PropTypes.func,\n        }).isRequired,\n      };\n\n    static contextType = ApiContext\n\n   state = {\n       error: null,\n       id: \"\",\n       name: \"\",\n       content: \"\",\n       folder: \"\"\n    }\n \n   static contextType = ApiContext\n \n   componentDidMount() {\n \n    const noteId  = this.props.match.params.noteId\n\n   fetch(`${config.API_ENDPOINT}/api/notes/${noteId}`, { method: 'GET'})\n       .then(res => {\n       if(!res.ok) {\n           throw new Error('Something went wrong, please try again later');\n       }\n       return res.json();\n       }) \n    .then(data => {\n        this.setState({\n            id: data.id,\n            name: data.name,\n            content: data.content,\n            folder: data.folder\n        })\n       })\n   .catch(err => {\n       this.setState({\n           error: err.message\n           });\n        })\n    }\n \n   handleNameChange = e => {\n       this.setState({ name: e.target.value })\n    };\n \n   handleContentChange = e => {\n       this.setState({ content: e.target.value })\n   };\n \n   handleFolderChange = e => {\n       this.setState({ folder: e.target.value })\n     };\n\n   handleSubmit = e => {\n       e.preventDefault()\n       const noteName = e.target.name.value\n       const noteContent = e.target.content.value\n     \n       this.setState ({\n          name: noteName,\n          content: noteContent,\n       })\n       const noteId = this.props.match.params.noteId\n       const { id, name, content, folder } = this.state\n       const newNote = { id, name, content, folder }\n       \n       const url = `${config.API_ENDPOINT}/api/notes/${noteId}`\n       const options = {\n           method: 'PATCH',\n            headers: {\n               'content-type': 'application/json'\n           },\n           body: JSON.stringify(newNote)\n       }\n       fetch(url, options)\n       .then(res => {\n       if(!res.ok) {\n           throw new Error('Something went wrong, please try again later');\n       }\n       }) \n       .then(() => {\n           this.context.updateNote(newNote)\n           this.props.history.push('/')\n       })\n        .catch(err => {\n            this.setState({\n                error: err.message\n            });\n       })\n}\n\nrender() {\n   const { name, content, folder  } = this.state\n   const folders = this.context.folders\n   return (\n     <section className='EditNote'>\n       <h2>Edit Note</h2>\n       <form onSubmit={this.handleSubmit}>\n           <div className='field'>\n               <label htmlFor='name-input'>\n               Name:\n               </label>\n               <input\n                   type='text'\n                   id='name'\n                   name='name'\n                   defaultValue={name}\n                   onChange={this.handleNameChange}\n               />\n           </div>\n           <div className='field'>\n             <label htmlFor='note-content-input'>\n               Content\n             </label>\n             <textarea\n             type='text'\n             id='content'\n             name='content'\n             defaultValue={content}\n             onChange={this.handleContentChange}/>\n           </div>\n           <div className='field'>\n             <label htmlFor='note-folder-select'>\n               Folder\n             </label>\n             <select id='selectedFolder' name='selectedFolder' defaultValue={folder} onChange={this.handleFolderChange} >\n               <option value={null}>...</option>\n               {folders.map(folder =>\n                 <option key={folder.id} value={folder.id}>\n                   {folder.name}\n                 </option>\n               )}\n             </select>\n           </div>\n           <div className='buttons'>\n               <button className='editButton' type='submit'>\n               Edit note\n               </button>\n           </div>\n       </form>\n     </section>\n   )\n }\n}\n\n"]},"metadata":{},"sourceType":"module"}