{"ast":null,"code":"var _jsxFileName = \"/Users/rachelemilyperez/projects/noteful-app/noteful-app-client/src/EditFolder/EditFolder.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './EditFolder.css';\nimport ApiContext from '../ApiContext';\nimport config from '../config';\nexport default class EditFolder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: null,\n      id: \"\",\n      name: \"\"\n    };\n\n    this.handleNameChange = e => {\n      this.setState({\n        name: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const folderName = e.target.name.value;\n      this.setState({\n        name: folderName\n      });\n      const folderId = this.props.match.params.folderId;\n      const _this$state = this.state,\n            id = _this$state.id,\n            name = _this$state.name;\n      const newFolder = {\n        id,\n        name\n      };\n      const url = \"\".concat(config.API_ENDPOINT, \"/api/folders/\").concat(folderId);\n      const options = {\n        method: 'PATCH',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify(newFolder)\n      };\n      fetch(url, options).then(res => {\n        if (!res.ok) {\n          throw new Error('Something went wrong, please try again later');\n        }\n      }).then(() => {\n        this.context.updateFolder(newFolder);\n        this.props.history.push('/');\n      }).catch(err => {\n        this.setState({\n          error: err.message\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    const folderId = this.props.match.params.folderId;\n    fetch(\"\".concat(config.API_ENDPOINT, \"/api/folders/\").concat(folderId), {\n      method: 'GET'\n    }).then(res => {\n      if (!res.ok) {\n        throw new Error('Something went wrong, please try again later');\n      }\n\n      return res.json();\n    }).then(data => {\n      this.setState({\n        id: data.id,\n        name: data.name\n      });\n    }).catch(err => {\n      this.setState({\n        error: err.message\n      });\n    });\n  }\n\n  render() {\n    const name = this.state.name;\n    return React.createElement(\"section\", {\n      className: \"EditFolder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Edit Folder\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Name:\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"name\",\n      name: \"name\",\n      defaultValue: name,\n      onChange: this.handleNameChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"editButton\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Edit folder\"))));\n  }\n\n}\nEditFolder.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.object\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func\n  }).isRequired\n};\nEditFolder.contextType = ApiContext;","map":{"version":3,"sources":["/Users/rachelemilyperez/projects/noteful-app/noteful-app-client/src/EditFolder/EditFolder.js"],"names":["React","Component","PropTypes","ApiContext","config","EditFolder","state","error","id","name","handleNameChange","e","setState","target","value","handleSubmit","preventDefault","folderName","folderId","props","match","params","newFolder","url","API_ENDPOINT","options","method","headers","body","JSON","stringify","fetch","then","res","ok","Error","context","updateFolder","history","push","catch","err","message","componentDidMount","json","data","render","propTypes","shape","object","func","isRequired","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './EditFolder.css';\nimport ApiContext from '../ApiContext';\nimport config from '../config';\n\nexport default class EditFolder extends Component {\n\n    static propTypes = {\n        match: PropTypes.shape({\n          params: PropTypes.object,\n        }),\n        history: PropTypes.shape({\n          push: PropTypes.func,\n        }).isRequired,\n      };\n\n    state = {\n        error: null,\n        id: \"\",\n        name: \"\"\n    };\n\n    static contextType = ApiContext\n     \n    componentDidMount() {\n\n    const folderId = this.props.match.params.folderId\n   \n    fetch(`${config.API_ENDPOINT}/api/folders/${folderId}`, { method: 'GET'})\n        .then(res => {\n        if(!res.ok) {\n            throw new Error('Something went wrong, please try again later');\n        }\n        return res.json();\n        })  \n    .then(data => {\n         this.setState({\n            id: data.id,\n            name: data.name\n         })\n        })\n    .catch(err => {\n        this.setState({\n            error: err.message\n            });\n        })\n    }\n\n    handleNameChange = e => {\n        this.setState({ name: e.target.value })\n    };\n\n    handleSubmit = e => {\n        e.preventDefault()\n        const folderName = e.target.name.value\n       \n        this.setState ({\n           name: folderName\n        })\n\n        const  folderId  = this.props.match.params.folderId\n        const  {id, name }  = this.state\n        const newFolder =  {id, name}\n        const url = `${config.API_ENDPOINT}/api/folders/${folderId}`\n        const options = {\n            method: 'PATCH',\n             headers: {\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify(newFolder)\n        }\n        fetch(url, options)\n        .then(res => {\n        if(!res.ok) {\n            throw new Error('Something went wrong, please try again later');\n        }\n        })  \n        .then (() => {\n            this.context.updateFolder(newFolder)\n            this.props.history.push('/')\n        })\n        .catch(err => {\n            this.setState({\n                error: err.message\n            });\n        })\n}\n\nrender() {\n    const { name } = this.state\n    return (\n      <section className='EditFolder'>\n        <h2>Edit Folder</h2>\n        <form onSubmit={this.handleSubmit}> \n            <div className='field'>\n                <label htmlFor='name-input'>\n                Name:\n                </label>\n                <input \n                    type='text' \n                    id='name' \n                    name='name'\n                    defaultValue={name}\n                    onChange={this.handleNameChange}\n                    />\n            </div>\n            <div className='buttons'>\n                <button className='editButton' type='submit'>\n                Edit folder\n                </button>\n            </div>\n        </form>\n      </section>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}