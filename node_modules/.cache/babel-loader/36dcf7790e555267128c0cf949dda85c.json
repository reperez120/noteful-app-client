{"ast":null,"code":"export const findFolder = (folders = [], folderId) => folders.find(folder => folder.id === folderId);\nexport const findNote = (notes = [], noteId) => notes.find(note => note.id === Number(noteId));\nexport const getNotesForFolder = (notes = [], folderId) => !folderId ? notes : notes.filter(note => note.folderId === folderId);\nexport const getContent = (folders = [], folderId) => {\n  folders.forEach(function (folderSummary, folderId) {\n    folders[folderId].notes.length;\n  });\n};\nexport const countNotesForFolder = (notes = [], folderId) => notes.filter(note => note.folderId === folderId).length;","map":{"version":3,"sources":["/Users/rachelemilyperez/projects/noteful-app/noteful-app-client/src/notes-helpers.js"],"names":["findFolder","folders","folderId","find","folder","id","findNote","notes","noteId","note","Number","getNotesForFolder","filter","getContent","forEach","folderSummary","length","countNotesForFolder"],"mappings":"AACA,OAAO,MAAMA,UAAU,GAAG,CAACC,OAAO,GAAC,EAAT,EAAaC,QAAb,KACxBD,OAAO,CAACE,IAAR,CAAaC,MAAM,IAAIA,MAAM,CAACC,EAAP,KAAcH,QAArC,CADK;AAGP,OAAO,MAAMI,QAAQ,GAAG,CAACC,KAAK,GAAC,EAAP,EAAWC,MAAX,KACtBD,KAAK,CAACJ,IAAN,CAAWM,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYK,MAAM,CAACF,MAAD,CAArC,CADK;AAGP,OAAO,MAAMG,iBAAiB,GAAG,CAACJ,KAAK,GAAC,EAAP,EAAWL,QAAX,KAC9B,CAACA,QAAF,GACIK,KADJ,GAEIA,KAAK,CAACK,MAAN,CAAaH,IAAI,IAAIA,IAAI,CAACP,QAAL,KAAkBA,QAAvC,CAHC;AAMP,OAAO,MAAMW,UAAU,GAAG,CAACZ,OAAO,GAAC,EAAT,EAAaC,QAAb,KAA0B;AAClDD,EAAAA,OAAO,CAACa,OAAR,CAAgB,UAASC,aAAT,EAAwBb,QAAxB,EAAkC;AAChDD,IAAAA,OAAO,CAACC,QAAD,CAAP,CAAkBK,KAAlB,CAAwBS,MAAxB;AACA,GAFF;AAGD,CAJM;AAMP,OAAO,MAAMC,mBAAmB,GAAG,CAACV,KAAK,GAAC,EAAP,EAAWL,QAAX,KACjCK,KAAK,CAACK,MAAN,CAAaH,IAAI,IAAIA,IAAI,CAACP,QAAL,KAAkBA,QAAvC,EAAiDc,MAD5C","sourcesContent":["\nexport const findFolder = (folders=[], folderId) =>\n  folders.find(folder => folder.id === folderId)\n\nexport const findNote = (notes=[], noteId) => \n  notes.find(note => note.id === Number(noteId))\n\nexport const getNotesForFolder = (notes=[], folderId) => (\n  (!folderId)\n    ? notes\n    : notes.filter(note => note.folderId === folderId)\n)\n\nexport const getContent = (folders=[], folderId) => {\n  folders.forEach(function(folderSummary, folderId) {\n    folders[folderId].notes.length\n   })\n}\n\nexport const countNotesForFolder = (notes=[], folderId) =>\n  notes.filter(note => note.folderId === folderId).length\n"]},"metadata":{},"sourceType":"module"}