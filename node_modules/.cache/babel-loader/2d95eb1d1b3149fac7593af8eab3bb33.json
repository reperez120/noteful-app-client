{"ast":null,"code":"import _objectSpread from \"/Users/rachelemilyperez/projects/noteful-app/noteful-app-client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/rachelemilyperez/projects/noteful-app/noteful-app-client/src/AddNote/AddNote.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport NotefulForm from '../NotefulForm/NotefulForm';\nimport ValidationError from './ValidationError';\nimport NotefulError from '../NotefulError';\nimport './AddNote.css';\n\nclass AddNote extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNoteSubmit = e => {\n      e.preventDefault();\n      const _e$target = e.target,\n            name = _e$target.name,\n            selectedFolder = _e$target.selectedFolder,\n            content = _e$target.content;\n      const note = {\n        name: name.value,\n        folder: selectedFolder.value,\n        content: content.value,\n        date: new Date()\n      };\n      console.log(note);\n      const options = {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify(note)\n      };\n      this.setState({\n        error: null\n      });\n      fetch('http://localhost:8000/api/notes', options).then(res => {\n        if (!res.ok) {\n          throw new Error('Something went wrong, please try again later');\n        }\n\n        return res.json();\n      }).then(data => {\n        const folders = this.props.folders;\n        this.props.addNote(folders, data);\n        const newFolders = this.props.addNote(folders, data);\n        console.log(newFolders);\n        this.setSet({\n          folders: newFolders\n        });\n        this.props.history.push('/');\n      }).catch(err => {\n        this.setState({\n          error: err.message\n        });\n      });\n    };\n\n    this.state = {\n      name: '',\n      nameValid: false,\n      formValid: false,\n      validationMessage: {\n        name: ''\n      }\n    };\n  }\n\n  verifyNameLength(name) {\n    this.setState({\n      name\n    }, () => {\n      this.validateName(name);\n    });\n  }\n\n  validateName(fieldValue) {\n    const fieldErrors = _objectSpread({}, this.state.validationMessage);\n\n    let hasError = false;\n    fieldValue = fieldValue.trim();\n\n    if (fieldValue.length === 0) {\n      fieldErrors.name = 'A note name is required.';\n      hasError = true;\n    } else {\n      fieldErrors.name = '';\n      hasError = false;\n    }\n\n    this.setState({\n      validationMessage: fieldErrors,\n      nameValid: !hasError\n    }, this.formValid);\n  }\n\n  formValid() {\n    this.setState({\n      formValid: this.state.nameValid\n    });\n  }\n\n  render() {\n    const folders = this.props.folders;\n    return React.createElement(\"section\", {\n      className: \"AddNote\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(NotefulError, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Create a note\"), React.createElement(NotefulForm, {\n      onSubmit: this.handleNoteSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"note-name-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"name\",\n      name: \"name\",\n      onChange: e => this.verifyNameLength(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(ValidationError, {\n      hasError: !this.state.nameVaild,\n      message: this.state.validationMessage.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"note-content-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Content\"), React.createElement(\"textarea\", {\n      type: \"text\",\n      id: \"content\",\n      name: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"note-folder-select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Folder\"), React.createElement(\"select\", {\n      id: \"selectedFolder\",\n      name: \"selectedFolder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"...\"), folders.map(folder => React.createElement(\"option\", {\n      key: folder.id,\n      value: folder.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, folder.name)))), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      disabled: !this.state.formValid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Add note\")))));\n  }\n\n}\n\nexport default withRouter(AddNote);","map":{"version":3,"sources":["/Users/rachelemilyperez/projects/noteful-app/noteful-app-client/src/AddNote/AddNote.js"],"names":["React","Component","withRouter","NotefulForm","ValidationError","NotefulError","AddNote","constructor","props","handleNoteSubmit","e","preventDefault","target","name","selectedFolder","content","note","value","folder","date","Date","console","log","options","method","headers","body","JSON","stringify","setState","error","fetch","then","res","ok","Error","json","data","folders","addNote","newFolders","setSet","history","push","catch","err","message","state","nameValid","formValid","validationMessage","verifyNameLength","validateName","fieldValue","fieldErrors","hasError","trim","length","render","nameVaild","map","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport NotefulForm from '../NotefulForm/NotefulForm';\nimport ValidationError from './ValidationError';\nimport NotefulError from '../NotefulError';\nimport './AddNote.css'\n\nclass AddNote extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      nameValid: false,\n      formValid: false,\n      validationMessage: {\n        name: ''\n      }\n    }\n  }\n\n  verifyNameLength(name) {\n    this.setState({name}, () => {this.validateName(name)});\n  }\n\n  handleNoteSubmit = e => {\n    e.preventDefault();\n    const { name, selectedFolder, content } = e.target;\n    const note = {\n      name: name.value,\n      folder: selectedFolder.value,\n      content: content.value,\n      date: new Date()\n    }\n    console.log(note)\n    \n    const options = {           \n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    }\n    this.setState({ error: null })\n    fetch('http://localhost:8000/api/notes', options)\n      .then(res => {\n        if(!res.ok) {\n          throw new Error('Something went wrong, please try again later');\n        }\n        return res.json();\n      })\n    .then(data => {\n      const folders = this.props.folders\n      this.props.addNote(folders, data)\n      const newFolders = this.props.addNote(folders, data)  \n      console.log(newFolders)\n      this.setSet({ folders: newFolders })\n      this.props.history.push('/')\n    })\n    .catch(err => {\n      this.setState({\n        error: err.message\n      });\n    });\n  }\n\n  validateName(fieldValue) {\n    const fieldErrors = {...this.state.validationMessage};\n    let hasError = false;\n    fieldValue = fieldValue.trim();\n    if(fieldValue.length === 0) {\n      fieldErrors.name = 'A note name is required.';\n      hasError = true;\n    } else {\n      fieldErrors.name = '';\n      hasError = false;\n    }\n    this.setState({\n      validationMessage: fieldErrors,\n      nameValid: !hasError\n    }, this.formValid );\n  }\nformValid() {\n  this.setState({\n      formValid: this.state.nameValid\n  });\n}\n\n  render() {\n    const folders = this.props.folders\n    return (\n      <section className='AddNote'>\n        <NotefulError>\n          <h2>Create a note</h2>\n          <NotefulForm onSubmit={this.handleNoteSubmit}>\n            <div className='field'>\n              <label htmlFor='note-name-input'>\n                Name\n              </label>\n              <input type='text' id='name' name='name' onChange={e => this.verifyNameLength(e.target.value)}/>\n              <ValidationError hasError={!this.state.nameVaild} message={this.state.validationMessage.name}/>\n            </div>\n            <div className='field'>\n              <label htmlFor='note-content-input'>\n                Content\n              </label>\n              <textarea type='text' id='content' name='content'/>\n            </div>\n            <div className='field'>\n              <label htmlFor='note-folder-select'>\n                Folder\n              </label>\n              <select id='selectedFolder' name='selectedFolder'>\n                <option value={null}>...</option>\n                {folders.map(folder =>\n                  <option key={folder.id} value={folder.id}>\n                    {folder.name}\n                  </option>\n                )}\n              </select>\n            </div>\n            <div className='buttons'>\n              <button type='submit' disabled={!this.state.formValid} >\n                Add note\n              </button>\n            </div>\n          </NotefulForm>\n        </NotefulError>\n      </section>\n    )\n  }\n}\n\nexport default withRouter(AddNote);"]},"metadata":{},"sourceType":"module"}