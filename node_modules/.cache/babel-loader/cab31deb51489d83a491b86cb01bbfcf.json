{"ast":null,"code":"export const findFolder = (folders = [], folderId) => folders.find(folder => folder.id === folderId); // export const findNote = (notes=[], noteId) => \n//   notes.find(note => note.id === Number(noteId))\n\nexport const getNotesForFolder = (notes = [], folderId) => !folderId ? notes : notes.filter(note => note.folderId === folderId);\nexport const getContent = (folders = [], folderId) => {\n  folders.forEach(function (folderSummary, folderId) {\n    let content = folders[folderId].notes.length;\n  });\n};\nexport const countNotesForFolder = (notes = [], folderId) => notes.filter(note => note.folderId === folderId).length;","map":{"version":3,"sources":["/Users/rachelemilyperez/projects/noteful-app/noteful-app-client/src/notes-helpers.js"],"names":["findFolder","folders","folderId","find","folder","id","getNotesForFolder","notes","filter","note","getContent","forEach","folderSummary","content","length","countNotesForFolder"],"mappings":"AACA,OAAO,MAAMA,UAAU,GAAG,CAACC,OAAO,GAAC,EAAT,EAAaC,QAAb,KACxBD,OAAO,CAACE,IAAR,CAAaC,MAAM,IAAIA,MAAM,CAACC,EAAP,KAAcH,QAArC,CADK,C,CAGP;AACA;;AAEA,OAAO,MAAMI,iBAAiB,GAAG,CAACC,KAAK,GAAC,EAAP,EAAWL,QAAX,KAC9B,CAACA,QAAF,GACIK,KADJ,GAEIA,KAAK,CAACC,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACP,QAAL,KAAkBA,QAAvC,CAHC;AAMP,OAAO,MAAMQ,UAAU,GAAG,CAACT,OAAO,GAAC,EAAT,EAAaC,QAAb,KAA0B;AAClDD,EAAAA,OAAO,CAACU,OAAR,CAAgB,UAASC,aAAT,EAAwBV,QAAxB,EAAkC;AAChD,QAAIW,OAAO,GAAGZ,OAAO,CAACC,QAAD,CAAP,CAAkBK,KAAlB,CAAwBO,MAAtC;AACA,GAFF;AAGD,CAJM;AAMP,OAAO,MAAMC,mBAAmB,GAAG,CAACR,KAAK,GAAC,EAAP,EAAWL,QAAX,KACjCK,KAAK,CAACC,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACP,QAAL,KAAkBA,QAAvC,EAAiDY,MAD5C","sourcesContent":["\nexport const findFolder = (folders=[], folderId) =>\n  folders.find(folder => folder.id === folderId)\n\n// export const findNote = (notes=[], noteId) => \n//   notes.find(note => note.id === Number(noteId))\n\nexport const getNotesForFolder = (notes=[], folderId) => (\n  (!folderId)\n    ? notes\n    : notes.filter(note => note.folderId === folderId)\n)\n\nexport const getContent = (folders=[], folderId) => {\n  folders.forEach(function(folderSummary, folderId) {\n    let content = folders[folderId].notes.length\n   })\n}\n\nexport const countNotesForFolder = (notes=[], folderId) =>\n  notes.filter(note => note.folderId === folderId).length\n"]},"metadata":{},"sourceType":"module"}