{"ast":null,"code":"var _jsxFileName = \"/Users/rachelemilyperez/projects/noteful-app/noteful-app-client/src/EditFolder/EditFolder.js\";\nimport React, { Component } from 'react';\nimport './EditFolder.css';\nimport { fips } from 'crypto';\nexport default class EditFolder extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const name = e.target.name;\n      const folder = {\n        name: name.defaultValue // const folderName = e.target.name.value\n        // this.setState ({\n        //    name:\n        // })\n\n      };\n      const folderId = this.props.match.params.folderId;\n      const url = \"http://localhost:8000/api/folders/\".concat(folderId);\n      const options = {\n        method: 'PATCH',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify(this.state.name)\n      };\n      fetch(url, options).then(res => {\n        if (!res.ok) {\n          throw new Error('Something went wrong, please try again later');\n        }\n\n        return res.json();\n      }) // .then(data => {\n      //     this.context.updateFolder(data)\n      //  })\n      .catch(err => {\n        this.setState({\n          error: err.message\n        });\n      });\n    };\n  }\n\n  // constructor(props) {\n  //     super(props);\n  //         this.state = {\n  //             name: \"\"\n  //         }\n  // }\n  // updateName(name) {\n  //     this.setState({ name: { value: name, touched: true } });\n  //   }//\n  componentDidMount() {\n    const folderId = this.props.match.params.folderId;\n    fetch(\"http://localhost:8000/api/folders/\".concat(folderId), {\n      method: 'GET'\n    }).then(res => {\n      if (!res.ok) {\n        throw new Error('Something went wrong, please try again later');\n      }\n\n      return res.json();\n    }).then(data => {\n      this.setState({\n        name: data.name\n      });\n    }).catch(err => {\n      this.setState({\n        error: err.message\n      });\n    });\n  }\n\n  render() {\n    const name = this.state.name;\n    return React.createElement(\"section\", {\n      className: \"EditFolder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Edit Folder\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Name:\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"name\",\n      name: \"name\",\n      defaultValue: name // onInput={e => setInput(e.target.value)}\n      // onChange={this.handleNameChange}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"editButton\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Edit folder\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/rachelemilyperez/projects/noteful-app/noteful-app-client/src/EditFolder/EditFolder.js"],"names":["React","Component","fips","EditFolder","handleSubmit","e","preventDefault","name","target","folder","defaultValue","folderId","props","match","params","url","options","method","headers","body","JSON","stringify","state","fetch","then","res","ok","Error","json","catch","err","setState","error","message","componentDidMount","data","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './EditFolder.css'\nimport { fips } from 'crypto';\n\nexport default class EditFolder extends Component {\n    // constructor(props) {\n    //     super(props);\n    //         this.state = {\n    //             name: \"\"\n    //         }\n    // }\n\n    // updateName(name) {\n    //     this.setState({ name: { value: name, touched: true } });\n    //   }//\n    \n    componentDidMount() {\n\n    const folderId = this.props.match.params.folderId\n\n    fetch(`http://localhost:8000/api/folders/${folderId}`, { method: 'GET'})\n        .then(res => {\n        if(!res.ok) {\n            throw new Error('Something went wrong, please try again later');\n        }\n        return res.json();\n        })  \n    .then(data => {\n         this.setState({\n                 name: data.name\n         })\n        })\n    .catch(err => {\n        this.setState({\n            error: err.message\n            });\n        })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        const {name} = e.target\n        const folder = {\n            name: name.defaultValue\n        }\n        // const folderName = e.target.name.value\n        // this.setState ({\n        //    name:\n        // })\n        const folderId = this.props.match.params.folderId\n\n        const url = `http://localhost:8000/api/folders/${folderId}`\n        const options = {\n            method: 'PATCH',\n             headers: {\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify(this.state.name)\n\n        }\n        fetch(url, options)\n        .then(res => {\n        if(!res.ok) {\n            throw new Error('Something went wrong, please try again later');\n        }\n        return res.json();\n        })  \n    // .then(data => {\n    //     this.context.updateFolder(data)\n    //  })\n     .catch(err => {\n        this.setState({\n            error: err.message\n            });\n        })\n}\n\nrender() {\n    const { name } = this.state\n \n    return (\n      <section className='EditFolder'>\n        <h2>Edit Folder</h2>\n        <form onSubmit={this.handleSubmit}> \n            <div className='field'>\n                <label htmlFor='name-input'>\n                Name:\n                </label>\n                <input \n                    type='text' \n                    id='name' \n                    name='name'\n                    defaultValue={name}\n                    // onInput={e => setInput(e.target.value)}\n                    // onChange={this.handleNameChange}\n                    />\n            </div>\n            <div className='buttons'>\n                <button className='editButton' type='submit'>\n                Edit folder\n                </button>\n            </div>\n        </form>\n      </section>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}