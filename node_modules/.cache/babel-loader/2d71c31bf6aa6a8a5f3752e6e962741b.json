{"ast":null,"code":"var _jsxFileName = \"/Users/rachelemilyperez/projects/noteful-app/noteful-app-client/src/EditNote/EditNote.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './EditNote.css';\nimport ApiContext from '../ApiContext';\nexport default class EditNote extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: null,\n      name: \"\",\n      content: \"\",\n      folder: \"\"\n    };\n\n    this.handleNameChange = e => {\n      this.setState({\n        name: e.target.value\n      });\n    };\n\n    this.handleContentChange = e => {\n      this.setState({\n        content: e.target.value\n      });\n    };\n\n    this.handleFolderChange = e => {\n      this.setState({\n        folder: e.target.value\n      });\n    };\n\n    this.resetFields = newFields => {\n      this.setState({\n        name: newFields.name || '',\n        content: newFields.content || '',\n        folder: newFields.folder || ''\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const noteName = e.target.name.value;\n      this.setState({\n        name: noteName\n      });\n      const noteId = this.props.match.params.noteId;\n      const _this$state = this.state,\n            id = _this$state.id,\n            name = _this$state.name,\n            content = _this$state.content,\n            folder = _this$state.folder;\n      const newNote = {\n        id,\n        name,\n        content,\n        folder\n      };\n      console.log(newNote);\n      const url = \"http://localhost:8000/api/notes/\".concat(noteId);\n      const options = {\n        method: 'PATCH',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify(newNote)\n      };\n      fetch(url, options).then(res => {\n        if (!res.ok) {\n          throw new Error('Something went wrong, please try again later');\n        }\n\n        return res.json();\n      }).then(() => {\n        this.resetFields(newNote);\n        this.context.updateNote();\n        this.props.history.push('/');\n      }).catch(err => {\n        this.setState({\n          error: err.message\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    const noteId = this.props.match.params.noteId;\n    console.log(this.props.match.params.noteId);\n    console.log(this.context.updateNote);\n    fetch(\"http://localhost:8000/api/notes/\".concat(noteId), {\n      method: 'GET'\n    }).then(res => {\n      if (!res.ok) {\n        throw new Error('Something went wrong, please try again later');\n      }\n\n      return res.json();\n    }).then(data => {\n      this.setState({\n        name: data.name,\n        content: data.content,\n        folder: data.folder\n      });\n    }).catch(err => {\n      this.setState({\n        error: err.message\n      });\n    });\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          name = _this$state2.name,\n          content = _this$state2.content,\n          folder = _this$state2.folder;\n    const folders = this.context.folders;\n    return React.createElement(\"section\", {\n      className: \"EditNote\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Edit Note\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Name:\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"name\",\n      name: \"name\",\n      defaultValue: name,\n      onChange: this.handleNameChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"note-content-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Content\"), React.createElement(\"textarea\", {\n      type: \"text\",\n      id: \"content\",\n      name: \"content\",\n      defaultValue: content,\n      onChange: this.handleContentChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"note-folder-select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Folder\"), React.createElement(\"select\", {\n      id: \"selectedFolder\",\n      name: \"selectedFolder\",\n      defaultValue: folder,\n      onChange: this.handleFolderChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"...\"), folders.map(folder => React.createElement(\"option\", {\n      key: folder.id,\n      value: folder.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, folder.name)))), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"editButton\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Edit note\"))));\n  }\n\n}\nEditNote.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.object\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func\n  }).isRequired\n};\nEditNote.contextType = ApiContext;\nEditNote.contextType = ApiContext;","map":{"version":3,"sources":["/Users/rachelemilyperez/projects/noteful-app/noteful-app-client/src/EditNote/EditNote.js"],"names":["React","Component","PropTypes","ApiContext","EditNote","state","error","name","content","folder","handleNameChange","e","setState","target","value","handleContentChange","handleFolderChange","resetFields","newFields","handleSubmit","preventDefault","noteName","noteId","props","match","params","id","newNote","console","log","url","options","method","headers","body","JSON","stringify","fetch","then","res","ok","Error","json","context","updateNote","history","push","catch","err","message","componentDidMount","data","render","folders","map","propTypes","shape","object","func","isRequired","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './EditNote.css';\nimport ApiContext from '../ApiContext';\n \nexport default class EditNote extends Component {\n    \n    static propTypes = {\n        match: PropTypes.shape({\n          params: PropTypes.object,\n        }),\n        history: PropTypes.shape({\n          push: PropTypes.func,\n        }).isRequired,\n      };\n\n    static contextType = ApiContext\n\n   state = {\n       error: null,\n       name: \"\",\n       content: \"\",\n       folder: \"\"\n   }\n \n   static contextType = ApiContext\n \n   componentDidMount() {\n \n    const noteId  = this.props.match.params.noteId\n    console.log(this.props.match.params.noteId)\n    console.log(this.context.updateNote)\n\n   fetch(`http://localhost:8000/api/notes/${noteId}`, { method: 'GET'})\n       .then(res => {\n       if(!res.ok) {\n           throw new Error('Something went wrong, please try again later');\n       }\n       return res.json();\n       }) \n   .then(data => {\n        this.setState({\n                name: data.name,\n                content: data.content,\n                folder: data.folder\n        })\n       })\n   .catch(err => {\n       this.setState({\n           error: err.message\n           });\n       })\n   }\n \n   handleNameChange = e => {\n       this.setState({ name: e.target.value })\n     };\n \n   handleContentChange = e => {\n       this.setState({ content: e.target.value })\n   };\n \n   handleFolderChange = e => {\n       this.setState({ folder: e.target.value })\n     };\n\n    resetFields = (newFields) => {\n        this.setState({\n          name: newFields.name || '',\n          content: newFields.content || '',\n          folder: newFields.folder || '',\n        })\n    }\n \n   handleSubmit = e => {\n       e.preventDefault()\n       const noteName = e.target.name.value\n       this.setState ({\n          name: noteName\n       })\n       const noteId = this.props.match.params.noteId\n       const { id, name, content, folder } = this.state\n       const newNote = { id, name, content, folder }\n       console.log(newNote)\n \n       const url = `http://localhost:8000/api/notes/${noteId}`\n       const options = {\n           method: 'PATCH',\n            headers: {\n               'content-type': 'application/json'\n           },\n           body: JSON.stringify(newNote)\n       }\n       fetch(url, options)\n       .then(res => {\n       if(!res.ok) {\n           throw new Error('Something went wrong, please try again later');\n       }\n       return res.json();\n       }) \n       .then(() => {\n           this.resetFields(newNote)\n           this.context.updateNote()\n           this.props.history.push('/')\n       })\n    .catch(err => {\n       this.setState({\n           error: err.message\n           });\n       })\n}\n\n\nrender() {\n   const { name, content, folder  } = this.state\n   const folders = this.context.folders\n   return (\n     <section className='EditNote'>\n       <h2>Edit Note</h2>\n       <form onSubmit={this.handleSubmit}>\n           <div className='field'>\n               <label htmlFor='name-input'>\n               Name:\n               </label>\n               <input\n                   type='text'\n                   id='name'\n                   name='name'\n                   defaultValue={name}\n                   onChange={this.handleNameChange}\n               />\n           </div>\n           <div className='field'>\n             <label htmlFor='note-content-input'>\n               Content\n             </label>\n             <textarea\n             type='text'\n             id='content'\n             name='content'\n             defaultValue={content}\n             onChange={this.handleContentChange}/>\n           </div>\n           <div className='field'>\n             <label htmlFor='note-folder-select'>\n               Folder\n             </label>\n             <select id='selectedFolder' name='selectedFolder' defaultValue={folder} onChange={this.handleFolderChange} >\n               <option value={null}>...</option>\n               {folders.map(folder =>\n                 <option key={folder.id} value={folder.id}>\n                   {folder.name}\n                 </option>\n               )}\n             </select>\n           </div>\n           <div className='buttons'>\n               <button className='editButton' type='submit'>\n               Edit note\n               </button>\n           </div>\n       </form>\n     </section>\n   )\n }\n}\n\n"]},"metadata":{},"sourceType":"module"}