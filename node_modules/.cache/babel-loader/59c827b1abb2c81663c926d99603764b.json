{"ast":null,"code":"var _jsxFileName = \"/Users/rachelemilyperez/projects/noteful-app/noteful-app-client/src/EditNote/EditNote.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './EditNote.css';\nimport ApiContext from '../ApiContext';\nimport config from '../config';\nexport default class EditNote extends Component {\n  //     static propTypes = {\n  //         match: PropTypes.shape({\n  //           params: PropTypes.object,\n  //         }),\n  //         history: PropTypes.shape({\n  //           push: PropTypes.func,\n  //         }).isRequired,\n  //       };\n  //     state = {\n  //         error: null,\n  //         name: \"\",\n  //         content: \"\",\n  //         folder: \"\"\n  //     }\n  //     static contextType = ApiContext\n  //     componentDidMount() {\n  //     const noteId = this.props.match.params.noteId\n  //     fetch(`http://localhost:8000/api/folders/${noteId}`, { method: 'GET'})\n  //         .then(res => {\n  //         if(!res.ok) {\n  //             throw new Error('Something went wrong, please try again later');\n  //         }\n  //         return res.json();\n  //         })  \n  //     .then(data => {\n  //          this.setState({\n  //                  name: data.name,\n  //                  content: data.content,\n  //                  folder: data.folder\n  //          })\n  //         })\n  //     .catch(err => {\n  //         this.setState({\n  //             error: err.message\n  //             });\n  //         })\n  //     }\n  //     handleNameChange = e => {\n  //         this.setState({ name: e.target.value })\n  //       };\n  //     handleContentChange = e => {\n  //         this.setState({ content: e.target.value })\n  //     };\n  //     handleFolderChange = e => {\n  //         this.setState({ folder: e.target.value })\n  //       };\n  //     handleSubmit = e => {\n  //         e.preventDefault()\n  //         const noteName = e.target.name.value\n  //         this.setState ({\n  //            name: noteName\n  //         })\n  //         const noteId = this.props.match.params.noteId\n  //         const { id, name, content, folder } = this.state\n  //         const newNote = { id, name, content, folder }\n  //         const url = `http://localhost:8000/api/notes/${noteId}`\n  //         console.log(url)\n  //         const options = {\n  //             method: 'PATCH',\n  //              headers: {\n  //                 'content-type': 'application/json'\n  //             },\n  //             body: JSON.stringify(newNote)\n  //         }\n  //         fetch(url, options)\n  //         .then(res => {\n  //         if(!res.ok) {\n  //             throw new Error('Something went wrong, please try again later');\n  //         }\n  //         return res.json();\n  //         })  \n  //         .then(() => {\n  //             this.context.updateNote(newNote)\n  //             this.props.history.push('/')\n  //         })\n  //      .catch(err => {\n  //         this.setState({\n  //             error: err.message\n  //             });\n  //         })\n  // }\n  render() {\n    const _this$state = this.state,\n          name = _this$state.name,\n          content = _this$state.content,\n          folder = _this$state.folder;\n    const folders = this.props.folders;\n    return (//   <section className='EditNote'>\n      React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Edit Note\") //     <form onSubmit={this.handleSubmit}> \n      //         <div className='field'>\n      //             <label htmlFor='name-input'>\n      //             Name:\n      //             </label>\n      //             <input \n      //                 type='text' \n      //                 id='name' \n      //                 name='name'\n      //                 defaultValue={name}\n      //                 onChange={this.handleNameChange}\n      //                 />\n      //         </div>\n      //         <div className='field'>\n      //           <label htmlFor='note-content-input'>\n      //             Content\n      //           </label>\n      //           <textarea \n      //           type='text' \n      //           id='content' \n      //           name='content'\n      //           defaultValue={content}\n      //           onChange={this.handleContentsChange}/>\n      //         </div>\n      //         <div className='field'>\n      //           <label htmlFor='note-folder-select'>\n      //             Folder\n      //           </label>\n      //           <select id='selectedFolder' name='selectedFolder' defaultValue={folder} onChange={this.handleFolderChange} >\n      //             <option value={null}>...</option>\n      //             {folders.map(folder =>\n      //               <option key={folder.id} value={folder.id}>\n      //                 {folder.name}\n      //               </option>\n      //             )}\n      //           </select>\n      //         </div>\n      //         <div className='buttons'>\n      //             <button className='editButton' type='submit'>\n      //             Edit folder\n      //             </button>\n      //         </div>\n      //     </form>\n      //   </section>\n\n    );\n  }\n\n}","map":{"version":3,"sources":["/Users/rachelemilyperez/projects/noteful-app/noteful-app-client/src/EditNote/EditNote.js"],"names":["React","Component","PropTypes","ApiContext","config","EditNote","render","state","name","content","folder","folders","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,gBAAP;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,eAAe,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAK,EAAAA,MAAM,GAAG;AAAA,wBAC8B,KAAKC,KADnC;AAAA,UACGC,IADH,eACGA,IADH;AAAA,UACSC,OADT,eACSA,OADT;AAAA,UACkBC,MADlB,eACkBA,MADlB;AAEL,UAAMC,OAAO,GAAG,KAAKC,KAAL,CAAWD,OAA3B;AAEA,WACA;AACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA9CA;AAgDD;;AAlJ6C","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './EditNote.css';\nimport ApiContext from '../ApiContext';\nimport config from '../config'\n\nexport default class EditNote extends Component {\n\n//     static propTypes = {\n//         match: PropTypes.shape({\n//           params: PropTypes.object,\n//         }),\n//         history: PropTypes.shape({\n//           push: PropTypes.func,\n//         }).isRequired,\n//       };\n\n//     state = {\n//         error: null,\n//         name: \"\",\n//         content: \"\",\n//         folder: \"\"\n//     }\n\n//     static contextType = ApiContext\n\n//     componentDidMount() {\n\n//     const noteId = this.props.match.params.noteId\n\n//     fetch(`http://localhost:8000/api/folders/${noteId}`, { method: 'GET'})\n//         .then(res => {\n//         if(!res.ok) {\n//             throw new Error('Something went wrong, please try again later');\n//         }\n//         return res.json();\n//         })  \n//     .then(data => {\n//          this.setState({\n//                  name: data.name,\n//                  content: data.content,\n//                  folder: data.folder\n//          })\n//         })\n//     .catch(err => {\n//         this.setState({\n//             error: err.message\n//             });\n//         })\n//     }\n\n//     handleNameChange = e => {\n//         this.setState({ name: e.target.value })\n//       };\n\n//     handleContentChange = e => {\n//         this.setState({ content: e.target.value })\n//     };\n\n//     handleFolderChange = e => {\n//         this.setState({ folder: e.target.value })\n//       };\n\n//     handleSubmit = e => {\n//         e.preventDefault()\n//         const noteName = e.target.name.value\n//         this.setState ({\n//            name: noteName\n//         })\n//         const noteId = this.props.match.params.noteId\n//         const { id, name, content, folder } = this.state\n//         const newNote = { id, name, content, folder }\n\n//         const url = `http://localhost:8000/api/notes/${noteId}`\n//         console.log(url)\n//         const options = {\n//             method: 'PATCH',\n//              headers: {\n//                 'content-type': 'application/json'\n//             },\n//             body: JSON.stringify(newNote)\n//         }\n//         fetch(url, options)\n//         .then(res => {\n//         if(!res.ok) {\n//             throw new Error('Something went wrong, please try again later');\n//         }\n//         return res.json();\n//         })  \n//         .then(() => {\n//             this.context.updateNote(newNote)\n//             this.props.history.push('/')\n//         })\n//      .catch(err => {\n//         this.setState({\n//             error: err.message\n//             });\n//         })\n// }\n\nrender() {\n    const { name, content, folder  } = this.state\n    const folders = this.props.folders\n \n    return (\n    //   <section className='EditNote'>\n        <h2>Edit Note</h2>\n    //     <form onSubmit={this.handleSubmit}> \n    //         <div className='field'>\n    //             <label htmlFor='name-input'>\n    //             Name:\n    //             </label>\n    //             <input \n    //                 type='text' \n    //                 id='name' \n    //                 name='name'\n    //                 defaultValue={name}\n    //                 onChange={this.handleNameChange}\n    //                 />\n    //         </div>\n    //         <div className='field'>\n    //           <label htmlFor='note-content-input'>\n    //             Content\n    //           </label>\n    //           <textarea \n    //           type='text' \n    //           id='content' \n    //           name='content'\n    //           defaultValue={content}\n    //           onChange={this.handleContentsChange}/>\n    //         </div>\n    //         <div className='field'>\n    //           <label htmlFor='note-folder-select'>\n    //             Folder\n    //           </label>\n    //           <select id='selectedFolder' name='selectedFolder' defaultValue={folder} onChange={this.handleFolderChange} >\n    //             <option value={null}>...</option>\n    //             {folders.map(folder =>\n    //               <option key={folder.id} value={folder.id}>\n    //                 {folder.name}\n    //               </option>\n    //             )}\n    //           </select>\n    //         </div>\n    //         <div className='buttons'>\n    //             <button className='editButton' type='submit'>\n    //             Edit folder\n    //             </button>\n    //         </div>\n    //     </form>\n    //   </section>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}