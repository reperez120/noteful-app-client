{"ast":null,"code":"var _jsxFileName = \"/Users/rachelemilyperez/projects/noteful-app/noteful-app-client/src/EditNote/EditNote.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './EditNote.css';\nimport ApiContext from '../ApiContext';\nimport config from '../config';\nexport default class EditNote extends Component {\n  //     static propTypes = {\n  //         match: PropTypes.shape({\n  //           params: PropTypes.object,\n  //         }),\n  //         history: PropTypes.shape({\n  //           push: PropTypes.func,\n  //         }).isRequired,\n  //       };\n  //     state = {\n  //         error: null,\n  //         name: \"\",\n  //         content: \"\",\n  //         folder: \"\"\n  //     }\n  //     static contextType = ApiContext\n  //     componentDidMount() {\n  //     const noteId = this.props.match.params.noteId\n  //     fetch(`http://localhost:8000/api/folders/${noteId}`, { method: 'GET'})\n  //         .then(res => {\n  //         if(!res.ok) {\n  //             throw new Error('Something went wrong, please try again later');\n  //         }\n  //         return res.json();\n  //         })  \n  //     .then(data => {\n  //          this.setState({\n  //                  name: data.name,\n  //                  content: data.content,\n  //                  folder: data.folder\n  //          })\n  //         })\n  //     .catch(err => {\n  //         this.setState({\n  //             error: err.message\n  //             });\n  //         })\n  //     }\n  //     handleNameChange = e => {\n  //         this.setState({ name: e.target.value })\n  //       };\n  //     handleContentChange = e => {\n  //         this.setState({ content: e.target.value })\n  //     };\n  //     handleFolderChange = e => {\n  //         this.setState({ folder: e.target.value })\n  //       };\n  //     handleSubmit = e => {\n  //         e.preventDefault()\n  //         const noteName = e.target.name.value\n  //         this.setState ({\n  //            name: noteName\n  //         })\n  //         const noteId = this.props.match.params.noteId\n  //         const { id, name, content, folder } = this.state\n  //         const newNote = { id, name, content, folder }\n  //         const url = `http://localhost:8000/api/notes/${noteId}`\n  //         console.log(url)\n  //         const options = {\n  //             method: 'PATCH',\n  //              headers: {\n  //                 'content-type': 'application/json'\n  //             },\n  //             body: JSON.stringify(newNote)\n  //         }\n  //         fetch(url, options)\n  //         .then(res => {\n  //         if(!res.ok) {\n  //             throw new Error('Something went wrong, please try again later');\n  //         }\n  //         return res.json();\n  //         })  \n  //         .then(() => {\n  //             this.context.updateNote(newNote)\n  //             this.props.history.push('/')\n  //         })\n  //      .catch(err => {\n  //         this.setState({\n  //             error: err.message\n  //             });\n  //         })\n  // }\n  render() {\n    const _this$state = this.state,\n          name = _this$state.name,\n          content = _this$state.content,\n          folder = _this$state.folder;\n    const folders = this.props.folders;\n    return React.createElement(\"section\", {\n      className: \"EditNote\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Edit Note\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Name:\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"name\",\n      name: \"name\",\n      defaultValue: name,\n      onChange: this.handleNameChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"note-content-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Content\"), React.createElement(\"textarea\", {\n      type: \"text\",\n      id: \"content\",\n      name: \"content\",\n      defaultValue: content,\n      onChange: this.handleContentsChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"note-folder-select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Folder\"), React.createElement(\"select\", {\n      id: \"selectedFolder\",\n      name: \"selectedFolder\",\n      defaultValue: folder,\n      onChange: this.handleFolderChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"...\"), folders.map(folder => React.createElement(\"option\", {\n      key: folder.id,\n      value: folder.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, folder.name)))), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"editButton\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Edit folder\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/rachelemilyperez/projects/noteful-app/noteful-app-client/src/EditNote/EditNote.js"],"names":["React","Component","PropTypes","ApiContext","config","EditNote","render","state","name","content","folder","folders","props","handleSubmit","handleNameChange","handleContentsChange","handleFolderChange","map","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './EditNote.css';\nimport ApiContext from '../ApiContext';\nimport config from '../config'\n\nexport default class EditNote extends Component {\n\n//     static propTypes = {\n//         match: PropTypes.shape({\n//           params: PropTypes.object,\n//         }),\n//         history: PropTypes.shape({\n//           push: PropTypes.func,\n//         }).isRequired,\n//       };\n\n//     state = {\n//         error: null,\n//         name: \"\",\n//         content: \"\",\n//         folder: \"\"\n//     }\n\n//     static contextType = ApiContext\n\n//     componentDidMount() {\n\n//     const noteId = this.props.match.params.noteId\n\n//     fetch(`http://localhost:8000/api/folders/${noteId}`, { method: 'GET'})\n//         .then(res => {\n//         if(!res.ok) {\n//             throw new Error('Something went wrong, please try again later');\n//         }\n//         return res.json();\n//         })  \n//     .then(data => {\n//          this.setState({\n//                  name: data.name,\n//                  content: data.content,\n//                  folder: data.folder\n//          })\n//         })\n//     .catch(err => {\n//         this.setState({\n//             error: err.message\n//             });\n//         })\n//     }\n\n//     handleNameChange = e => {\n//         this.setState({ name: e.target.value })\n//       };\n\n//     handleContentChange = e => {\n//         this.setState({ content: e.target.value })\n//     };\n\n//     handleFolderChange = e => {\n//         this.setState({ folder: e.target.value })\n//       };\n\n//     handleSubmit = e => {\n//         e.preventDefault()\n//         const noteName = e.target.name.value\n//         this.setState ({\n//            name: noteName\n//         })\n//         const noteId = this.props.match.params.noteId\n//         const { id, name, content, folder } = this.state\n//         const newNote = { id, name, content, folder }\n\n//         const url = `http://localhost:8000/api/notes/${noteId}`\n//         console.log(url)\n//         const options = {\n//             method: 'PATCH',\n//              headers: {\n//                 'content-type': 'application/json'\n//             },\n//             body: JSON.stringify(newNote)\n//         }\n//         fetch(url, options)\n//         .then(res => {\n//         if(!res.ok) {\n//             throw new Error('Something went wrong, please try again later');\n//         }\n//         return res.json();\n//         })  \n//         .then(() => {\n//             this.context.updateNote(newNote)\n//             this.props.history.push('/')\n//         })\n//      .catch(err => {\n//         this.setState({\n//             error: err.message\n//             });\n//         })\n// }\n\nrender() {\n    const { name, content, folder  } = this.state\n    const folders = this.props.folders\n \n    return (\n      <section className='EditNote'>\n        <h2>Edit Note</h2>\n        <form onSubmit={this.handleSubmit}> \n            <div className='field'>\n                <label htmlFor='name-input'>\n                Name:\n                </label>\n                <input \n                    type='text' \n                    id='name' \n                    name='name'\n                    defaultValue={name}\n                    onChange={this.handleNameChange}\n                    />\n            </div>\n            <div className='field'>\n              <label htmlFor='note-content-input'>\n                Content\n              </label>\n              <textarea \n              type='text' \n              id='content' \n              name='content'\n              defaultValue={content}\n              onChange={this.handleContentsChange}/>\n            </div>\n            <div className='field'>\n              <label htmlFor='note-folder-select'>\n                Folder\n              </label>\n              <select id='selectedFolder' name='selectedFolder' defaultValue={folder} onChange={this.handleFolderChange} >\n                <option value={null}>...</option>\n                {folders.map(folder =>\n                  <option key={folder.id} value={folder.id}>\n                    {folder.name}\n                  </option>\n                )}\n              </select>\n            </div>\n            <div className='buttons'>\n                <button className='editButton' type='submit'>\n                Edit folder\n                </button>\n            </div>\n        </form>\n      </section>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}